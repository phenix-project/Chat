

 *******************************************************************************
mmtbx/monomer_library/tst_pdb_interpretation_2.py
from __future__ import absolute_import, division, print_function
from mmtbx import monomer_library
import mmtbx.monomer_library.server
import mmtbx.monomer_library.pdb_interpretation
from libtbx.utils import format_cpu_times
import sys

params = monomer_library.pdb_interpretation.master_params.extract()
params.flip_symmetric_amino_acids = False

'''
Once this test is fixed, please move it to tst_pdb_interpretation.
The test is in a separate file to avoid accumulating failures in tst_pdb_interpretation
'''

def exercise_HOP2(mon_lib_srv, ener_lib):
  raw_records = """\
CRYST1   19.545   17.217   16.395  90.00  90.00  90.00 P 1
ATOM      1  P    DA A   7      12.372   5.356  10.324  1.00 21.25           P
ATOM      2  OP1  DA A   7      13.776   5.000  10.699  1.00 24.88           O
ATOM      3  OP2  DA A   7      11.412   5.668  11.395  1.00 21.95           O
ATOM      4  O5'  DA A   7      12.418   6.531   9.251  1.00 18.66           O
ATOM      5  C5'  DA A   7      13.460   6.584   8.265  1.00 19.04           C
ATOM      6  C4'  DA A   7      13.188   7.694   7.275  1.00 17.77           C
ATOM      7  O4'  DA A   7      11.855   7.547   6.729  1.00 18.07           O
ATOM      8  C3'  DA A   7      13.197   9.107   7.852  1.00 19.00           C
ATOM      9  O3'  DA A   7      14.545   9.611   7.912  1.00 18.59           O
ATOM     10  C2'  DA A   7      12.361   9.876   6.841  1.00 17.51           C
ATOM     11  C1'  DA A   7      11.311   8.840   6.438  1.00 17.34           C
ATOM     12  N9   DA A   7      10.040   8.980   7.158  1.00 17.04           N
ATOM     13  C8   DA A   7       9.563   8.289   8.257  1.00 15.09           C
ATOM     14  N7   DA A   7       8.347   8.641   8.609  1.00 13.14           N
ATOM     15  C5   DA A   7       8.018   9.653   7.711  1.00 14.61           C
ATOM     16  C6   DA A   7       6.875  10.442   7.551  1.00 14.42           C
ATOM     17  N6   DA A   7       5.792  10.332   8.309  1.00 13.77           N
ATOM     18  N1   DA A   7       6.875  11.362   6.554  1.00 14.01           N
ATOM     19  C2   DA A   7       7.954  11.462   5.782  1.00 14.66           C
ATOM     20  N3   DA A   7       9.083  10.774   5.830  1.00 14.29           N
ATOM     21  C4   DA A   7       9.050   9.873   6.822  1.00 15.47           C
ATOM     22  H5'  DA A   7      13.512   5.632   7.731  1.00 17.63           H
ATOM     23 H5''  DA A   7      14.417   6.770   8.760  1.00 18.60           H
ATOM     24  H4'  DA A   7      13.973   7.663   6.511  1.00 18.30           H
ATOM     25  H3'  DA A   7      12.753   9.126   8.850  1.00 17.97           H
ATOM     26  H2'  DA A   7      11.917  10.765   7.288  1.00 18.28           H
ATOM     27 H2''  DA A   7      12.977  10.220   6.005  1.00 16.30           H
ATOM     28  H1'  DA A   7      11.113   8.874   5.362  1.00 17.98           H
ATOM     29  H8   DA A   7      10.146   7.552   8.798  1.00 16.21           H
ATOM     30  H2   DA A   7       7.905  12.217   5.000  1.00 11.67           H
ATOM     31  D61A DA A   7       5.787   9.643   9.039  0.67 12.16           D
ATOM     32  D62A DA A   7       5.000  10.943   8.131  0.89 13.67           D
ATOM     33 DOP2A DA A   7      10.894   6.398  11.013  0.79 22.75           D
ATOM     34  H61B DA A   7       5.787   9.643   9.039  0.33 12.16           H
ATOM     35  H62B DA A   7       5.000  10.943   8.131  0.11 13.67           H
ATOM     36 HOP2B DA A   7      10.894   6.398  11.013  0.21 22.75           H
END
""".splitlines()
  processed_pdb_file = monomer_library.pdb_interpretation.process(
    mon_lib_srv=mon_lib_srv,
    ener_lib=ener_lib,
    file_name=None,
    params=params,
    raw_records=raw_records,
    force_symmetry=True)

def run(args):
  assert len(args) == 0
  mon_lib_srv = monomer_library.server.server()
  ener_lib = monomer_library.server.ener_lib()
  if 0: exercise_HOP2(mon_lib_srv, ener_lib)
  else: print('skipping until complete conversion to v3.2 atom names')
  print(format_cpu_times())

if (__name__ == "__main__"):
  import sys
  run(args=sys.argv[1:])


 *******************************************************************************


 *******************************************************************************
mmtbx/monomer_library/tst_pdb_interpretation_3.py
from __future__ import absolute_import, division, print_function
from libtbx import easy_run
from libtbx.test_utils import approx_equal

pdb_6exy_ARG_168_D    = """\
CRYST1   37.314   58.352   63.867  90.00  90.00  90.00 P 21 21 21
ATOM      1  N   ARG A 168      22.726 -15.648  12.491  1.00 14.41           N
ATOM      2  CA  ARG A 168      22.811 -14.357  13.143  1.00 15.09           C
ATOM      3  C   ARG A 168      21.569 -13.549  12.811  1.00 13.95           C
ATOM      4  O   ARG A 168      20.857 -13.814  11.839  1.00 14.06           O
ATOM      5  CB  ARG A 168      24.057 -13.582  12.689  1.00 17.54           C
ATOM      6  CG  ARG A 168      25.343 -14.366  12.775  1.00 19.91           C
ATOM      7  CD  ARG A 168      25.613 -14.857  14.174  1.00 20.97           C
ATOM      8  NE  ARG A 168      26.737 -15.790  14.190  1.00 21.81           N
ATOM      9  CZ  ARG A 168      26.658 -17.059  14.578  1.00 21.76           C
ATOM     10  NH1 ARG A 168      27.742 -17.813  14.539  1.00 21.87           N
ATOM     11  NH2 ARG A 168      25.521 -17.587  15.017  1.00 21.76           N
ATOM     12  D   ARG A 168      22.668 -15.599  11.475  1.00 14.15           D
ATOM     13  DA  ARG A 168      22.844 -14.490  14.224  1.00 15.42           D
ATOM     14  DB2 ARG A 168      23.915 -13.295  11.650  1.00 17.96           D
ATOM     15  DB3 ARG A 168      24.174 -12.692  13.305  1.00 17.77           D
ATOM     16  DD2 ARG A 168      25.863 -14.006  14.804  1.00 21.25           D
ATOM     17  DD3 ARG A 168      24.731 -15.354  14.564  1.00 21.33           D
ATOM     18  DE  ARG A 168      27.476 -15.591  13.512  1.00 21.85           D
ATOM     19  DG2 ARG A 168      25.288 -15.225  12.102  1.00 20.44           D
ATOM     20  DG3 ARG A 168      26.173 -13.708  12.500  1.00 20.06           D
ATOM     21 DH11 ARG A 168      28.617 -17.413  14.207  1.00 22.11           D
ATOM     22 DH12 ARG A 168      27.696 -18.788  14.835  1.00 21.99           D
ATOM     23 DH21 ARG A 168      25.514 -18.567  15.308  1.00 21.74           D
ATOM     24 DH22 ARG A 168      24.658 -17.044  15.059  1.00 21.55           D
TER
END
"""

pdb_6exy_ARG_168_H    = """\
CRYST1   37.314   58.352   63.867  90.00  90.00  90.00 P 21 21 21
ATOM      1  N   ARG A 168      22.726 -15.648  12.491  1.00 14.41           N
ATOM      2  CA  ARG A 168      22.811 -14.357  13.143  1.00 15.09           C
ATOM      3  C   ARG A 168      21.569 -13.549  12.811  1.00 13.95           C
ATOM      4  O   ARG A 168      20.857 -13.814  11.839  1.00 14.06           O
ATOM      5  CB  ARG A 168      24.057 -13.582  12.689  1.00 17.54           C
ATOM      6  CG  ARG A 168      25.343 -14.366  12.775  1.00 19.91           C
ATOM      7  CD  ARG A 168      25.613 -14.857  14.174  1.00 20.97           C
ATOM      8  NE  ARG A 168      26.737 -15.790  14.190  1.00 21.81           N
ATOM      9  CZ  ARG A 168      26.658 -17.059  14.578  1.00 21.76           C
ATOM     10  NH1 ARG A 168      27.742 -17.813  14.539  1.00 21.87           N
ATOM     11  NH2 ARG A 168      25.521 -17.587  15.017  1.00 21.76           N
ATOM     12  H   ARG A 168      22.668 -15.599  11.475  1.00 14.15           H
ATOM     13  HA  ARG A 168      22.844 -14.490  14.224  1.00 15.42           H
ATOM     14  HB2 ARG A 168      23.915 -13.295  11.650  1.00 17.96           H
ATOM     15  HB3 ARG A 168      24.174 -12.692  13.305  1.00 17.77           H
ATOM     16  HD2 ARG A 168      25.863 -14.006  14.804  1.00 21.25           H
ATOM     17  HD3 ARG A 168      24.731 -15.354  14.564  1.00 21.33           H
ATOM     18  HE  ARG A 168      27.476 -15.591  13.512  1.00 21.85           H
ATOM     19  HG2 ARG A 168      25.288 -15.225  12.102  1.00 20.44           H
ATOM     20  HG3 ARG A 168      26.173 -13.708  12.500  1.00 20.06           H
ATOM     21 HH11 ARG A 168      28.617 -17.413  14.207  1.00 22.11           H
ATOM     22 HH12 ARG A 168      27.696 -18.788  14.835  1.00 21.99           H
ATOM     23 HH21 ARG A 168      25.514 -18.567  15.308  1.00 21.74           H
ATOM     24 HH22 ARG A 168      24.658 -17.044  15.059  1.00 21.55           H
TER
END
"""

pdb_6exy_ARG_168_HD   = """\
CRYST1   37.314   58.352   63.867  90.00  90.00  90.00 P 21 21 21
ATOM      1  N   ARG A 168      22.726 -15.648  12.491  1.00 14.41           N
ATOM      2  CA  ARG A 168      22.811 -14.357  13.143  1.00 15.09           C
ATOM      3  C   ARG A 168      21.569 -13.549  12.811  1.00 13.95           C
ATOM      4  O   ARG A 168      20.857 -13.814  11.839  1.00 14.06           O
ATOM      5  CB  ARG A 168      24.057 -13.582  12.689  1.00 17.54           C
ATOM      6  CG  ARG A 168      25.343 -14.366  12.775  1.00 19.91           C
ATOM      7  CD  ARG A 168      25.613 -14.857  14.174  1.00 20.97           C
ATOM      8  NE  ARG A 168      26.737 -15.790  14.190  1.00 21.81           N
ATOM      9  CZ  ARG A 168      26.658 -17.059  14.578  1.00 21.76           C
ATOM     10  NH1 ARG A 168      27.742 -17.813  14.539  1.00 21.87           N
ATOM     11  NH2 ARG A 168      25.521 -17.587  15.017  1.00 21.76           N

ATOM     12  H  AARG A 168      22.668 -15.599  11.475  0.50 14.15           H
ATOM     13  HA AARG A 168      22.844 -14.490  14.224  0.50 15.42           H
ATOM     14  HB2AARG A 168      23.915 -13.295  11.650  0.50 17.96           H
ATOM     15  HB3AARG A 168      24.174 -12.692  13.305  0.50 17.77           H
ATOM     16  HD2AARG A 168      25.863 -14.006  14.804  0.50 21.25           H
ATOM     17  HD3AARG A 168      24.731 -15.354  14.564  0.50 21.33           H
ATOM     18  HE AARG A 168      27.476 -15.591  13.512  0.50 21.85           H
ATOM     19  HG2AARG A 168      25.288 -15.225  12.102  0.50 20.44           H
ATOM     20  HG3AARG A 168      26.173 -13.708  12.500  0.50 20.06           H
ATOM     21 HH11AARG A 168      28.617 -17.413  14.207  0.50 22.11           H
ATOM     22 HH12AARG A 168      27.696 -18.788  14.835  0.50 21.99           H
ATOM     23 HH21AARG A 168      25.514 -18.567  15.308  0.50 21.74           H
ATOM     24 HH22AARG A 168      24.658 -17.044  15.059  0.50 21.55           H

ATOM     12  D  BARG A 168      22.668 -15.599  11.475  0.50 14.15           D
ATOM     13  DA BARG A 168      22.844 -14.490  14.224  0.50 15.42           D
ATOM     14  DB2BARG A 168      23.915 -13.295  11.650  0.50 17.96           D
ATOM     15  DB3BARG A 168      24.174 -12.692  13.305  0.50 17.77           D
ATOM     16  DD2BARG A 168      25.863 -14.006  14.804  0.50 21.25           D
ATOM     17  DD3BARG A 168      24.731 -15.354  14.564  0.50 21.33           D
ATOM     18  DE BARG A 168      27.476 -15.591  13.512  0.50 21.85           D
ATOM     19  DG2BARG A 168      25.288 -15.225  12.102  0.50 20.44           D
ATOM     20  DG3BARG A 168      26.173 -13.708  12.500  0.50 20.06           D
ATOM     21 DH11BARG A 168      28.617 -17.413  14.207  0.50 22.11           D
ATOM     22 DH12BARG A 168      27.696 -18.788  14.835  0.50 21.99           D
ATOM     23 DH21BARG A 168      25.514 -18.567  15.308  0.50 21.74           D
ATOM     24 DH22BARG A 168      24.658 -17.044  15.059  0.50 21.55           D
TER
END
"""

pdb_6exy_ARG_168_ac_D = """\
CRYST1   37.314   58.352   63.867  90.00  90.00  90.00 P 21 21 21
ATOM      1  N  AARG A 168      22.726 -15.648  12.491  0.46 14.41           N
ATOM      2  CA AARG A 168      22.811 -14.357  13.143  0.46 15.09           C
ATOM      3  C  AARG A 168      21.569 -13.549  12.811  0.46 13.95           C
ATOM      4  O  AARG A 168      20.857 -13.814  11.839  0.46 14.06           O
ATOM      5  CB AARG A 168      24.057 -13.582  12.689  0.46 17.54           C
ATOM      6  CG AARG A 168      25.343 -14.366  12.775  0.46 19.91           C
ATOM      7  CD AARG A 168      25.613 -14.857  14.174  0.46 20.97           C
ATOM      8  NE AARG A 168      26.737 -15.790  14.190  0.46 21.81           N
ATOM      9  CZ AARG A 168      26.658 -17.059  14.578  0.46 21.76           C
ATOM     10  NH1AARG A 168      27.742 -17.813  14.539  0.46 21.87           N
ATOM     11  NH2AARG A 168      25.521 -17.587  15.017  0.46 21.76           N
ATOM     12  D  AARG A 168      22.668 -15.599  11.475  0.46 14.15           D
ATOM     13  DA AARG A 168      22.844 -14.490  14.224  0.46 15.42           D
ATOM     14  DB2AARG A 168      23.915 -13.295  11.650  0.46 17.96           D
ATOM     15  DB3AARG A 168      24.174 -12.692  13.305  0.46 17.77           D
ATOM     16  DD2AARG A 168      25.863 -14.006  14.804  0.46 21.25           D
ATOM     17  DD3AARG A 168      24.731 -15.354  14.564  0.46 21.33           D
ATOM     18  DE AARG A 168      27.476 -15.591  13.512  0.46 21.85           D
ATOM     19  DG2AARG A 168      25.288 -15.225  12.102  0.46 20.44           D
ATOM     20  DG3AARG A 168      26.173 -13.708  12.500  0.46 20.06           D
ATOM     21 DH11AARG A 168      28.617 -17.413  14.207  0.46 22.11           D
ATOM     22 DH12AARG A 168      27.696 -18.788  14.835  0.46 21.99           D
ATOM     23 DH21AARG A 168      25.514 -18.567  15.308  0.46 21.74           D
ATOM     24 DH22AARG A 168      24.658 -17.044  15.059  0.46 21.55           D
ATOM     25  N  BARG A 168      22.711 -15.649  12.474  0.54 14.14           N
ATOM     26  CA BARG A 168      22.916 -14.337  13.062  0.54 14.70           C
ATOM     27  C  BARG A 168      21.754 -13.431  12.679  0.54 13.29           C
ATOM     28  O  BARG A 168      21.184 -13.538  11.588  0.54 13.90           O
ATOM     29  CB BARG A 168      24.218 -13.716  12.533  0.54 17.49           C
ATOM     30  CG BARG A 168      25.439 -14.599  12.700  0.54 20.99           C
ATOM     31  CD BARG A 168      26.144 -14.335  14.005  0.54 22.91           C
ATOM     32  NE BARG A 168      27.298 -15.226  14.175  0.54 24.26           N
ATOM     33  CZ BARG A 168      28.570 -14.887  13.964  0.54 24.87           C
ATOM     34  NH1BARG A 168      29.519 -15.802  14.139  0.54 24.92           N
ATOM     35  NH2BARG A 168      28.905 -13.657  13.596  0.54 24.77           N
ATOM     36  D  BARG A 168      22.563 -15.624  11.467  0.54 13.85           D
ATOM     37  DA BARG A 168      22.959 -14.410  14.146  0.54 15.03           D
ATOM     38  DB2BARG A 168      24.096 -13.533  11.468  0.54 17.99           D
ATOM     39  DB3BARG A 168      24.418 -12.777  13.046  0.54 17.29           D
ATOM     40  DD2BARG A 168      26.474 -13.296  14.007  0.54 23.34           D
ATOM     41  DD3BARG A 168      25.450 -14.509  14.828  0.54 22.84           D
ATOM     42  DE BARG A 168      27.141 -16.106  14.675  0.54 24.26           D
ATOM     43  DG2BARG A 168      25.143 -15.649  12.671  0.54 21.23           D
ATOM     44  DG3BARG A 168      26.149 -14.391  11.896  0.54 21.33           D
ATOM     45 DH11BARG A 168      29.265 -16.742  14.428  0.54 24.77           D
ATOM     46 DH12BARG A 168      30.500 -15.563  13.994  0.54 25.10           D
ATOM     47 DH21BARG A 168      29.887 -13.425  13.448  0.54 24.89           D
ATOM     48 DH22BARG A 168      28.193 -12.942  13.455  0.54 24.59           D
TER
END
"""

pdb_6exy_ARG_168_ac_H = """\
CRYST1   37.314   58.352   63.867  90.00  90.00  90.00 P 21 21 21
SCALE1      0.026800  0.000000  0.000000        0.00000
SCALE2      0.000000  0.017137  0.000000        0.00000
SCALE3      0.000000  0.000000  0.015658        0.00000
ATOM      1  N  AARG A 168      22.726 -15.648  12.491  0.46 14.41           N
ATOM      2  CA AARG A 168      22.811 -14.357  13.143  0.46 15.09           C
ATOM      3  C  AARG A 168      21.569 -13.549  12.811  0.46 13.95           C
ATOM      4  O  AARG A 168      20.857 -13.814  11.839  0.46 14.06           O
ATOM      5  CB AARG A 168      24.057 -13.582  12.689  0.46 17.54           C
ATOM      6  CG AARG A 168      25.343 -14.366  12.775  0.46 19.91           C
ATOM      7  CD AARG A 168      25.613 -14.857  14.174  0.46 20.97           C
ATOM      8  NE AARG A 168      26.737 -15.790  14.190  0.46 21.81           N
ATOM      9  CZ AARG A 168      26.658 -17.059  14.578  0.46 21.76           C
ATOM     10  NH1AARG A 168      27.742 -17.813  14.539  0.46 21.87           N
ATOM     11  NH2AARG A 168      25.521 -17.587  15.017  0.46 21.76           N
ATOM     12  H  AARG A 168      22.668 -15.599  11.475  0.46 14.15           H
ATOM     13  HA AARG A 168      22.844 -14.490  14.224  0.46 15.42           H
ATOM     14  HB2AARG A 168      23.915 -13.295  11.650  0.46 17.96           H
ATOM     15  HB3AARG A 168      24.174 -12.692  13.305  0.46 17.77           H
ATOM     16  HD2AARG A 168      25.863 -14.006  14.804  0.46 21.25           H
ATOM     17  HD3AARG A 168      24.731 -15.354  14.564  0.46 21.33           H
ATOM     18  HE AARG A 168      27.476 -15.591  13.512  0.46 21.85           H
ATOM     19  HG2AARG A 168      25.288 -15.225  12.102  0.46 20.44           H
ATOM     20  HG3AARG A 168      26.173 -13.708  12.500  0.46 20.06           H
ATOM     21 HH11AARG A 168      28.617 -17.413  14.207  0.46 22.11           H
ATOM     22 HH12AARG A 168      27.696 -18.788  14.835  0.46 21.99           H
ATOM     23 HH21AARG A 168      25.514 -18.567  15.308  0.46 21.74           H
ATOM     24 HH22AARG A 168      24.658 -17.044  15.059  0.46 21.55           H
ATOM     25  N  BARG A 168      22.711 -15.649  12.474  0.54 14.14           N
ATOM     26  CA BARG A 168      22.916 -14.337  13.062  0.54 14.70           C
ATOM     27  C  BARG A 168      21.754 -13.431  12.679  0.54 13.29           C
ATOM     28  O  BARG A 168      21.184 -13.538  11.588  0.54 13.90           O
ATOM     29  CB BARG A 168      24.218 -13.716  12.533  0.54 17.49           C
ATOM     30  CG BARG A 168      25.439 -14.599  12.700  0.54 20.99           C
ATOM     31  CD BARG A 168      26.144 -14.335  14.005  0.54 22.91           C
ATOM     32  NE BARG A 168      27.298 -15.226  14.175  0.54 24.26           N
ATOM     33  CZ BARG A 168      28.570 -14.887  13.964  0.54 24.87           C
ATOM     34  NH1BARG A 168      29.519 -15.802  14.139  0.54 24.92           N
ATOM     35  NH2BARG A 168      28.905 -13.657  13.596  0.54 24.77           N
ATOM     36  H  BARG A 168      22.563 -15.624  11.467  0.54 13.85           H
ATOM     37  HA BARG A 168      22.959 -14.410  14.146  0.54 15.03           H
ATOM     38  HB2BARG A 168      24.096 -13.533  11.468  0.54 17.99           H
ATOM     39  HB3BARG A 168      24.418 -12.777  13.046  0.54 17.29           H
ATOM     40  HD2BARG A 168      26.474 -13.296  14.007  0.54 23.34           H
ATOM     41  HD3BARG A 168      25.450 -14.509  14.828  0.54 22.84           H
ATOM     42  HE BARG A 168      27.141 -16.106  14.675  0.54 24.26           H
ATOM     43  HG2BARG A 168      25.143 -15.649  12.671  0.54 21.23           H
ATOM     44  HG3BARG A 168      26.149 -14.391  11.896  0.54 21.33           H
ATOM     45 HH11BARG A 168      29.265 -16.742  14.428  0.54 24.77           H
ATOM     46 HH12BARG A 168      30.500 -15.563  13.994  0.54 25.10           H
ATOM     47 HH21BARG A 168      29.887 -13.425  13.448  0.54 24.89           H
ATOM     48 HH22BARG A 168      28.193 -12.942  13.455  0.54 24.59           H
TER
END
"""

def _run_and_get_target(pdb_str):
  result = None
  file_name_prefix = "tst_pdb_interpretation_3"
  with open("%s.pdb"%file_name_prefix, "w") as fo:
    fo.write(pdb_str)
  assert not easy_run.call("phenix.pdb_interpretation %s.pdb > %s.log"%(
    file_name_prefix,file_name_prefix))
  with open("%s.log"%file_name_prefix, "r") as fo:
    for l in fo.readlines():
      if l.startswith("  target:"):
        l = float(l.strip().split()[1])
        result = l
        break
  assert result is not None
  return result

def run():
  r1 = _run_and_get_target(pdb_6exy_ARG_168_D)
  r2 = _run_and_get_target(pdb_6exy_ARG_168_H)
  r3 = _run_and_get_target(pdb_6exy_ARG_168_HD)
  r4 = _run_and_get_target(pdb_6exy_ARG_168_ac_D)
  r5 = _run_and_get_target(pdb_6exy_ARG_168_ac_H)
  assert approx_equal(r1,r2, 1.e-3)
  assert approx_equal(r1,675.542, 1.e-1)
  assert approx_equal(r4,r5, 1.e-3)
  assert approx_equal(r4,1332.54, 1.e-1)
  assert approx_equal(r3,1340.87, 1.e-1)

if (__name__ == "__main__"):
  run()
  print("OK")


 *******************************************************************************


 *******************************************************************************
mmtbx/monomer_library/tst_pdb_interpretation_ncs_processing.py
from __future__ import absolute_import, division, print_function
import mmtbx.monomer_library.pdb_interpretation as pdb_interpretation
from libtbx.utils import null_out
from datetime import datetime
import iotbx.phil
import unittest
import shutil
import os
from six.moves import map

__author__ = 'Youval Dar'

# control if temp folder will be deleted after test
DEBUG_MODE = False

test_pdb_str  = '''\
CRYST1  577.812  448.715  468.790  90.00  90.00  90.00 P 1
SCALE1      0.001731  0.000000  0.000000        0.00000
SCALE2      0.000000  0.002229  0.000000        0.00000
SCALE3      0.000000  0.000000  0.002133        0.00000
ATOM      1  CA  LYS A 151      10.766   9.333  12.905  1.00 44.22           C
ATOM      2  CA  LYS A 152      10.117   9.159  11.610  1.00 49.42           C
ATOM      3  CA  LYS A 153       9.099   8.000  11.562  1.00 46.15           C
ATOM      4  CA  LYS A 154       8.000   8.202  11.065  1.00 52.97           C
ATOM      5  CA  LYS A 155      11.146   9.065  10.474  1.00 41.68           C
ATOM      6  CA  LYS A 156      10.547   9.007   9.084  1.00 55.55           C
ATOM      7  CA  LYS A 157      11.545   9.413   8.000  1.00 72.27           C
ATOM      8  CA  LYS A 158      12.277  10.718   8.343  1.00 75.78           C
ATOM      9  CA  LYS A 159      11.349  11.791   8.809  1.00 75.88           C
TER
ATOM    222  CA  LEU X  40      94.618  -5.253  91.582  1.00 87.10           C
ATOM    223  CA  ARG X  41      62.395  51.344  80.786  1.00107.25           C
ATOM    224  CA  ARG X  42      62.395  41.344  80.786  1.00107.25           C
TER
ATOM      1  CA  THR D   1       8.111  11.080  10.645  1.00 20.00           C
ATOM      2  CA  THR D   2       8.000   9.722  10.125  1.00 20.00           C
ATOM      3  CA  THR D   3       8.075   8.694  11.249  1.00 20.00           C
ATOM      4  CA  THR D   4       8.890   8.818  12.163  1.00 20.00           C
ATOM      5  CA  THR D   5       9.101   9.421   9.092  1.00 20.00           C
ATOM      6  CA  THR D   6       9.001  10.343   8.000  1.00 20.00           C
ATOM      7  CA  THR D   7       8.964   8.000   8.565  1.00 20.00           C
TER
ATOM      1  CA  LYS B 151       6.855   8.667  15.730  1.00 44.22           C
ATOM      2  CA  LYS B 152       5.891   8.459  14.655  1.00 49.42           C
ATOM      3  CA  LYS B 153       6.103   7.155  13.858  1.00 46.15           C
ATOM      4  CA  LYS B 154       5.138   6.438  13.633  1.00 52.97           C
ATOM      5  CA  LYS B 155       5.801   9.685  13.736  1.00 41.68           C
ATOM      6  CA  LYS B 156       4.731   9.594  12.667  1.00 55.55           C
ATOM      7  CA  LYS B 157       4.334  10.965  12.119  1.00 72.27           C
ATOM      8  CA  LYS B 158       4.057  11.980  13.238  1.00 75.78           C
ATOM      9  CA  LYS B 159       3.177  11.427  14.310  1.00 75.88           C
TER
ATOM      1  CA  LYS C 151       6.987   4.106  17.432  1.00 44.22           C
ATOM      2  CA  LYS C 152       6.017   3.539  16.502  1.00 49.42           C
ATOM      3  CA  LYS C 153       6.497   3.492  15.036  1.00 46.15           C
ATOM      4  CA  LYS C 154       6.348   2.458  14.400  1.00 52.97           C
ATOM      5  CA  LYS C 155       4.647   4.221  16.634  1.00 41.68           C
ATOM      6  CA  LYS C 156       3.552   3.605  15.788  1.00 55.55           C
ATOM      7  CA  LYS C 157       2.154   3.953  16.298  1.00 72.27           C
ATOM      8  CA  LYS C 158       2.014   3.732  17.811  1.00 75.78           C
ATOM      9  CA  LYS C 159       2.558   2.413  18.250  1.00 75.88           C
TER
ATOM    222  CA  LEU Y  40     194.618   5.253  81.582  1.00 87.10           C
ATOM    223  CA  ARG Y  41     162.395  41.344  70.786  1.00107.25           C
ATOM    224  CA  ARG Y  42     162.395  31.344  70.786  1.00107.25           C
TER
ATOM      1  CA  THR E   1       8.111 -10.645  11.080  1.00 20.00           C
ATOM      2  CA  THR E   2       8.000 -10.125   9.722  1.00 20.00           C
ATOM      3  CA  THR E   3       8.075 -11.249   8.694  1.00 20.00           C
ATOM      4  CA  THR E   4       8.890 -12.163   8.818  1.00 20.00           C
ATOM      5  CA  THR E   5       9.101  -9.092   9.421  1.00 20.00           C
ATOM      6  CA  THR E   6       9.001  -8.000  10.343  1.00 20.00           C
ATOM      7  CA  THR E   7       8.964  -8.565   8.000  1.00 20.00           C
TER
'''

master_params = '''\
    include scope mmtbx.monomer_library.pdb_interpretation.master_params_str
'''


class TestPDBinterpretationNCSSearch(unittest.TestCase):

  def setUp(self):
    """ Create temporary folder for temp files produced during test """
    self.current_dir = os.getcwd()
    now = datetime.now().strftime("%I%p_%m_%d_%Y")
    test_name = self.__class__.__name__
    self.tempdir = '{}_{}'.format(test_name, now)
    if not os.path.isdir(self.tempdir):
      os.mkdir(self.tempdir)
    os.chdir(self.tempdir)
    #
    open('test.pdb','w').write(test_pdb_str)

  def test_calling_pdb_interpretation(self):
    """ Make sure can create NCS object and change search parameters """
    params_phil = iotbx.phil.parse(
      input_string=master_params,
      process_includes=True)
    params = params_phil.extract()
    # Turn on NCS search and adjust one of the parameters
    params.ncs_search.enabled = True
    pdb_processed_file = pdb_interpretation.run(
    args=['test.pdb'],
    params=params,
    log=null_out())
    ncs_obj = pdb_processed_file.ncs_obj
    self.assertEqual(ncs_obj.number_of_ncs_groups,2)

  def tearDown(self):
    """
    remove temp files and folder
    When DEBUG_MODE = True, the temporary folder will not be deleted
    """
    os.chdir(self.current_dir)
    if not DEBUG_MODE:
      try:
        shutil.rmtree(self.tempdir)
      except Exception:
        pass

def run_selected_tests():
  """  Run selected tests

  1) List in "tests" the names of the particular test you want to run
  2) Comment out unittest.main()
  3) Un-comment unittest.TextTestRunner().run(run_selected_tests())
  """
  tests = ['some_test_name']
  suite = unittest.TestSuite(list(map(TestPDBinterpretationNCSSearch, tests)))
  return suite


if __name__ == '__main__':
  # use for individual tests
  # DEBUG_MODE = True
  # unittest.TextTestRunner().run(run_selected_tests())

  # Use to run all tests
  unittest.main(verbosity=0)


 *******************************************************************************


 *******************************************************************************
mmtbx/monomer_library/tst_protein_interpretation.py
from __future__ import absolute_import, division, print_function
from mmtbx.monomer_library.tst_rna_dna_interpretation import run
import sys

expected_results = {
"cys_chain_all_h_1so9_v3":
  ['CYS', 11, [], 'peptide', None, None],
"phe_nterm_all_h_1g7a_v3":
  ['PHE%NH3', 22, [], 'peptide', True, None],
"ile_nterm_all_h_1v1c_v3":
  ['ILE%NH3', 21, [], 'peptide', True, None],
"ile_nterm_all_h_1ghx_v2":
  ['ILE%NH3', 21, [], 'peptide', True, None],
"ile_nterm_all_h_1v1c_v2":
  ['ILE%NH3', 21, [], 'peptide', True, None],
"met_cterm_all_h_1hz3_v2":
  ['MET%COOH', 19, [], 'peptide', True, None],
"his_chain_all_h_1g7e_v2":
  ['HIS', 18, [], 'peptide', None, None],
"arg_nterm_all_h_5pti_v2":
  ['ARG%NH3', 26, [], 'peptide', True, None],
"trp_chain_all_h_1hdp_v2":
  ['TRP', 24, [], 'peptide', None, None],
"asp_chain_all_h_2izb_v2":
  ['ASP', 12, [' HD1'], 'peptide', None, None],
"val_nterm_all_h_1qn1_v3":
  ['VAL%NH3', 18, [], 'peptide', True, None],
"lys_nterm_all_h_1gcc_v2":
  ['LYS%NH3', 24, [], 'peptide', True, None],
"leu_chain_all_h_1ozo_v3":
  ['LEU', 19, [], 'peptide', None, None],
"gly_nterm_all_h_1qg1_v3":
  ['GLY%NH3', 9, [], 'peptide', True, None],
"phe_nterm_all_h_1e0e_v3":
  ['PHE%NH3', 22, [], 'peptide', True, None],
"tyr_nterm_all_h_1d1n_v2":
  ['TYR%NH3', 23, [], 'peptide', True, None],
"glu_nterm_all_h_2bic_v2":
  ['GLU%ACID-GLU%NH3', 18, [], 'peptide', True, None],
"ile_cterm_all_h_1pog_v3":
  ['ILE%COOH', 21, [], 'peptide', True, None],
"met_nterm_all_h_1qqi_v2":
  ['MET%NH3', 19, [], 'peptide', True, None],
"ser_chain_all_h_1o8t_v2":
  ['SER', 11, [], 'peptide', None, None],
"ala_nterm_all_h_1blq_v2":
  ['ALA%NH3', 12, [], 'peptide', True, None],
"phe_cterm_all_h_2jnr_v2":
  ['PHE%COOH', 22, [], 'peptide', True, None],
"val_nterm_all_h_1ylb_v2":
  ['VAL%NH3', 18, [], 'peptide', True, None],
"met_chain_all_h_1ozo_v3":
  ['MET', 17, [], 'peptide', None, None],
"asn_chain_all_h_1o8t_v3":
  ['ASN', 14, [], 'peptide', None, None],
"tyr_chain_all_h_1ozo_v3":
  ['TYR', 21, [], 'peptide', None, None],
"cys_chain_all_h_1so9_v2":
  ['CYS', 11, [], 'peptide', None, None],
"thr_nterm_all_h_1o8t_v3":
  ['THR%NH3', 16, [], 'peptide', True, None],
"ser_nterm_all_h_1gkt_v3":
  ['SER%NH3', 13, [], 'peptide', True, None],
"arg_nterm_all_h_1dpu_v3":
  ['ARG%NH3', 26, [], 'peptide', True, None],
"val_cterm_all_h_1cz2_v2":
  ['VAL%COOH', 18, [], 'peptide', True, None],
"gly_nterm_all_h_3ins_v2":
  ['GLY%NH3', 9, [], 'peptide', True, None],
"met_nterm_all_h_2j46_v3":
  ['MET%NH3', 19, [], 'peptide', True, None],
"his_nterm_all_h_2j5p_v2":
  ['HIS%NH3', 20, [], 'peptide', True, None],
"thr_nterm_all_h_2g3q_v3":
  ['THR%NH3', 16, [], 'peptide', True, None],
"tyr_chain_all_h_1cx1_v3":
  ['TYR', 21, [], 'peptide', None, None],
"ala_nterm_all_h_1vcx_v3":
  ['ALA%NH3', 12, [], 'peptide', True, None],
"lys_nterm_all_h_2bvb_v2":
  ['LYS%NH3', 24, [], 'peptide', True, None],
"asn_cterm_all_h_2cdx_v2":
  ['ASN%COOH', 16, [], 'peptide', True, None],
"lys_chain_all_h_1o8t_v3":
  ['LYS', 22, [], 'peptide', None, None],
"thr_nterm_all_h_2g3q_v2":
  ['THR%NH3', 16, [], 'peptide', True, None],
"tyr_nterm_all_h_1qo6_v2":
  ['TYR%NH3', 23, [], 'peptide', True, None],
"arg_chain_all_h_1o8t_v3":
  ['ARG', 24, [], 'peptide', None, None],
"trp_nterm_all_h_1fi6_v2":
  ['TRP%NH3', 26, [], 'peptide', True, None],
"leu_nterm_all_h_2bun_v3":
  ['LEU%NH3', 21, [], 'peptide', True, None],
"trp_chain_all_h_1cx1_v2":
  ['TRP', 24, [], 'peptide', None, None],
"ala_nterm_all_h_2bw2_v3":
  ['ALA%NH3', 12, [], 'peptide', True, None],
"phe_chain_all_h_1hdj_v2":
  ['PHE', 20, [], 'peptide', None, None],
"thr_chain_all_h_1o8t_v3":
  ['THR', 14, [], 'peptide', None, None],
"met_nterm_all_h_1d7q_v3":
  ['MET%NH3', 19, [], 'peptide', True, None],
"pro_nterm_all_h_2lhb_v2":
  ['PRO%NH2', 16, [], 'peptide', True, None],
"lys_chain_all_h_1o8t_v2":
  ['LYS', 22, [], 'peptide', None, None],
"ala_chain_all_h_1ozo_v2":
  ['ALA', 10, [], 'peptide', None, None],
"ala_cterm_all_h_1eio_v2":
  ['ALA%COOH', 12, [], 'peptide', True, None],
"asp_cterm_all_h_1kb8_v2":
  ['ASP%COOH%ACID-ASP', 15, [], 'peptide', True, None],
"ser_nterm_all_h_1gkt_v2":
  ['SER%NH3', 13, [], 'peptide', True, None],
"ile_nterm_all_h_1ghx_v3":
  ['ILE%NH3', 21, [], 'peptide', True, None],
"val_chain_all_h_1ozo_v3":
  ['VAL', 16, [], 'peptide', None, None],
"ser_nterm_all_h_1goe_v3":
  ['SER%NH3', 13, [], 'peptide', True, None],
"cys_nterm_all_h_1b9q_v2":
  ['CYS%NH3', 13, [], 'peptide', True, None],
"ile_nterm_all_h_1tkw_v2":
  ['ILE%NH3', 21, [], 'peptide', True, None],
"ile_nterm_all_h_1c2l_v2":
  ['ILE%NH2NOTPRO', 21, [], 'peptide', None, None],
"arg_nterm_all_h_1i9f_v2":
  ['ARG%NH2NOTPRO', 26, [], 'peptide', None, None],
"phe_nterm_all_h_3ins_v2":
  ['PHE%NH3', 22, [], 'peptide', True, None],
"asp_nterm_all_h_1x9v_v2":
  ['ASP%ACID-ASP%NH3', 15, [], 'peptide', True, None],
"leu_nterm_all_h_1edv_v3":
  ['LEU%NH3', 21, [], 'peptide', True, None],
"val_nterm_all_h_2mb5_v2":
  ['VAL%NH3', 18, [], 'peptide', True, None],
"trp_nterm_all_h_1c95_v3":
  ['TRP%NH3', 26, [], 'peptide', True, None],
"asp_chain_all_h_1jjx_v2":
  ['ASP', 12, ['2HD '], 'peptide', None, None],
"pro_nterm_all_h_2gs0_v3":
  ['PRO%NH2', 16, [], 'peptide', True, None],
"ala_nterm_all_h_1dgn_v2":
  ['ALA%NH3', 12, [], 'peptide', True, None],
"phe_nterm_all_h_3ins_v3":
  ['PHE%NH3', 22, [], 'peptide', True, None],
"glu_chain_all_h_1jjx_v2":
  ['GLU', 15, ['2HE '], 'peptide', None, None],
"asp_chain_all_h_1kgl_v3":
  ['ASP%ACID-ASP', 13, [], 'peptide', None, None],
"asp_chain_all_h_1jjx_v3":
  ['ASP%ACID-ASP', 13, [], 'peptide', None, None],
"gln_nterm_all_h_1w4h_v2":
  ['GLN%NH3', 19, [], 'peptide', True, None],
"his_nterm_all_h_1c17_v3":
  ['HIS%NH3', 20, [], 'peptide', True, None],
"ala_chain_all_h_1ozo_v3":
  ['ALA', 10, [], 'peptide', None, None],
"asn_chain_all_h_1o8t_v2":
  ['ASN', 14, [], 'peptide', None, None],
"glu_nterm_all_h_2bic_v3":
  ['GLU%ACID-GLU%NH3', 18, [], 'peptide', True, None],
"gln_chain_all_h_1o8t_v2":
  ['GLN', 17, [], 'peptide', None, None],
"arg_chain_all_h_1o8t_v2":
  ['ARG', 24, [], 'peptide', None, None],
"glu_chain_all_h_1bm4_v3":
  ['GLU%ACID-GLU', 16, [], 'peptide', None, None],
"phe_nterm_all_h_1e0e_v2":
  ['PHE%NH3', 22, [], 'peptide', True, None],
"cys_chain_all_h_1rfa_v2":
  ['CYS', 11, [], 'peptide', None, None],
"met_nterm_all_h_1qqi_v3":
  ['MET%NH3', 19, [], 'peptide', True, None],
"ile_nterm_all_h_1ntp_v3":
  ['ILE%NH3', 21, [], 'peptide', True, None],
"trp_nterm_all_h_1c95_v2":
  ['TRP%NH2NOTPRO', 26, [], 'peptide', None, None],
"ile_nterm_all_h_1p57_v2":
  ['ILE%NH2NOTPRO', 21, [], 'peptide', None, None],
"asn_nterm_all_h_1cej_v2":
  ['ASN%NH3', 16, [], 'peptide', True, None],
"leu_chain_all_h_2sn3_v3":
  ['LEU', 19, [], 'peptide', None, None],
"arg_nterm_all_h_1gxe_v2":
  ['ARG%NH3', 26, [], 'peptide', True, None],
"cys_chain_all_h_1rfa_v3":
  ['CYS', 11, [], 'peptide', None, None],
"asp_nterm_all_h_1x9v_v3":
  ['ASP%ACID-ASP%NH3', 15, [], 'peptide', True, None],
"phe_nterm_all_h_1g7a_v2":
  ['PHE%NH3', 22, [], 'peptide', True, None],
"his_chain_all_h_1g7e_v3":
  ['HIS', 18, [], 'peptide', None, None],
"trp_nterm_all_h_1haj_v2":
  ['TRP%NH3', 26, [], 'peptide', True, None],
"glu_chain_all_h_1jjx_v3":
  ['GLU%ACID-GLU', 16, [], 'peptide', None, None],
"thr_nterm_all_h_1o8t_v2":
  ['THR%NH3', 16, [], 'peptide', True, None],
"ser_nterm_all_h_1goe_v2":
  ['SER%NH3', 13, [], 'peptide', True, None],
"gln_nterm_all_h_1fmy_v2":
  ['GLN%NH3', 19, [], 'peptide', True, None],
"pro_chain_all_h_1a03_v2":
  ['PRO', 14, [], 'peptide', None, None],
"ala_nterm_all_h_1dgn_v3":
  ['ALA%NH3', 12, [], 'peptide', True, None],
"glu_chain_all_h_1tmr_v3":
  ['GLU%ACID-GLU', 16, [], 'peptide', None, None],
"lys_cterm_all_h_1aze_v3":
  ['LYS%COOH', 24, [], 'peptide', True, None],
"glu_chain_all_h_1bm4_v2":
  ['GLU%ACID-GLU', 16, [], 'peptide', None, None],
"trp_chain_all_h_1hdp_v3":
  ['TRP', 24, [], 'peptide', None, None],
"tyr_nterm_all_h_1qo6_v3":
  ['TYR%NH3', 23, [], 'peptide', True, None],
"gly_nterm_all_h_1o7b_v3":
  ['GLY%NH3', 9, [], 'peptide', True, None],
"tyr_nterm_all_h_1lxh_v2":
  ['TYR%NH3', 23, [], 'peptide', True, None],
"lys_nterm_all_h_1io5_v2":
  ['LYS%NH3', 24, [], 'peptide', True, None],
"ser_chain_all_h_1o8t_v3":
  ['SER', 11, [], 'peptide', None, None],
"arg_cterm_all_h_1mmc_v3":
  ['ARG%COOH', 26, [], 'peptide', True, None],
"pro_nterm_all_h_2lhb_v3":
  ['PRO%NH2', 16, [], 'peptide', True, None],
"tyr_cterm_all_h_1fu6_v3":
  ['TYR%COOH', 23, [], 'peptide', True, None],
"val_chain_all_h_1ozo_v2":
  ['VAL', 16, [], 'peptide', None, None],
"ile_nterm_all_h_1p57_v3":
  ['ILE%NH3', 21, [], 'peptide', True, None],
"his_nterm_all_h_2j5p_v3":
  ['HIS%NH3', 20, [], 'peptide', True, None],
"asp_chain_all_h_2izb_v3":
  ['ASP%ACID-ASP', 13, [], 'peptide', None, None],
"lys_cterm_all_h_1gkt_v2":
  ['LYS%COOH', 24, [], 'peptide', True, None],
"gln_chain_all_h_1o8t_v3":
  ['GLN', 17, [], 'peptide', None, None],
"ser_cterm_all_h_2jnr_v3":
  ['SER%COOH', 13, [], 'peptide', True, None],
"lys_nterm_all_h_1io5_v3":
  ['LYS%NH3', 24, [], 'peptide', True, None],
"ile_nterm_all_h_1tkw_v3":
  ['ILE%NH3', 21, [], 'peptide', True, None],
"gln_nterm_all_h_1fmy_v3":
  ['GLN%NH3', 19, [], 'peptide', True, None],
"met_cterm_all_h_1hz3_v3":
  ['MET%COOH', 19, [], 'peptide', True, None],
"lys_cterm_all_h_1aze_v2":
  ['LYS%COOH', 24, [], 'peptide', True, None],
"val_nterm_all_h_2mb5_v3":
  ['VAL%NH3', 18, [], 'peptide', True, None],
"val_nterm_all_h_1ylb_v3":
  ['VAL%NH3', 18, [], 'peptide', True, None],
"trp_nterm_all_h_1haj_v3":
  ['TRP%NH3', 26, [], 'peptide', True, None],
"tyr_chain_all_h_1ozo_v2":
  ['TYR', 21, [], 'peptide', None, None],
"met_nterm_all_h_1euw_v2":
  ['MET%NH3', 19, [], 'peptide', True, None],
"gln_nterm_all_h_1w4h_v3":
  ['GLN%NH3', 19, [], 'peptide', True, None],
"arg_nterm_all_h_1i9f_v3":
  ['ARG%NH3', 26, [], 'peptide', True, None],
"asp_cterm_all_h_1kb8_v3":
  ['ASP%COOH%ACID-ASP', 15, [], 'peptide', True, None],
"met_chain_all_h_1ozo_v2":
  ['MET', 17, [], 'peptide', None, None],
"trp_nterm_all_h_1fi6_v3":
  ['TRP%NH3', 26, [], 'peptide', True, None],
"tyr_nterm_all_h_1d1n_v3":
  ['TYR%NH3', 23, [], 'peptide', True, None],
"arg_nterm_all_h_1gxe_v3":
  ['ARG%NH3', 26, [], 'peptide', True, None],
"gly_nterm_all_h_1o7b_v2":
  ['GLY%NH3', 9, [], 'peptide', True, None],
"cys_nterm_all_h_1b9q_v3":
  ['CYS%NH3', 13, [], 'peptide', True, None],
"leu_cterm_all_h_2oyw_v3":
  ['LEU%COOH', 21, [], 'peptide', True, None],
"trp_chain_all_h_1cx1_v3":
  ['TRP', 24, [], 'peptide', None, None],
"ala_cterm_all_h_1jdk_v2":
  ['ALA%COOH', 12, [], 'peptide', True, None],
"arg_nterm_all_h_5pti_v3":
  ['ARG%NH3', 26, [], 'peptide', True, None],
"gly_chain_all_h_1ozo_v3":
  ['GLY', 7, [], 'peptide', None, None],
"met_nterm_all_h_1c15_v3":
  ['MET%NH3', 19, [], 'peptide', True, None],
"tyr_nterm_all_h_1lxh_v3":
  ['TYR%NH3', 23, [], 'peptide', True, None],
"ser_nterm_all_h_1bl1_v3":
  ['SER%NH3', 13, [], 'peptide', True, None],
"phe_chain_all_h_1hdj_v3":
  ['PHE', 20, [], 'peptide', None, None],
"phe_chain_all_h_1hdp_v3":
  ['PHE', 20, [], 'peptide', None, None],
"arg_cterm_all_h_1mmc_v2":
  ['ARG%COOH', 26, [], 'peptide', True, None],
"ile_nterm_all_h_1ntp_v2":
  ['ILE%NH3', 21, [], 'peptide', True, None],
"met_nterm_all_h_2j46_v2":
  ['MET%NH3', 19, [], 'peptide', True, None],
"asn_cterm_all_h_2cdx_v3":
  ['ASN%COOH', 16, [], 'peptide', True, None],
"lys_nterm_all_h_2bvb_v3":
  ['LYS%NH3', 24, [], 'peptide', True, None],
"glu_nterm_all_h_1agg_v2":
  ['GLU%ACID-GLU%NH3', 18, [], 'peptide', True, None],
"glu_nterm_all_h_1agg_v3":
  ['GLU%ACID-GLU%NH3', 18, [], 'peptide', True, None],
"ala_nterm_all_h_1vcx_v2":
  ['ALA%NH3', 12, [], 'peptide', True, None],
"ala_cterm_all_h_1eio_v3":
  ['ALA%COOH', 12, [], 'peptide', True, None],
"ser_nterm_all_h_1bl1_v2":
  ['SER%NH3', 13, [], 'peptide', True, None],
"ile_chain_all_h_1ozo_v3":
  ['ILE', 19, [], 'peptide', None, None],
"gly_nterm_all_h_1qg1_v2":
  ['GLY%NH3', 9, [], 'peptide', True, None],
"arg_nterm_all_h_1dpu_v2":
  ['ARG%NH3', 26, [], 'peptide', True, None],
"asn_nterm_all_h_1w4g_v3":
  ['ASN%NH3', 16, [], 'peptide', True, None],
"met_nterm_all_h_1c15_v2":
  ['MET%NH3', 19, [], 'peptide', True, None],
"trp_cterm_all_h_6cmh_v2":
  ['TRP%COOH', 26, [], 'peptide', True, None],
"leu_chain_all_h_2sn3_v2":
  ['LEU', 19, [], 'peptide', None, None],
"leu_nterm_all_h_2bun_v2":
  ['LEU%NH3', 21, [], 'peptide', True, None],
"ala_nterm_all_h_2bw2_v2":
  ['ALA%NH3', 12, [], 'peptide', True, None],
"met_nterm_all_h_1d7q_v2":
  ['MET%NH2NOTPRO', 19, [], 'peptide', None, None],
"val_cterm_all_h_1cz2_v3":
  ['VAL%COOH', 18, [], 'peptide', True, None],
"asn_nterm_all_h_1w4g_v2":
  ['ASN%NH3', 16, [], 'peptide', True, None],
"ala_nterm_all_h_1blq_v3":
  ['ALA%NH3', 12, [], 'peptide', True, None],
"pro_nterm_all_h_2gs0_v2":
  ['PRO%NH2', 16, [], 'peptide', True, None],
"glu_chain_all_h_1tmr_v2":
  ['GLU', 15, [' HE1'], 'peptide', None, None],
"gly_cterm_all_h_1sbu_v3":
  ['GLY%COOH', 9, [], 'peptide', True, None],
"leu_cterm_all_h_2oyw_v2":
  ['LEU%COOH', 21, [], 'peptide', True, None],
"met_nterm_all_h_1euw_v3":
  ['MET%NH3', 19, [], 'peptide', True, None],
"gly_nterm_all_h_3ins_v3":
  ['GLY%NH3', 9, [], 'peptide', True, None],
"asn_nterm_all_h_1cej_v3":
  ['ASN%NH3', 16, [], 'peptide', True, None],
"gly_chain_all_h_1ozo_v2":
  ['GLY', 7, [], 'peptide', None, None],
"ala_cterm_all_h_1jdk_v3":
  ['ALA%COOH', 12, [], 'peptide', True, None],
"leu_chain_all_h_1ozo_v2":
  ['LEU', 19, [], 'peptide', None, None],
"thr_chain_all_h_1o8t_v2":
  ['THR', 14, [], 'peptide', None, None],
"his_nterm_all_h_1c17_v2":
  ['HIS%NH3', 20, [], 'peptide', True, None],
"gly_cterm_all_h_1sbu_v2":
  ['GLY%COOH', 9, [], 'peptide', True, None],
"tyr_cterm_all_h_1fu6_v2":
  ['TYR%COOH', 23, [], 'peptide', True, None],
"tyr_chain_all_h_1cx1_v2":
  ['TYR', 21, [], 'peptide', None, None],
"lys_cterm_all_h_1gkt_v3":
  ['LYS%COOH', 24, [], 'peptide', True, None],
"ser_cterm_all_h_2jnr_v2":
  ['SER%COOH', 13, [], 'peptide', True, None],
"trp_cterm_all_h_6cmh_v3":
  ['TRP%COOH', 26, [], 'peptide', True, None],
"phe_cterm_all_h_2jnr_v3":
  ['PHE%COOH', 22, [], 'peptide', True, None],
"leu_nterm_all_h_1edv_v2":
  ['LEU%NH3', 21, [], 'peptide', True, None],
"asp_chain_all_h_1kgl_v2":
  ['ASP%ACID-ASP', 13, [], 'peptide', None, None],
"lys_nterm_all_h_1gcc_v3":
  ['LYS%NH3', 24, [], 'peptide', True, None],
"ile_cterm_all_h_1pog_v2":
  ['ILE%COOH', 21, [], 'peptide', True, None],
"phe_chain_all_h_1hdp_v2":
  ['PHE', 20, [], 'peptide', None, None],
"pro_chain_all_h_1a03_v3":
  ['PRO', 14, [], 'peptide', None, None],
"ile_chain_all_h_1ozo_v2":
  ['ILE', 19, [], 'peptide', None, None],
"ile_nterm_all_h_1c2l_v3":
  ['ILE%NH3', 21, [], 'peptide', True, None],
"val_nterm_all_h_1qn1_v2":
  ['VAL%NH3', 18, [], 'peptide', True, None],
"phe_n_ter_c_ter_with_hydrogens":
  ['PHE%COO%NH3', 23, [], 'peptide', True, None],
"mse_cterm_all_h_1hz3_v2":
  ['MSE%COOH', 19, [], 'peptide', True, None],
"mse_nterm_all_h_1qqi_v2":
  ['MSE%NH3', 19, [], 'peptide', True, None],
"mse_chain_all_h_1ozo_v3":
  ['MSE', 17, [], 'peptide', None, None],
"mse_nterm_all_h_2j46_v3":
  ['MSE%NH3', 19, [], 'peptide', True, None],
"mse_nterm_all_h_1d7q_v3":
  ['MSE%NH3', 19, [], 'peptide', True, None],
"mse_nterm_all_h_1qqi_v3":
  ['MSE%NH3', 19, [], 'peptide', True, None],
"mse_cterm_all_h_1hz3_v3":
  ['MSE%COOH', 19, [], 'peptide', True, None],
"mse_nterm_all_h_1euw_v2":
  ['MSE%NH3', 19, [], 'peptide', True, None],
"mse_chain_all_h_1ozo_v2":
  ['MSE', 17, [], 'peptide', None, None],
"mse_nterm_all_h_1c15_v3":
  ['MSE%NH3', 19, [], 'peptide', True, None],
"mse_nterm_all_h_2j46_v2":
  ['MSE%NH3', 19, [], 'peptide', True, None],
"mse_nterm_all_h_1c15_v2":
  ['MSE%NH3', 19, [], 'peptide', True, None],
"mse_nterm_all_h_1d7q_v2":
  ['MSE%NH2NOTPRO', 19, [], 'peptide', None, None],
"mse_nterm_all_h_1euw_v3":
  ['MSE%NH3', 19, [], 'peptide', True, None],
"ile_cterm_all_h_4ek4_moe" :
  ['ILE%CF-COH', 20, [], 'peptide', None, None],
}

if (__name__ == "__main__"):
  run(sys.argv[1:], residue_type="protein", expected_results=expected_results)


 *******************************************************************************


 *******************************************************************************
mmtbx/monomer_library/tst_rna_dna_interpretation.py
from __future__ import absolute_import, division, print_function
from mmtbx.monomer_library import pdb_interpretation
from mmtbx.monomer_library import server
from libtbx.utils import null_out
import libtbx.load_env
import sys, os

def run(args, residue_type, expected_results):
  verbose = "--verbose" in args
  debug = "--debug" in args
  pdb_files = libtbx.env.find_in_repositories(
    relative_path="phenix_regression/%s_pdb_files" % residue_type,
    test=os.path.isdir)
  if (pdb_files is None):
    print("Skipping tst_%s_interpretation: input files not available" \
      % residue_type)
    return
  mon_lib_srv = server.server()
  ener_lib = server.ener_lib()
  for file_name in os.listdir(pdb_files):
    if (file_name[-4:] not in [".ent", ".pdb"]): continue
    if (verbose):
      log = sys.stdout
    else:
      log = null_out()
    processed_pdb_file = pdb_interpretation.process(
      mon_lib_srv=mon_lib_srv,
      ener_lib=ener_lib,
      file_name=os.path.join(pdb_files, file_name),
      log=log)
    for mm in processed_pdb_file.all_chain_proxies.all_monomer_mappings:
      residue_name = mm.residue_name
      if (mm.classification == "RNA"):
        for c in ["2", "3"]:
          expected_mod = "%rna"+c+"p_pur"
          if (mm.residue_name.find(expected_mod) > 0):
            residue_name = mm.residue_name.replace(expected_mod, "")
            break
          expected_mod = "%rna"+c+"p_pyr"
          if (mm.residue_name.find(expected_mod) > 0):
            residue_name = mm.residue_name.replace(expected_mod, "")
            break
      assert len(mm.duplicate_atoms) == 0
      assert len(mm.ignored_atoms) == 0
      assert not mm.is_unusual
      unexpected_names = [atom.name for atom in mm.unexpected_atoms]
      result = [
        residue_name,
        len(mm.expected_atoms),
        unexpected_names,
        mm.classification,
        mm.is_terminus,
        mm.incomplete_info]
      key = file_name[:-4]
      if (debug):
        print('"%s":' % key)
        print(" ", str(result)+",")
        print(" ", str(expected_results[key])+",")
      if (expected_results is not None):
        assert result == expected_results[key], "%s not %s" % (
          result,
          expected_results[key],
          )
  print("OK")

expected_results = {
"a_v2": ['  A', 33, [], 'RNA', None, None],
"a_v3": ['  A', 33, [], 'RNA', None, None],
"c_3ter_v2": ['  C%3*END', 32, [], 'RNA', True, None],
"c_3ter_v3": ['  C%3*END', 32, [], 'RNA', True, None],
"c_5ter_v2": ['  C%5*END', 28, [], 'DNA', True, None],
"c_5ter_v3": [' DC%5*END', 28, [], 'DNA', True, None],
"c_p_only_v3": ['  C', 1, [], 'DNA', None, 'p_only'],
"c_v2": ['  C', 31, [], 'RNA', None, None],
"c_v3": ['  C', 31, [], 'RNA', None, None],
"da_v2": ['  A', 32, [], 'DNA', None, None],
"da_v3": [' DA', 32, [], 'DNA', None, None],
"dc_v2": ['  C', 30, [], 'DNA', None, None],
"dc_v3": [' DC', 30, [], 'DNA', None, None],
"dg_v2": ['  G', 33, [], 'DNA', None, None],
"dg_v3": [' DG', 33, [], 'DNA', None, None],
"dt_v2": ['  T', 32, [], 'DNA', None, None],
"dt_v3": [' DT', 32, [], 'DNA', None, None],
"g_5pho_v2": ['  G%p5*END', 36, [], 'RNA', True, None],
"g_5pho_v3": ['  G%p5*END', 36, [], 'RNA', True, None],
"g_5ter_3ter_v2": ['  G%5*END%3*END', 33, [], 'RNA', True, None],
"g_5ter_3ter_v3": ['  G%5*END%3*END', 33, [], 'RNA', True, None],
"g_5ter_v2": ['  G%5*END', 32, [], 'RNA', True, None],
"g_5ter_v3": ['  G%5*END', 32, [], 'RNA', True, None],
"g_v2": ['  G', 34, [], 'RNA', None, None],
"g_v3": ['  G', 34, [], 'RNA', None, None],
"u_v2": ['  U', 30, [], 'RNA', None, None],
"u_v3": ['  U', 30, [], 'RNA', None, None],
"thy_cns_dna_rna_top": ['THY', 20, [], 'DNA', None, None],
}

if (__name__ == "__main__"):
  run(sys.argv[1:], residue_type="rna_dna", expected_results=expected_results)


 *******************************************************************************


 *******************************************************************************
mmtbx/monomer_library/tst_rna_sugar_pucker_analysis.py
from __future__ import absolute_import, division, print_function
from mmtbx.monomer_library import rna_sugar_pucker_analysis
from libtbx.test_utils import approx_equal
import sys
from six.moves import zip

class atom(object):
  def __init__(O, xyz):
    O.xyz = xyz

def atom_dict(xyz_list):
  assert len(xyz_list) == 5
  return dict([(key, atom(xyz))
    for key,xyz in zip(["C1'", "O3'", "C3'", "C4'", "C5'"], xyz_list)])

def exercise(args):
  assert len(args) == 0
  params = rna_sugar_pucker_analysis.master_phil.fetch().extract()
  for i_pass,some_x in enumerate([31.101, 21.101]):
    analysis = rna_sugar_pucker_analysis.evaluate(
      params=params,
      residue_1_deoxy_ribo_atom_dict=atom_dict([
        (some_x,30.048,33.325), (22.184,28.704,36.539), (21.527,28.782,35.281),
        (22.379,28.287,34.119), (22.676,26.795,34.032)]),
      residue_1_c1p_outbound_atom=atom((19.628,30.157,32.953)),
      residue_2_p_atom=atom((33.058,33.903,32.613)))
    assert analysis.epsilon is None
    if (i_pass == 0):
      assert analysis.delta is None
    else:
      assert approx_equal(analysis.delta, 69.6819176834)
    assert analysis.p_distance_c1p_outbound_line is None
    assert analysis.is_epsilon_outlier is None
    if (i_pass == 0):
      assert analysis.is_2p_delta is None
      assert analysis.is_2p_p_distance_c1p_outbound_line is None
      assert analysis.is_2p_o3p_distance_c1p_outbound_line is None
      assert analysis.is_2p is None
    else:
      assert not analysis.is_2p_delta
      assert analysis.is_2p_p_distance_c1p_outbound_line is None
      assert not analysis.is_2p_o3p_distance_c1p_outbound_line
      assert not analysis.is_2p
  analysis = rna_sugar_pucker_analysis.evaluate(
    params=params,
    residue_1_deoxy_ribo_atom_dict=atom_dict([
      (50.473,9.942,36.204), (48.952,10.236,33.644), (49.474,11.213,34.497),
      (50.978,11.174,34.278), (51.710,12.501,34.095)]),
    residue_1_c1p_outbound_atom=atom((50.926,10.084,37.569)),
    residue_2_p_atom=atom((48.114,10.641,32.347)))
  assert approx_equal(analysis.epsilon, 250.715932662)
  assert approx_equal(analysis.delta, 133.811229901)
  assert approx_equal(analysis.p_distance_c1p_outbound_line, 1.52374220064)
  assert approx_equal(analysis.o3p_distance_c1p_outbound_line, 0.860583842822)
  assert not analysis.is_epsilon_outlier
  assert analysis.is_2p_delta
  assert analysis.is_2p_p_distance_c1p_outbound_line
  assert analysis.is_2p_o3p_distance_c1p_outbound_line
  assert analysis.is_2p
  for residue_2_p_atom in [atom((41.856,17.581,31.191)), None]:
    analysis = rna_sugar_pucker_analysis.evaluate(
      params=params,
      residue_1_deoxy_ribo_atom_dict=atom_dict([
        (42.736,12.998,31.661), (42.922,16.529,31.706), (42.428,15.271,31.984),
        (43.132,14.710,33.185), (42.545,15.146,34.511)]),
      residue_1_c1p_outbound_atom=atom((41.433,12.332,31.466)),
      residue_2_p_atom=residue_2_p_atom)
    assert not analysis.is_epsilon_outlier
    assert not analysis.is_2p_delta
    if (residue_2_p_atom is not None):
      assert not analysis.is_2p_p_distance_c1p_outbound_line
    else:
      assert analysis.is_2p_p_distance_c1p_outbound_line is None
    assert not analysis.is_2p_o3p_distance_c1p_outbound_line
    assert not analysis.is_2p
  #
  params.epsilon_range_min = None
  params.epsilon_range_max = None
  params.delta_range_2p_min = None
  params.delta_range_2p_max = None
  params.delta_range_3p_min = None
  params.delta_range_3p_max = None
  params.p_distance_c1p_outbound_line_2p_max = None
  params.o3p_distance_c1p_outbound_line_2p_max = None
  analysis = rna_sugar_pucker_analysis.evaluate(
    params=params,
    residue_1_deoxy_ribo_atom_dict=atom_dict([
      (50.473,9.942,36.204), (48.952,10.236,33.644), (49.474,11.213,34.497),
      (50.978,11.174,34.278), (51.710,12.501,34.095)]),
    residue_1_c1p_outbound_atom=atom((50.926,10.084,37.569)),
    residue_2_p_atom=atom((48.114,10.641,32.347)))
  assert approx_equal(analysis.epsilon, 250.715932662)
  assert approx_equal(analysis.delta, 133.811229901)
  assert approx_equal(analysis.p_distance_c1p_outbound_line, 1.52374220064)
  assert analysis.is_epsilon_outlier is None
  assert analysis.is_2p_delta is None
  assert analysis.is_2p_p_distance_c1p_outbound_line is None
  assert analysis.is_2p_o3p_distance_c1p_outbound_line is None
  assert analysis.is_2p is None
  #
  print("OK")

if (__name__ == "__main__"):
  exercise(sys.argv[1:])


 *******************************************************************************


 *******************************************************************************
mmtbx/monomer_library/tst_rotamer_utils.py
from __future__ import absolute_import, division, print_function
import mmtbx.monomer_library.server
import iotbx.pdb.amino_acid_codes
import cctbx.geometry_restraints
import scitbx.math
from scitbx.array_family import flex
from scitbx import matrix
from libtbx.test_utils import show_diff
from libtbx.utils import sequence_index_dict, format_cpu_times
import libtbx.load_env
import string
import sys, os
from six.moves import zip
from six.moves import range
op = os.path

protein_pdb_files = libtbx.env.find_in_repositories(
  relative_path="phenix_regression/protein_pdb_files",
  optional=False)

reference_pdb_file_names = """\
ala_chain_all_h_1ozo_v3.ent
arg_chain_all_h_1o8t_v3.ent
asn_chain_all_h_1o8t_v3.ent
asp_chain_all_h_1jjx_v3.ent
cys_chain_all_h_1rfa_v3.ent
gln_chain_all_h_1o8t_v3.ent
glu_chain_all_h_1bm4_v3.ent
gly_chain_all_h_1ozo_v3.ent
his_chain_all_h_1g7e_v3.ent
ile_chain_all_h_1ozo_v3.ent
leu_chain_all_h_1ozo_v3.ent
lys_chain_all_h_1o8t_v3.ent
met_chain_all_h_1ozo_v3.ent
mse_chain_all_h_1ozo_v3.ent
phe_chain_all_h_1hdj_v3.ent
pro_chain_all_h_1a03_v3.ent
ser_chain_all_h_1o8t_v3.ent
thr_chain_all_h_1o8t_v3.ent
trp_chain_all_h_1cx1_v3.ent
tyr_chain_all_h_1cx1_v3.ent
val_chain_all_h_1ozo_v3.ent
""".splitlines()
def __init_reference_pdb_file_name_lookup():
  result = {}
  for file_name in reference_pdb_file_names:
    result[file_name[:3].upper()] = file_name
  return result
reference_pdb_file_name_lookup = __init_reference_pdb_file_name_lookup()

def report_tors(
      mon_lib_atom_names,
      sites_cart,
      tor_atom_ids_by_tor_id,
      target_angles,
      verbose):
  n_mismatches = 0
  i_seq_by_atom_name = sequence_index_dict(seq=mon_lib_atom_names)
  for tor_id,atom_ids in tor_atom_ids_by_tor_id.items():
    js = [i_seq_by_atom_name.get(ai) for ai in atom_ids]
    if (js.count(None) != 0):
      angle_model = None
    else:
      d_sites = [sites_cart[j] for j in js]
      angle_model = scitbx.math.dihedral_angle(sites=d_sites, deg=True)
    target_angle = target_angles.get(tor_id)
    if (angle_model is not None and target_angle is not None):
      if (cctbx.geometry_restraints.angle_delta_deg(
            angle_1=angle_model,
            angle_2=target_angle) > 1.e-5):
        annotation = "MISMATCH"
        n_mismatches += 1
      else:
        annotation = "OK_target"
    else:
      annotation = "no_target"
    if (verbose): print(tor_id, atom_ids, angle_model, annotation)
  assert n_mismatches == 0, n_mismatches

def remove_atom_ids_not_handled(pdb_hierarchy, atom_ids_not_handled):
  if (atom_ids_not_handled is None): return
  ag = pdb_hierarchy.only_atom_group()
  for atom in ag.atoms():
    if (atom.name.strip() in atom_ids_not_handled):
      ag.remove_atom(atom=atom)

def exercise_server_rotamer_iterator(mon_lib_srv, pdb_hierarchy, verbose):
  resname = pdb_hierarchy.only_residue().resname
  atom_ids_not_handled = {
    "ASP": ["HD2"],
    "GLU": ["HE2"]}.get(resname)
  pdb_atoms = pdb_hierarchy.only_residue().atoms()
  comp_comp_id = mon_lib_srv.get_comp_comp_id_direct(comp_id=resname)
  if (atom_ids_not_handled is not None):
    rotamer_iterator = comp_comp_id.rotamer_iterator(
      atom_names=pdb_atoms.extract_name(),
      sites_cart=pdb_atoms.extract_xyz())
    assert not show_diff(str(rotamer_iterator.problem_message)[3:-3],
      ": rotamer_info does not handle these atoms: ")
    remove_atom_ids_not_handled(
      pdb_hierarchy=pdb_hierarchy,
      atom_ids_not_handled=atom_ids_not_handled)
    pdb_atoms = pdb_hierarchy.only_residue().atoms()
  #
  pdb_atoms.set_occ(new_occ=flex.double(pdb_atoms.size(), 1))
  pdb_atoms.set_b(new_b=flex.double(pdb_atoms.size(), 0))
  rg = pdb_hierarchy.only_residue_group()
  rg.resseq = 1
  rg.icode = " "
  #
  assert pdb_hierarchy.only_atom_group().altloc == ""
  for strip_hydrogens in [False, True]:
    if (strip_hydrogens):
      ag = pdb_hierarchy.only_atom_group()
      for atom in ag.atoms():
        if (atom.element == " H"):
          ag.remove_atom(atom=atom)
      pdb_atoms = pdb_hierarchy.only_residue().atoms()
    pdb_atoms.reset_i_seq()
    rotamer_iterator = comp_comp_id.rotamer_iterator(
      atom_names=pdb_atoms.extract_name(),
      sites_cart=pdb_atoms.extract_xyz(),fine_sampling=False)
    if (rotamer_iterator.problem_message):
      raise RuntimeError(rotamer_iterator.problem_message)
    if (rotamer_iterator.rotamer_info is not None):
      if (strip_hydrogens):
        assert len(rotamer_iterator.mon_lib_atom_names) \
            == comp_comp_id.chem_comp.number_atoms_nh
      comp_atom_name_set = set([atom.atom_id
        for atom in comp_comp_id.atom_list])
      for name in rotamer_iterator.mon_lib_atom_names:
        if (name not in comp_atom_name_set):
          raise RuntimeError("Missing comp atom: %s %s" % (resname, name))
      unused_rotamer_info_tor_ids = []
      for tor_id in rotamer_iterator.rotamer_info.tor_ids:
        if (tor_id not in rotamer_iterator.i_q_packed_by_tor_id):
          unused_rotamer_info_tor_ids.append(tor_id)
      if (len(unused_rotamer_info_tor_ids) != 0):
        if (verbose):
          print("Info: unused rotamer_info.tor_ids:", \
            " ".join(unused_rotamer_info_tor_ids))
        assert strip_hydrogens
      if (strip_hydrogens):
        rotamers_sub_dir = "rotamers_no_h"
      else:
        rotamers_sub_dir = "rotamers_with_h"
      rotamers_sep_sub_dir = rotamers_sub_dir + "_sep"
      if (not os.path.isdir(rotamers_sub_dir)):
        os.mkdir(rotamers_sub_dir)
      if (not os.path.isdir(rotamers_sep_sub_dir)):
        os.mkdir(rotamers_sep_sub_dir)
      remark_strings = []
      atom_strings = []
      atom_serial_first_value = 1
      for i_rotamer,(rotamer,rotamer_sites_cart) in enumerate(rotamer_iterator):
        report_tors(
          mon_lib_atom_names=rotamer_iterator.mon_lib_atom_names,
          sites_cart=rotamer_sites_cart,
          tor_atom_ids_by_tor_id
            =rotamer_iterator.rotamer_tor_atom_ids_by_tor_id,
          target_angles=dict(zip(
            rotamer_iterator.rotamer_info.tor_ids,
            rotamer.angles)),
          verbose=verbose)
        #
        pdb_hierarchy_work = pdb_hierarchy.deep_copy()
        pdb_atoms_work = pdb_hierarchy_work.atoms()
        pdb_atoms_work.set_xyz(new_xyz=rotamer_sites_cart)
        pdb_atoms_work.reset_serial(first_value=1)
        file_name = "%s/%s_%s.pdb" % (
          rotamers_sep_sub_dir, resname, rotamer.id)
        if (verbose): print("Writing file:", file_name)
        with  open(file_name, "w") as f:
          print("REMARK %s %s" % (resname, rotamer.id), file=f)
          f.write(pdb_hierarchy_work.as_pdb_string(append_end=True))
        #
        rotamer_sites_cart += matrix.col((4,4,4)) * i_rotamer
        pdb_atoms_work.set_xyz(new_xyz=rotamer_sites_cart)
        pdb_atoms_work.reset_serial(first_value=atom_serial_first_value)
        atom_serial_first_value += pdb_atoms_work.size()
        nl = ''.join(['%i' % i for i in range(10)])
        chain_id = (string.ascii_uppercase + string.ascii_lowercase + nl)[i_rotamer]
        pdb_hierarchy_work.only_chain().id = chain_id
        remark_strings.append(
          "REMARK %s %s = chain %s" % (resname, rotamer.id, chain_id))
        atom_strings.append(pdb_hierarchy_work.as_pdb_string(append_end=False))
      file_name = "%s/%s.pdb" % (rotamers_sub_dir, resname)
      if (verbose): print("Writing file:", file_name)
      with open(file_name, "w") as f:
        for s in remark_strings:
          print(s, file=f)
        for s in atom_strings:
          f.write(s)
        print("END", file=f)

def compare_dihedrals(
      mon_lib_srv,
      amino_acid_resnames,
      pdb_dir,
      file_name_extension,
      verbose):
  for resname in amino_acid_resnames:
    if (resname in ["PRO", 'PYL', 'SEC']):
      # compatible semi emp files not available (not important enough to
      # warrant extra effort)
      continue
    rotamer_info = mon_lib_srv.get_comp_comp_id_direct(
      comp_id=resname).rotamer_info()
    if (rotamer_info is None): continue
    for rotamer in rotamer_info.rotamer:
      file_name = "%s_%s%s" % (resname, rotamer.id, file_name_extension)
      if (verbose): print(file_name)
      path = op.join(pdb_dir, file_name)
      pdb_inp = iotbx.pdb.input(file_name=path)
      pdb_hierarchy = pdb_inp.construct_hierarchy()
      ag = pdb_hierarchy.only_atom_group()
      for atom in ag.atoms():
        if (   atom.name in [" H2 ",  " HC1"]
            or (resname == "ASP" and atom.name == "HD21")
            or (resname == "GLU" and atom.name == "HE21")):
          ag.remove_atom(atom=atom)
      comp_comp_id = mon_lib_srv.get_comp_comp_id_direct(comp_id=resname)
      pdb_atoms = pdb_hierarchy.only_residue().atoms()
      rotamer_iterator = comp_comp_id.rotamer_iterator(
        atom_names=pdb_atoms.extract_name(),
        sites_cart=pdb_atoms.extract_xyz())
      assert rotamer_iterator.problem_message is None
      angle_start_by_tor_id = rotamer_iterator.angle_start_by_tor_id
      for tor_id,angle_tab in zip(rotamer_info.tor_ids, rotamer.angles):
        angle_pdb = angle_start_by_tor_id[tor_id]
        if (verbose): print(tor_id, angle_tab, angle_pdb)
        if (cctbx.geometry_restraints.angle_delta_deg(
              angle_1=angle_tab,
              angle_2=angle_pdb) > 0.5):
          if (verbose
              or resname not in ["ARG", "ASN", "GLN"]):
            # Keeping all hydrogen dihedrals in ARG, ASN, GLN at 180
            # after discussions.
            print("Mismatch", resname, rotamer.id, tor_id, \
              "pdb: %.0f" % angle_pdb, \
              "tab: %.0f" % angle_tab)
      if (verbose): print()

def exercise_termini(mon_lib_srv, pdb_file_name):
  pdb_inp = iotbx.pdb.input(file_name=pdb_file_name)
  pdb_hierarchy = pdb_inp.construct_hierarchy()
  resname = pdb_hierarchy.only_residue().resname
  atom_ids_not_handled_by_resname = {
    "ASP": ["HD1", "HD2", "2HD"],
    "GLU": ["HE1", "HE2", "2HE"]}
  remove_atom_ids_not_handled(
    pdb_hierarchy=pdb_hierarchy,
    atom_ids_not_handled=atom_ids_not_handled_by_resname.get(resname))
  pdb_atoms = pdb_hierarchy.only_residue().atoms()
  comp_comp_id = mon_lib_srv.get_comp_comp_id_direct(comp_id=resname)
  rotamer_iterator = comp_comp_id.rotamer_iterator(
    atom_names=pdb_atoms.extract_name(),
    sites_cart=pdb_atoms.extract_xyz())
  msg = rotamer_iterator.problem_message
  if (msg is not None):
    raise RuntimeError("rotamer_iterator.problem_message: %s" % msg)

def exercise_pro_missing_hd1(mon_lib_srv):
  pdb_inp = iotbx.pdb.input(source_info=None, lines="""\
ATOM    110  N   PRO A 263       0.453 -20.680 -39.256  1.00 53.34           N
ATOM    111  CA  PRO A 263       0.444 -22.054 -39.751  1.00 50.42           C
ATOM    112  C   PRO A 263       0.860 -22.998 -38.645  1.00 52.10           C
ATOM    113  O   PRO A 263       1.693 -22.614 -37.817  1.00 48.32           O
ATOM    114  CB  PRO A 263       1.491 -22.052 -40.887  1.00 53.30           C
ATOM    115  CG  PRO A 263       2.012 -20.645 -40.990  1.00 57.05           C
ATOM    116  CD  PRO A 263       1.586 -19.897 -39.782  1.00 53.45           C
ATOM    117  HA  PRO A 263      -0.437 -22.302 -40.100  1.00 60.51           H
ATOM    118  HB2 PRO A 263       2.210 -22.664 -40.664  1.00 63.96           H
ATOM    119  HB3 PRO A 263       1.066 -22.318 -41.718  1.00 63.96           H
ATOM    120  HG2 PRO A 263       2.980 -20.669 -41.043  1.00 68.45           H
ATOM    121  HG3 PRO A 263       1.645 -20.229 -41.786  1.00 68.45           H
ATOM    122  HD2 PRO A 263       1.267 -19.021 -40.049  1.00 64.14           H
""")
  pdb_hierarchy = pdb_inp.construct_hierarchy()
  residue = pdb_hierarchy.only_residue()
  rotamer_iterator = mon_lib_srv.rotamer_iterator(
    comp_id=residue.resname,
    atom_names=residue.atoms().extract_name(),
    sites_cart=residue.atoms().extract_xyz())
  assert not show_diff(
    rotamer_iterator.problem_message,
    'resname=PRO: missing atom "HD1" for tor_id "hh3"')

def run(args):
  verbose = False
  semi_emp_rotamer_pdb_dirs = []
  for arg in args:
    if (arg == "--verbose"):
      verbose = True
    else:
      assert op.isdir(arg)
      semi_emp_rotamer_pdb_dirs.append(arg)
  mon_lib_srv = mmtbx.monomer_library.server.server()
  amino_acid_resnames = sorted(
    iotbx.pdb.amino_acid_codes.one_letter_given_three_letter.keys())
  for resname in amino_acid_resnames:
    if (verbose): print("resname:", resname)
    if resname in ["UNK", 'PYL', 'SEC']:
      # skipping UNK residue because there is no rotamers available for it
      continue
    pdb_inp = iotbx.pdb.input(
      file_name=op.join(
        protein_pdb_files, reference_pdb_file_name_lookup[resname]))
    pdb_hierarchy = pdb_inp.construct_hierarchy()
    exercise_server_rotamer_iterator(
      mon_lib_srv=mon_lib_srv,
      pdb_hierarchy=pdb_hierarchy,
      verbose=verbose)
    if (verbose): print()
  if (len(semi_emp_rotamer_pdb_dirs) == 0):
    pdb_dir = libtbx.env.find_in_repositories(
      relative_path="phenix_regression/semi_emp_rotamer_pdb")
    if (pdb_dir is None):
      print("Skipping compare_dihedrals(): semi_emp_rotamer_pdb not available.")
    else:
      semi_emp_rotamer_pdb_dirs.append(pdb_dir)
  for pdb_dir in semi_emp_rotamer_pdb_dirs:
    compare_dihedrals(
      mon_lib_srv=mon_lib_srv,
      amino_acid_resnames=amino_acid_resnames,
      pdb_dir=pdb_dir,
      file_name_extension=".uhf_631dp.pdb",
      verbose=verbose)
  for file_name in os.listdir(protein_pdb_files):
    if (not file_name.endswith(".ent")): continue
    if (verbose): print(file_name)
    exercise_termini(
      mon_lib_srv=mon_lib_srv,
      pdb_file_name=op.join(protein_pdb_files, file_name))
    if (verbose): print()
  exercise_pro_missing_hd1(mon_lib_srv=mon_lib_srv)
  print(format_cpu_times())
  print("OK")

if (__name__ == "__main__"):
  run(args=sys.argv[1:])


 *******************************************************************************


 *******************************************************************************
mmtbx/monomer_library/tst_selection.py
from __future__ import absolute_import, division, print_function
from mmtbx import monomer_library
import mmtbx.monomer_library.pdb_interpretation
import mmtbx.monomer_library.server
import sys
from six.moves import range

test_pdb_file = """\
CRYST1  201.710   68.060   86.350  90.00  90.00  90.00 P 21 21 2     8
ATOM      1  N   SER A   1      79.022  -1.487  39.367  1.00 97.85           N
ATOM      2  CA  SER A   1      78.722  -1.348  37.919  1.00 98.11           C
ATOM      3  C   SER A   1      77.318  -0.760  37.705  1.00 97.34           C
ATOM      4  O   SER A   1      76.305  -1.440  37.908  1.00 98.14           O
ATOM      5  CB  SER A   1      78.826  -2.717  37.217  1.00 98.90           C
ATOM      6  OG  SER A   1      80.160  -3.231  37.252  1.00 99.99           O
ATOM      7  N   GLU A   2      77.245   0.508  37.315  1.00 95.57           N
ATOM      8  CA  GLU A   2      75.961   1.137  37.056  1.00 91.95           C
ATOM      9  C   GLU A   2      76.189   1.866  35.740  1.00 88.32           C
ATOM     10  O   GLU A   2      77.119   2.688  35.625  1.00 86.70           O
ATOM     11  CB  GLU A   2      75.615   2.131  38.169  1.00 92.62           C
ATOM     12  CG  GLU A   2      76.373   3.428  38.057  1.00 96.62           C
ATOM     13  CD  GLU A   2      76.044   4.392  39.120  1.00 99.90           C
ATOM     14  OE1 GLU A   2      74.977   4.253  39.777  1.00 99.99           O
ATOM     15  OE2 GLU A   2      76.841   5.347  39.313  1.00 99.99           O
ATOM     16  N   SER A   3      75.396   1.547  34.723  1.00 83.22           N
ATOM     17  CA  SER A   3      75.583   2.238  33.461  1.00 78.14           C
ATOM     18  C   SER A   3      75.232   3.680  33.734  1.00 73.03           C
ATOM     19  O   SER A   3      74.305   3.974  34.499  1.00 72.80           O
ATOM     20  CB  SER A   3      74.678   1.646  32.370  1.00 80.23           C
ATOM     21  OG  SER A   3      75.170   0.385  31.930  1.00 80.78           O
ATOM   2377  N   LEU A 313      82.669  33.333 -17.857  1.00 53.08           N
ATOM   2378  CA  LEU A 313      81.629  32.854 -16.955  1.00 53.14           C
ATOM   2379  C   LEU A 313      81.630  33.876 -15.842  1.00 54.15           C
ATOM   2380  O   LEU A 313      82.643  34.503 -15.597  1.00 55.52           O
ATOM   2381  CB  LEU A 313      82.006  31.491 -16.387  1.00 54.25           C
ATOM   2382  CG  LEU A 313      82.274  30.386 -17.411  1.00 56.18           C
ATOM   2383  CD1 LEU A 313      82.747  29.098 -16.751  1.00 52.25           C
ATOM   2384  CD2 LEU A 313      81.002  30.149 -18.180  1.00 59.92           C
ATOM   2385  N   VAL A 314      80.512  34.069 -15.166  1.00 56.43           N
ATOM   2386  CA  VAL A 314      80.488  35.043 -14.074  1.00 56.85           C
ATOM   2387  C   VAL A 314      80.903  34.401 -12.731  1.00 60.38           C
ATOM   2388  O   VAL A 314      81.023  33.150 -12.658  1.00 61.26           O
ATOM   2389  CB  VAL A 314      79.087  35.666 -13.946  1.00 52.88           C
ATOM   2390  CG1 VAL A 314      79.074  36.727 -12.868  1.00 47.39           C
ATOM   2391  CG2 VAL A 314      78.677  36.241 -15.293  1.00 52.66           C
ATOM   2392  OXT VAL A 314      81.110  35.156 -11.751  1.00 62.47           O
TER    2393      VAL A 314
ATOM   2394  N   SER B   1      85.404 -33.823  39.687  1.00 91.56           N
ATOM   2395  CA  SER B   1      84.670 -32.782  38.908  1.00 91.48           C
ATOM   2396  C   SER B   1      83.295 -33.255  38.414  1.00 92.36           C
ATOM   2397  O   SER B   1      83.109 -34.423  38.036  1.00 92.95           O
ATOM   2398  CB  SER B   1      85.529 -32.298  37.718  1.00 89.71           C
ATOM   2399  OG  SER B   1      85.912 -33.355  36.850  1.00 80.92           O
ATOM   2400  N   GLU B   2      82.331 -32.338  38.418  1.00 91.53           N
ATOM   2401  CA  GLU B   2      80.983 -32.666  37.980  1.00 89.92           C
ATOM   2402  C   GLU B   2      80.567 -31.880  36.725  1.00 86.18           C
ATOM   2403  O   GLU B   2      81.233 -30.933  36.292  1.00 84.19           O
ATOM   2404  CB  GLU B   2      79.993 -32.434  39.136  1.00 92.51           C
ATOM   2405  CG  GLU B   2      78.594 -33.015  38.906  1.00 97.08           C
ATOM   2406  CD  GLU B   2      77.710 -32.959  40.153  1.00 99.61           C
ATOM   2407  OE1 GLU B   2      77.422 -31.843  40.638  1.00 99.99           O
ATOM   2408  OE2 GLU B   2      77.305 -34.037  40.650  1.00 99.99           O
TER    4786      VAL B 314
ATOM   4788  P     C C   1      47.241  23.887  -1.304  1.00 99.99           P
ATOM   4789  O1P   C C   1      47.437  24.960  -0.241  1.00 99.99           O
ATOM   4790  O2P   C C   1      46.407  22.725  -0.791  1.00 99.99           O
ATOM   4791  O5'   C C   1      48.722  23.275  -1.633  1.00 99.99           O
ATOM   4792  C5'   C C   1      49.588  22.811  -0.567  1.00 99.99           C
ATOM   4793  C4'   C C   1      49.474  21.311  -0.424  1.00 99.98           C
ATOM   4794  O4'   C C   1      48.276  20.855  -1.121  1.00 99.99           O
ATOM   4795  C3'   C C   1      50.570  20.506  -1.099  1.00 99.99           C
ATOM   4796  O3'   C C   1      51.727  20.252  -0.373  1.00 99.99           O
ATOM   4797  C2'   C C   1      49.934  19.165  -1.338  1.00 99.99           C
ATOM   4798  O2'   C C   1      50.017  18.352  -0.186  1.00 99.99           O
ATOM   4799  C1'   C C   1      48.505  19.564  -1.689  1.00 99.99           C
ATOM   4800  N1    C C   1      48.330  19.637  -3.157  1.00 99.99           N
ATOM   4801  C2    C C   1      48.881  18.604  -3.984  1.00 99.99           C
ATOM   4802  O2    C C   1      49.493  17.647  -3.456  1.00 99.99           O
ATOM   4803  N3    C C   1      48.728  18.684  -5.330  1.00 99.99           N
ATOM   4804  C4    C C   1      48.065  19.714  -5.869  1.00 99.99           C
ATOM   4805  N4    C C   1      47.945  19.750  -7.196  1.00 99.99           N
ATOM   4806  C5    C C   1      47.497  20.758  -5.068  1.00 99.99           C
ATOM   4807  C6    C C   1      47.655  20.682  -3.732  1.00 99.99           C
ATOM   4808  P     G C   2      52.970  19.524  -1.111  1.00 99.99           P
ATOM   4809  O1P   G C   2      52.775  18.136  -1.648  1.00 99.99           O
ATOM   4810  O2P   G C   2      53.883  19.724  -0.024  1.00 99.99           O
ATOM   4811  O5*   G C   2      53.329  20.523  -2.299  1.00 97.90           O
ATOM   4812  C5*   G C   2      52.379  21.525  -2.667  1.00 92.61           C
ATOM   4813  C4*   G C   2      53.032  22.857  -2.853  1.00 88.12           C
ATOM   4814  O4*   G C   2      54.015  23.115  -1.816  1.00 87.30           O
ATOM   4815  C3*   G C   2      53.805  22.945  -4.141  1.00 86.97           C
ATOM   4816  O3*   G C   2      52.918  23.175  -5.222  1.00 86.86           O
ATOM   4817  C2*   G C   2      54.790  24.065  -3.839  1.00 87.48           C
ATOM   4818  O2*   G C   2      54.217  25.351  -3.939  1.00 86.43           O
ATOM   4819  C1*   G C   2      55.146  23.758  -2.382  1.00 86.25           C
ATOM   4820  N9    G C   2      56.247  22.803  -2.383  1.00 86.73           N
ATOM   4821  C8    G C   2      56.229  21.497  -1.947  1.00 87.03           C
ATOM   4822  N7    G C   2      57.342  20.861  -2.190  1.00 85.88           N
ATOM   4823  C5    G C   2      58.151  21.807  -2.801  1.00 85.19           C
ATOM   4824  C6    G C   2      59.462  21.698  -3.313  1.00 84.09           C
ATOM   4825  O6    G C   2      60.198  20.699  -3.353  1.00 82.37           O
ATOM   4826  N1    G C   2      59.905  22.912  -3.834  1.00 84.56           N
ATOM   4827  C2    G C   2      59.174  24.077  -3.864  1.00 84.51           C
ATOM   4828  N2    G C   2      59.774  25.156  -4.399  1.00 84.63           N
ATOM   4829  N3    G C   2      57.946  24.181  -3.406  1.00 85.45           N
ATOM   4830  C4    G C   2      57.499  23.018  -2.894  1.00 85.82           C
ATOM   4831  P     C C   3      53.092  22.329  -6.579  1.00 86.68           P
ATOM   4832  O1P   C C   3      51.825  22.390  -7.355  1.00 86.55           O
ATOM   4833  O2P   C C   3      53.667  21.001  -6.222  1.00 84.84           O
ATOM   4834  O5*   C C   3      54.167  23.202  -7.360  1.00 84.63           O
ATOM   4835  C5*   C C   3      53.965  24.621  -7.484  1.00 81.25           C
ATOM   4836  C4*   C C   3      55.164  25.277  -8.115  1.00 79.23           C
ATOM   4837  O4*   C C   3      56.262  25.305  -7.172  1.00 76.28           O
ATOM   4838  C3*   C C   3      55.737  24.591  -9.341  1.00 77.29           C
ATOM   4839  O3*   C C   3      55.051  24.887 -10.537  1.00 78.19           O
ATOM   4840  C2*   C C   3      57.158  25.115  -9.363  1.00 76.40           C
ATOM   4842  C1*   C C   3      57.483  25.148  -7.872  1.00 76.01           C
ATOM   4843  N1    C C   3      58.067  23.861  -7.480  1.00 73.97           N
ATOM   4844  C2    C C   3      59.445  23.727  -7.509  1.00 71.90           C
ATOM   4845  O2    C C   3      60.135  24.715  -7.840  1.00 66.31           O
ATOM   4846  N3    C C   3      59.996  22.533  -7.175  1.00 70.72           N
ATOM   4847  C4    C C   3      59.212  21.513  -6.810  1.00 69.96           C
ATOM   4848  N4    C C   3      59.793  20.365  -6.470  1.00 71.43           N
ATOM   4849  C5    C C   3      57.800  21.629  -6.772  1.00 69.13           C
ATOM   4850  C6    C C   3      57.272  22.810  -7.109  1.00 72.22           C
HETATM    1  N   PCA C   4      61.815  -9.826  47.209  1.00 22.41           N
HETATM    2  CA  PCA C   4      63.251  -9.543  47.447  1.00 21.95           C
HETATM    3  CB  PCA C   4      64.110 -10.479  46.604  1.00 22.40           C
HETATM    4  CG  PCA C   4      63.238 -10.886  45.438  1.00 22.83           C
HETATM    5  CD  PCA C   4      61.855 -10.549  45.934  1.00 22.46           C
HETATM    6  OE  PCA C   4      60.846 -10.859  45.286  1.00 24.62           O
HETATM    7  C   PCA C   4      63.573  -8.105  47.060  1.00 21.16           C
HETATM    8  O   PCA C   4      62.762  -7.428  46.430  1.00 21.46           O
HETATM 8099 MG    MG   584      69.634   3.963 -22.036  1.00 45.86          MG
HETATM 8100 MG    MG   585      72.985 -30.470 -21.424  1.00 39.36          MG
HETATM 8101  O   HOH   501      50.104 -12.783 -34.164  1.00 76.32           O
HETATM 8102  O   HOH   502      50.327  -5.724 -17.983  1.00 53.54           O
END
"""

def exercise_atom_selections():
  verbose = "--verbose" in sys.argv[1:]
  log = None
  if (verbose):
    log = sys.stdout
  with open("tmp_selection.pdb", "w") as f:
    f.write(test_pdb_file)
  try:
    mon_lib_srv = monomer_library.server.server()
  except monomer_library.server.MonomerLibraryServerError:
    print("Skipping exercise_atom_selections(): monomer library not available.")
    return
  ener_lib = monomer_library.server.ener_lib()
  processed_pdb = monomer_library.pdb_interpretation.process(
    mon_lib_srv=mon_lib_srv,
    ener_lib=ener_lib,
    file_name="tmp_selection.pdb",
    log=log)
  isel = processed_pdb.all_chain_proxies.iselection
  assert list(isel("peptide")) == list(range(52)) + list(range(114,122))
  assert list(isel("rna")) == list(range(52,95))
  assert list(isel("dna")) == list(range(95,114))
  assert list(isel("nucleotide")) == list(range(52,114))
  assert list(isel("water")) == [124,125]
  assert list(isel("peptide backbone")) \
      == list(isel("peptide and (name ca or name c or name o or name n)"))
  assert list(isel("nucleotide backbone")) \
      == [52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63,
          72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83,
          95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105]
  assert list(isel("backbone and (rna or dna)")) \
      == list(isel("nucleotide backbone"))
  assert list(isel("phosphate")) \
      == [52, 53, 54, 55, 60, 72, 73, 74, 75, 80, 95, 96, 97, 98, 103]
  assert list(isel("ribose")) \
      == [56, 57, 58, 59, 61, 62, 63,
          76, 77, 78, 79, 81, 82, 83,
          99, 100, 101, 102, 104, 105]
  assert list(isel("phosphate or ribose")) == list(isel("nuc backbone"))
  assert list(isel("backbone resname glu")) \
      == [6, 7, 8, 9, 43, 44, 45, 46]
  assert list(isel("within(0.5, backbone resname glu)")) \
      == [6, 7, 8, 9, 43, 44, 45, 46]
  assert list(isel("within(1.5, backbone resname glu)")) \
      == [2, 6, 7, 8, 9, 15, 39, 43, 44, 45, 46]
  assert list(isel("within(2.5, backbone resname glu)")) \
      == [1, 2, 3, 6, 7, 8, 9, 10, 15, 16, 38, 39, 40, 43, 44, 45, 46, 47]
  assert list(isel("resname ser sidechain")) == [4, 5, 19, 20, 41, 42]

def exercise():
  exercise_atom_selections()
  print("OK")

if (__name__ == "__main__"):
  exercise()


 *******************************************************************************


 *******************************************************************************
mmtbx/monomer_library/tst_server.py
from __future__ import absolute_import, division, print_function
from mmtbx.monomer_library import server
from mmtbx.monomer_library import cif_types
from cctbx.array_family import flex
from scitbx.python_utils import dicts
from libtbx import easy_pickle
import random
import sys, os
from six.moves import zip

def check_chem_comp(chem_comp_from_list_file, comp_comp_id):
  if (comp_comp_id is None):
    print("Missing file:", chem_comp_from_list_file.id)
    return
  for key in chem_comp_from_list_file.cif_keywords():
    a = str(getattr(chem_comp_from_list_file, key)).strip()
    b = str(getattr(comp_comp_id.chem_comp, key)).strip()
    if (a != "" and b != "" and a != b):
      print("%s: %s: %s, %s" % (
        chem_comp_from_list_file.id, key, str(a), str(b)))
  a = chem_comp_from_list_file.number_atoms_all
  b = len(comp_comp_id.atom_list)
  if (a != b):
    print("%s: number_atoms_all: %s, %d counted" % (
      chem_comp_from_list_file.id, str(a), b))
  a = chem_comp_from_list_file.number_atoms_nh
  b = 0
  for atom in comp_comp_id.atom_list:
    if (atom.type_symbol != "H"): b += 1
  if (a != b):
    print("%s: number_atoms_nh: %s, %d counted" % (
      chem_comp_from_list_file.id, str(a), b))

def exercise():
  verbose = "--verbose" in sys.argv[1:]
  quick = "--quick" in sys.argv[1:]
  list_cif = server.mon_lib_list_cif()
  srv = server.server(list_cif=list_cif)
  print("srv.root_path:", srv.root_path)
  default_switch = "--default_off" not in sys.argv[1:]
  if (False or default_switch):
    monomers_with_commas = {}
    atom_id_counts = dicts.with_default_value(0)
    for row_id in list_cif.cif["comp_list"]["_chem_comp.id"]:
      if (quick and random.random() < 0.95): continue
      if (verbose): print("id:", row_id)
      comp_comp_id = srv.get_comp_comp_id_direct(comp_id=row_id)
      if (comp_comp_id is None):
        print("Could not instantiating comp_comp_id(%s)" % row_id)
      else:
        has_primes = False
        has_commas = False
        for atom in comp_comp_id.atom_list:
          atom_id_counts[atom.atom_id] += 1
          if (atom.atom_id.find("'") >= 0):
            has_primes = True
          if (atom.atom_id.find(",") >= 0):
            has_commas = True
        if (has_commas):
          monomers_with_commas[comp_comp_id.chem_comp.id] = has_primes
    print(monomers_with_commas)
    atom_ids = flex.std_string(list(atom_id_counts.keys()))
    counts = flex.size_t(list(atom_id_counts.values()))
    perm = flex.sort_permutation(data=counts, reverse=True)
    atom_ids = atom_ids.select(perm)
    counts = counts.select(perm)
    for atom_id,count in zip(atom_ids, counts):
      print(atom_id, count)
  if (False or default_switch):
    for row in list_cif.cif["comp_list"]["_chem_comp"].iterrows():
      if (quick and random.random() < 0.95): continue
      if (verbose): print("id:", row["_chem_comp.id"])
      comp_comp_id = srv.get_comp_comp_id_direct(comp_id=row["_chem_comp.id"])
      check_chem_comp(cif_types.chem_comp(**row), comp_comp_id)
    if ("--pickle" in sys.argv[1:]):
      easy_pickle.dump("mon_lib.pickle", srv)
  if (False or default_switch):
    comp = srv.get_comp_comp_id_direct("GLY")
    comp.show()
    mod = srv.mod_mod_id_dict["COO"]
    comp.apply_mod(mod).show()
  if (False or default_switch):
    comp = srv.get_comp_comp_id_direct("LYS")
    comp.show()
    mod = srv.mod_mod_id_dict["B2C"]
    comp.apply_mod(mod).show()
  if (False or default_switch):
    for row in list_cif.cif["comp_list"]["_chem_comp"].iterrows():
      if (quick and random.random() < 0.95): continue
      comp_comp_id = srv.get_comp_comp_id_direct(row["_chem_comp.id"])
      if (comp_comp_id is not None):
        if (comp_comp_id.classification == "peptide"):
          print(comp_comp_id.chem_comp.id, comp_comp_id.chem_comp.name, end=' ')
          print(row["_chem_comp.group"], end=' ')
          grp = row["_chem_comp.group"].lower().strip()
          if (grp not in ("l-peptide", "d-peptide", "polymer")):
            print("LOOK", end=' ')
            #if (not os.path.isdir("look")): os.makedirs("look")
            #open("look/%s.cif" % row["_chem_comp.id"], "w").write(
              #open(comp_comp_id.file_name).read())
          print()
        elif (row["_chem_comp.group"].lower().find("peptide") >= 0
              or comp_comp_id.chem_comp.group.lower().find("peptide") >= 0):
          print(comp_comp_id.chem_comp.id, comp_comp_id.chem_comp.name, end=' ')
          print(row["_chem_comp.group"], "MISMATCH")
        if (comp_comp_id.classification in ("RNA", "DNA")):
          print(comp_comp_id.chem_comp.id, comp_comp_id.chem_comp.name, end=' ')
          print(row["_chem_comp.group"], end=' ')
          if (comp_comp_id.classification != row["_chem_comp.group"].strip()):
            print(comp_comp_id.classification, "MISMATCH", end=' ')
          print()
        elif (row["_chem_comp.group"].lower().find("NA") >= 0
              or comp_comp_id.chem_comp.group.lower().find("NA") >= 0):
          print(comp_comp_id.chem_comp.id, comp_comp_id.chem_comp.name, end=' ')
          print(row["_chem_comp.group"], "MISMATCH")
  if (False or default_switch):
    for row in list_cif.cif["comp_list"]["_chem_comp"].iterrows():
      if (quick and random.random() < 0.95): continue
      comp_comp_id = srv.get_comp_comp_id_direct(row["_chem_comp.id"])
      if (comp_comp_id is not None):
        planes = comp_comp_id.get_planes()
        for plane in planes:
          dist_esd_dict = {}
          for plane_atom in plane.plane_atoms:
            dist_esd_dict[str(plane_atom.dist_esd)] = 0
          # FIXME: might break compat for py2/3 because indexing a values call
          if (len(dist_esd_dict) != 1 or list(dist_esd_dict.keys())[0] != "0.02"):
            print(comp_comp_id.chem_comp.id, plane.plane_id, end=' ')
            print(list(dist_esd_dict.keys()))
  if (False or default_switch):
    standard_amino_acids = [
      "GLY", "VAL", "ALA", "LEU", "ILE", "PRO", "MET", "PHE", "TRP", "SER",
      "THR", "TYR", "CYS", "ASN", "GLN", "ASP", "GLU", "LYS", "ARG", "HIS"]
    for row in list_cif.cif["comp_list"]["_chem_comp"].iterrows():
      is_standard_aa = row["_chem_comp.id"] in standard_amino_acids
      if (1 and not is_standard_aa):
        continue
      comp_comp_id = srv.get_comp_comp_id_direct(row["_chem_comp.id"])
      if (is_standard_aa):
        assert comp_comp_id is not None
        assert comp_comp_id.chem_comp.group.strip() == "L-peptide", '%s %s' % (row["_chem_comp.id"], comp_comp_id.chem_comp.group)
      if (comp_comp_id is not None):
        print(comp_comp_id.chem_comp.id.strip(), end=' ')
        print(comp_comp_id.chem_comp.name.strip(), end=' ')
        print(comp_comp_id.chem_comp.group.strip())
        for tor in comp_comp_id.tor_list:
          print("  tor:", tor.atom_id_1, tor.atom_id_2, end=' ')
          print(tor.atom_id_3, tor.atom_id_4, tor.value_angle, end=' ')
          print(tor.value_angle_esd, tor.period)
        for chir in comp_comp_id.chir_list:
          print("  chir:", chir.atom_id_centre, chir.atom_id_1, end=' ')
          print(chir.atom_id_2, chir.atom_id_3, chir.volume_sign)
  if (False or default_switch):
    elib = server.ener_lib()
    if (False or default_switch):
      for syn in elib.lib_synonym.items():
        print(syn)
    if (False or default_switch):
      for vdw in elib.lib_vdw:
        vdw.show()
  print("OK")

if (__name__ == "__main__"):
  exercise()


 *******************************************************************************


 *******************************************************************************
mmtbx/monomer_library/tst_superpose_ideal.py
from __future__ import absolute_import, division, print_function
import sys
from libtbx import easy_run

pdbs = {'4udx_sf4.pdb' : '''
HETATM 9499 FE1  SF4 X1001      39.663   2.346  22.723  1.00  6.06          FE
HETATM 9500 FE2  SF4 X1001      42.157   2.138  23.788  1.00  5.97          FE
HETATM 9501 FE3  SF4 X1001      41.050   0.016  22.600  1.00  6.18          FE
HETATM 9502 FE4  SF4 X1001      41.899   2.128  21.073  1.00  6.14          FE
HETATM 9503  S1  SF4 X1001      41.420   3.878  22.535  1.00  6.14           S
HETATM 9504  S2  SF4 X1001      40.249   1.068  24.522  1.00  6.06           S
HETATM 9505  S3  SF4 X1001      43.249   0.748  22.278  1.00  6.36           S
HETATM 9506  S4  SF4 X1001      39.895   0.913  20.872  1.00  6.51           S
  ''',
  '4udx_sf4_cys.pdb' : '''
ATOM    683  N   CYS X  48      44.683  -0.694  27.648  1.00  5.76           N
ATOM    684  CA  CYS X  48      44.043   0.578  27.358  1.00  5.66           C
ATOM    685  C   CYS X  48      42.533   0.474  27.608  1.00  5.45           C
ATOM    686  O   CYS X  48      41.867  -0.426  27.113  1.00  6.44           O
ATOM    687  CB  CYS X  48      44.312   1.012  25.919  1.00  5.93           C
ATOM    688  SG  CYS X  48      43.598   2.633  25.504  1.00  5.98           S
ATOM    734  N   CYS X  51      38.525   4.088  25.616  1.00  5.96           N
ATOM    735  CA  CYS X  51      37.209   4.232  25.021  1.00  6.18           C
ATOM    736  C   CYS X  51      36.381   2.999  25.357  1.00  5.94           C
ATOM    737  O   CYS X  51      36.866   2.008  25.906  1.00  6.63           O
ATOM    738  CB  CYS X  51      37.245   4.495  23.514  1.00  6.07           C
ATOM    739  SG  CYS X  51      37.502   3.012  22.476  1.00  6.27           S
ATOM    801  N   CYS X  56      41.197  -2.946  25.932  1.00  6.08           N
ATOM    802  CA  CYS X  56      42.138  -3.527  25.009  1.00  6.07           C
ATOM    803  C   CYS X  56      43.396  -3.916  25.747  1.00  5.94           C
ATOM    804  O   CYS X  56      43.802  -3.243  26.704  1.00  7.17           O
ATOM    805  CB  CYS X  56      42.512  -2.569  23.889  1.00  6.66           C
ATOM    806  SG  CYS X  56      41.086  -2.294  22.740  1.00  6.50           S
ATOM   1022  N   CYS X  70      41.337   0.053  17.877  1.00  6.60           N
ATOM   1023  CA  CYS X  70      41.399   1.221  16.973  1.00  6.52           C
ATOM   1024  C   CYS X  70      42.679   1.255  16.144  1.00  6.45           C
ATOM   1025  O   CYS X  70      42.824   2.158  15.296  1.00  7.57           O
ATOM   1026  CB  CYS X  70      41.302   2.516  17.784  1.00  6.74           C
ATOM   1027  SG  CYS X  70      42.684   2.663  18.965  1.00  6.45           S
HETATM 9499 FE1  SF4 X1001      39.663   2.346  22.723  1.00  6.06          FE
HETATM 9500 FE2  SF4 X1001      42.157   2.138  23.788  1.00  5.97          FE
HETATM 9501 FE3  SF4 X1001      41.050   0.016  22.600  1.00  6.18          FE
HETATM 9502 FE4  SF4 X1001      41.899   2.128  21.073  1.00  6.14          FE
HETATM 9503  S1  SF4 X1001      41.420   3.878  22.535  1.00  6.14           S
HETATM 9504  S2  SF4 X1001      40.249   1.068  24.522  1.00  6.06           S
HETATM 9505  S3  SF4 X1001      43.249   0.748  22.278  1.00  6.36           S
HETATM 9506  S4  SF4 X1001      39.895   0.913  20.872  1.00  6.51           S
  ''',
  '4u9h_f3s_cys.pdb' : '''
CRYST1   66.530   97.950  125.850  90.00  90.00  90.00 P 21 21 21
SCALE1      0.015031  0.000000  0.000000        0.00000
SCALE2      0.000000  0.010209  0.000000        0.00000
SCALE3      0.000000  0.000000  0.007946        0.00000
ATOM      1  N   CYS S 231     -40.840  -6.337  14.851  1.00  5.51           N
ATOM      2  CA  CYS S 231     -40.013  -5.494  14.018  1.00  5.50           C
ATOM      3  C   CYS S 231     -40.789  -4.444  13.235  1.00  5.59           C
ATOM      4  O   CYS S 231     -40.377  -3.294  13.181  1.00  6.08           O
ATOM      5  CB  CYS S 231     -39.137  -6.330  13.077  1.00  5.85           C
ATOM      6  SG  CYS S 231     -38.302  -7.647  14.022  1.00  5.36           S
ATOM      7  H   CYS S 231     -40.715  -7.176  14.722  1.00  8.43           H
ATOM      8  HA  CYS S 231     -39.406  -5.011  14.590  1.00  4.25           H
ATOM      9  HB2 CYS S 231     -39.693  -6.723  12.387  1.00  8.29           H
ATOM     10  HB3 CYS S 231     -38.460  -5.757  12.678  1.00  6.29           H
ATOM     11  N   CYS S 249     -36.838 -10.889   5.704  1.00  5.29           N
ATOM     12  CA  CYS S 249     -36.582 -11.388   7.062  1.00  5.34           C
ATOM     13  C   CYS S 249     -35.867 -12.738   6.948  1.00  5.19           C
ATOM     14  O   CYS S 249     -36.217 -13.566   6.098  1.00  5.72           O
ATOM     15  CB  CYS S 249     -37.959 -11.517   7.758  1.00  5.35           C
ATOM     16  SG  CYS S 249     -37.935 -12.287   9.420  1.00  5.03           S
ATOM     17  H   CYS S 249     -37.663 -10.835   5.492  1.00  6.38           H
ATOM     18  HA  CYS S 249     -36.025 -10.764   7.557  1.00  6.71           H
ATOM     19  HB2 CYS S 249     -38.359 -10.636   7.819  1.00  7.35           H
ATOM     20  HB3 CYS S 249     -38.524 -12.071   7.205  1.00  6.05           H
ATOM     40  N   CYS S 252     -34.737 -14.293  12.518  1.00  5.11           N
ATOM     41  CA  CYS S 252     -33.673 -14.292  13.509  1.00  4.88           C
ATOM     42  C   CYS S 252     -34.097 -14.398  14.968  1.00  5.08           C
ATOM     43  O   CYS S 252     -33.221 -14.580  15.827  1.00  5.63           O
ATOM     44  CB  CYS S 252     -32.706 -13.130  13.306  1.00  5.00           C
ATOM     45  SG  CYS S 252     -33.261 -11.513  13.953  1.00  5.02           S
ATOM     46  H   CYS S 252     -34.873 -13.554  12.121  1.00  4.62           H
ATOM     47  HA  CYS S 252     -33.162 -15.093  13.343  0.99  4.06           H
ATOM     48  HB2 CYS S 252     -31.880 -13.344  13.777  1.00  5.77           H
ATOM     49  HB3 CYS S 252     -32.490 -13.045  12.358  1.00  4.19           H
TER
HETATM   50  S1  F3S S1003     -37.373  -8.610  10.393  1.00  5.80           S
HETATM   51  S2  F3S S1003     -34.483 -11.028  10.412  1.00  5.12           S
HETATM   52  S3  F3S S1003     -37.067 -11.059  12.944  1.00  5.03           S
HETATM   53  S4  F3S S1003     -34.752  -8.309  13.065  1.00  5.36           S
HETATM   54 FE1  F3S S1003     -36.744 -10.733  10.683  1.00  4.93          Fe2+
HETATM   55 FE3  F3S S1003     -36.932  -8.794  12.568  1.00  5.27          Fe2+
HETATM   56 FE4  F3S S1003     -34.843 -10.514  12.587  1.00  4.74          Fe2+
END
'''
}

results = {'4udx_sf4.pdb' : [[722, 9714, 12002, 8287],
                             [0,0,13,4],
                             ],
           }

def run():
  fn = '4udx_sf4.pdb'
  f=open(fn, 'w')
  f.write(pdbs[fn])
  f.close()
  for i, superpose in enumerate(['None', 'all']):
    cmd = 'phenix.geometry_minimization %s superpose_ideal=%s' % (fn,
                                                                 superpose,
      )
    print(cmd)
    rc = easy_run.go(cmd)
    for line in rc.stdout_lines:
      #print line
      if line.find('bond_residual_sum')>-1:
        bond_value = round(float(line.split()[-1]))
      if line.find('angle_residual_sum')>-1:
        angle_value = round(float(line.split()[-1]))
    # in the second iteration bond_value and angle_value are expected to be 0!
    # assert bond_value, "%f %f" % (bond_value, results[fn][i][0])
    # assert angle_value, angle_value
    assert bond_value==results[fn][i][0], 'not matching %s to %s' % (
          bond_value,
          results[fn][i][0],
          )
    assert angle_value==results[fn][i][1], 'not matching %s to %s' % (
      angle_value,
      results[fn][i][1],
      )

  for i, superpose in enumerate(['None', 'all']):
    cmd = 'phenix.pdb_interpretation %s superpose_ideal=%s' % (fn,
                                                               superpose,
      )
    print(cmd)
    rc = easy_run.go(cmd)
    for line in rc.stdout_lines:
      #print line
      if line.find('bond_residual_sum')>-1:
        value = round(float(line.split()[-1]))
        print('value',value)
        assert value==results[fn][i][2], 'not matching %s to %s' % (
          value,
          results[fn][i][2],
          )
      if line.find('angle_residual_sum')>-1:
        value = round(float(line.split()[-1]))
        print('value',value)
        assert value==results[fn][i][3], 'not matching %s to %s' % (
          value,
          results[fn][i][3],
          )

  from libtbx.test_utils import assert_lines_in_file
  fn = '4udx_sf4_cys.pdb'
  f=open(fn, 'w')
  f.write(pdbs[fn])
  f.close()
  lines = [
    'Iron sulfur cluster coordination',
    'SF4 X1001',
    'pdb="FE1  SF4 X1001 " - pdb=" SG  CYS X  51 "',
    'pdb="FE4  SF4 X1001 " - pdb=" SG  CYS X  70 "',
    'pdb="FE3  SF4 X1001 " - pdb=" SG  CYS X  56 "',
    'pdb="FE2  SF4 X1001 " - pdb=" SG  CYS X  48 "',
    ]
  cmd = 'phenix.pdb_interpretation %s link_all=True > %s.log' % (fn, fn)
  print(cmd)
  assert not easy_run.call(cmd)
  for line in lines:
    print(line)
    assert_lines_in_file(file_name='%s.log' % fn, lines=line)
  fn = '4u9h_f3s_cys.pdb'
  with open(fn, 'w') as f:
    f.write(pdbs[fn])
  lines = [
    'Iron sulfur cluster coordination',
    'F3S S1003',
    'pdb="FE1  F3S S1003 " - pdb=" SG  CYS S 249 "',
    'pdb="FE3  F3S S1003 " - pdb=" SG  CYS S 231 "',
    'pdb="FE4  F3S S1003 " - pdb=" SG  CYS S 252 "',
    ]
  cmd = 'phenix.pdb_interpretation %s link_all=True > %s.log' % (fn, fn)
  print(cmd)
  assert not easy_run.call(cmd)
  for line in lines:
    print(line)
    assert_lines_in_file(file_name='%s.log' % fn, lines=line)
  return 0

if __name__=="__main__":
  rc = run()#sys.argv[1])
  assert rc==0


 *******************************************************************************


 *******************************************************************************
mmtbx/monomer_library/tst_tyr_from_gly_and_bnz.py
from __future__ import absolute_import, division, print_function
from mmtbx import monomer_library
import mmtbx.monomer_library.pdb_interpretation
import mmtbx.monomer_library.server
from iotbx import pdb
from cctbx.array_family import flex
from libtbx.test_utils import show_diff
from itertools import count
from six.moves import cStringIO as StringIO
import sys
from six.moves import zip

pdb_records_gly_bnz = """\
CRYST1   56.470   56.470   80.520  90.00  90.00  90.00 P 43 21 2     8
ATOM    141  N   GLY     1      19.851  38.691  38.859  1.00 14.08           N
ATOM    142  CA  GLY     1      19.095  38.743  40.099  1.00 15.88           C
ATOM    143  C   GLY     1      17.786  37.966  39.974  1.00 18.62           C
ATOM    144  O   GLY     1      17.440  37.187  40.865  1.00 18.84           O
ATOM    145  CB  GLY     1      18.798  40.190  40.494  1.00 15.26           C
ATOM    146  CG  BNZ     2      17.817  40.296  41.640  1.00 16.71           C
ATOM    147  CD1 BNZ     2      18.228  40.074  42.953  1.00 19.01           C
ATOM    148  CD2 BNZ     2      16.473  40.584  41.411  1.00 16.09           C
ATOM    149  CE1 BNZ     2      17.322  40.135  44.011  1.00 17.90           C
ATOM    150  CE2 BNZ     2      15.560  40.647  42.461  1.00 16.31           C
ATOM    151  CZ  BNZ     2      15.994  40.423  43.758  1.00 19.02           C
ATOM    152  OH  BNZ     2      15.111  40.507  44.807  1.00 21.58           O
END
""".splitlines()

pdb_records_tyr = [line
  .replace(" GLY ", " TYR ")
  .replace(" BNZ     2  ", " TYR     1 ") for line in pdb_records_gly_bnz]

cif_string = """\
#
# Copy of monomer library entries 2006_01_03, to ensure the tests below
# are independent of changes to the BNZ, GLY, TYR definitions.
# Changes with respect to the original monomer library definitions
# are marked with "# ADJUSTMENT".
#

data_comp_BNZ
#
loop_
_chem_comp_atom.comp_id
_chem_comp_atom.atom_id
_chem_comp_atom.type_symbol
_chem_comp_atom.type_energy
_chem_comp_atom.partial_charge
 BNZ           C6     C    CR16      0.000
 BNZ           H6     H    HCR6      0.000
 BNZ           C5     C    CR16      0.000
 BNZ           H5     H    HCR6      0.000
 BNZ           C4     C    CR16      0.000
 BNZ           H4     H    HCR6      0.000
 BNZ           C3     C    CR16      0.000
 BNZ           H3     H    HCR6      0.000
 BNZ           C2     C    CR16      0.000
 BNZ           H2     H    HCR6      0.000
 BNZ           C1     C    CR16      0.000
 BNZ           H1     H    HCR6      0.000
loop_
_chem_comp_tree.comp_id
_chem_comp_tree.atom_id
_chem_comp_tree.atom_back
_chem_comp_tree.atom_forward
_chem_comp_tree.connect_type
 BNZ      C6     n/a    C5     START
 BNZ      H6     C6     .      .
 BNZ      C5     C6     C4     .
 BNZ      H5     C5     .      .
 BNZ      C4     C5     C3     .
 BNZ      H4     C4     .      .
 BNZ      C3     C4     C2     .
 BNZ      H3     C3     .      .
 BNZ      C2     C3     C1     .
 BNZ      H2     C2     .      .
 BNZ      C1     C2     H1     .
 BNZ      H1     C1     .      END
 BNZ      C6     C1     .    ADD
loop_
_chem_comp_bond.comp_id
_chem_comp_bond.atom_id_1
_chem_comp_bond.atom_id_2
_chem_comp_bond.type
_chem_comp_bond.value_dist
_chem_comp_bond.value_dist_esd
 BNZ      H6     C6        coval       0.960    0.020
 BNZ      C5     C6        coval       1.390    0.020
 BNZ      H5     C5        coval       0.960    0.020
 BNZ      C4     C5        coval       1.390    0.020
 BNZ      H4     C4        coval       0.960    0.020
 BNZ      C3     C4        coval       1.390    0.020
 BNZ      H3     C3        coval       0.960    0.020
 BNZ      C2     C3        coval       1.390    0.020
 BNZ      H2     C2        coval       0.960    0.020
 BNZ      C1     C2        coval       1.390    0.020
 BNZ      C1     C6        coval       1.390    0.020
 BNZ      H1     C1        coval       0.960    0.020
loop_
_chem_comp_angle.comp_id
_chem_comp_angle.atom_id_1
_chem_comp_angle.atom_id_2
_chem_comp_angle.atom_id_3
_chem_comp_angle.value_angle
_chem_comp_angle.value_angle_esd
 BNZ      H6     C6     C5      120.000    3.000
 BNZ      H6     C6     C1      120.000    3.000
 BNZ      C5     C6     C1      120.000    3.000
 BNZ      C6     C5     H5      120.000    3.000
 BNZ      C6     C5     C4      120.000    3.000
 BNZ      H5     C5     C4      120.000    3.000
 BNZ      C5     C4     H4      120.000    3.000
 BNZ      C5     C4     C3      120.000    3.000
 BNZ      H4     C4     C3      120.000    3.000
 BNZ      C4     C3     H3      120.000    3.000
 BNZ      C4     C3     C2      120.000    3.000
 BNZ      H3     C3     C2      120.000    3.000
 BNZ      C3     C2     H2      120.000    3.000
 BNZ      C3     C2     C1      120.000    3.000
 BNZ      H2     C2     C1      120.000    3.000
 BNZ      C2     C1     H1      120.000    3.000
 BNZ      C2     C1     C6      120.000    3.000
 BNZ      H1     C1     C6      120.000    3.000
loop_
_chem_comp_tor.comp_id
_chem_comp_tor.id
_chem_comp_tor.atom_id_1
_chem_comp_tor.atom_id_2
_chem_comp_tor.atom_id_3
_chem_comp_tor.atom_id_4
_chem_comp_tor.value_angle
_chem_comp_tor.value_angle_esd
_chem_comp_tor.period
 BNZ      CONST_1  C2     C1     C6     C5         0.000    0.000   0
 BNZ      CONST_2  C1     C6     C5     C4         0.000    0.000   0
 BNZ      CONST_4  C6     C5     C4     C3         0.000    0.000   0
 BNZ      CONST_5  C5     C4     C3     C2         0.000    0.000   0
 BNZ      CONST_6  C4     C3     C2     C1         0.000    0.000   0
 BNZ      CONST_7  C3     C2     C1     C6         0.000    0.000   0
loop_
_chem_comp_plane_atom.comp_id
_chem_comp_plane_atom.plane_id
_chem_comp_plane_atom.atom_id
_chem_comp_plane_atom.dist_esd
 BNZ      plan    C1        0.020 # ADJUSTMENT: all "plan-1" renamed to "plan"
 BNZ      plan    C2        0.020
 BNZ      plan    C3        0.020
 BNZ      plan    C4        0.020
 BNZ      plan    C5        0.020
 BNZ      plan    C6        0.020
 BNZ      plan    H1        0.020
 BNZ      plan    H2        0.020
 BNZ      plan    H3        0.020
 BNZ      plan    H4        0.020
 BNZ      plan    H5        0.020
 BNZ      plan    H6        0.020

data_comp_GLY
#
loop_
_chem_comp_atom.comp_id
_chem_comp_atom.atom_id
_chem_comp_atom.type_symbol
_chem_comp_atom.type_energy
_chem_comp_atom.partial_charge
 GLY           N      N    NH1      -0.204
 GLY           H      H    HNH1      0.204
 GLY           CA     C    CH2       0.002
 GLY           HA1    H    HCH2      0.051
 GLY           HA2    H    HCH2      0.051
 GLY           C      C    C         0.318
 GLY           O      O    O        -0.422
loop_
_chem_comp_tree.comp_id
_chem_comp_tree.atom_id
_chem_comp_tree.atom_back
_chem_comp_tree.atom_forward
_chem_comp_tree.connect_type
 GLY      N      n/a    CA     START
 GLY      H      N      .      .
 GLY      CA     N      C      .
 GLY      HA1    CA     .      .
 GLY      HA2    CA     .      .
 GLY      C      CA     .      END
 GLY      O      C      .      .
loop_
_chem_comp_bond.comp_id
_chem_comp_bond.atom_id_1
_chem_comp_bond.atom_id_2
_chem_comp_bond.type
_chem_comp_bond.value_dist
_chem_comp_bond.value_dist_esd
 GLY      N      H         coval       0.860    0.020
 GLY      N      CA        coval       1.451    0.016
 GLY      CA     HA1       coval       0.970    0.020
 GLY      CA     HA2       coval       0.970    0.020
 GLY      CA     C         coval       1.516    0.018
 GLY      C      O         coval       1.231    0.020
loop_
_chem_comp_angle.comp_id
_chem_comp_angle.atom_id_1
_chem_comp_angle.atom_id_2
_chem_comp_angle.atom_id_3
_chem_comp_angle.value_angle
_chem_comp_angle.value_angle_esd
 GLY      H      N      CA      114.000    3.000
 GLY      HA1    CA     HA2     109.000    3.000
 GLY      HA2    CA     C       109.000    3.000
 GLY      HA1    CA     C       109.000    3.000
 GLY      N      CA     HA1     110.000    3.000
 GLY      N      CA     HA2     110.000    3.000
 GLY      N      CA     C       112.500    2.900
 GLY      CA     C      O       120.800    2.100

data_comp_TYR
#
loop_
_chem_comp_atom.comp_id
_chem_comp_atom.atom_id
_chem_comp_atom.type_symbol
_chem_comp_atom.type_energy
_chem_comp_atom.partial_charge
 TYR           N      N    NH1      -0.204
 TYR           H      H    HNH1      0.204
 TYR           CA     C    CH1       0.058
 TYR           HA     H    HCH1      0.046
 TYR           CB     C    CH2      -0.054
 TYR           HB1    H    HCH2      0.049
 TYR           HB2    H    HCH2      0.049
 TYR           CG     C    CR6      -0.044
 TYR           CD1    C    CR16     -0.053
 TYR           HD1    H    HCR6      0.053
 TYR           CE1    C    CR16     -0.099
 TYR           HE1    H    HCR6      0.054
 TYR           CZ     C    CR6       0.176
 TYR           OH     O    OH1      -0.391
 TYR           HH     H    HOH1      0.305
 TYR           CE2    C    CR16     -0.099
 TYR           HE2    H    HCR6      0.054
 TYR           CD2    C    CR16     -0.053
 TYR           HD2    H    HCR6      0.053
 TYR           C      C    C         0.318
 TYR           O      O    O        -0.422
loop_
_chem_comp_tree.comp_id
_chem_comp_tree.atom_id
_chem_comp_tree.atom_back
_chem_comp_tree.atom_forward
_chem_comp_tree.connect_type
 TYR      N      n/a    CA     START
 TYR      H      N      .      .
 TYR      CA     N      C      .
 TYR      HA     CA     .      .
 TYR      CB     CA     CG     .
 TYR      HB1    CB     .      .
 TYR      HB2    CB     .      .
 TYR      CG     CB     CD1    .
 TYR      CD1    CG     CE1    .
 TYR      HD1    CD1    .      .
 TYR      CE1    CD1    CZ     .
 TYR      HE1    CE1    .      .
 TYR      CZ     CE1    CE2    .
 TYR      OH     CZ     HH     .
 TYR      HH     OH     .      .
 TYR      CE2    CZ     CD2    .
 TYR      HE2    CE2    .      .
 TYR      CD2    CE2    HD2    .
 TYR      HD2    CD2    .      .
 TYR      C      CA     .      END
 TYR      O      C      .      .
 TYR      CD2    CG     .    ADD
loop_
_chem_comp_bond.comp_id
_chem_comp_bond.atom_id_1
_chem_comp_bond.atom_id_2
_chem_comp_bond.type
_chem_comp_bond.value_dist
_chem_comp_bond.value_dist_esd
 TYR      N      H         coval       0.860    0.020
 TYR      N      CA        coval       1.458    0.019
 TYR      CA     HA        coval       0.980    0.020
 TYR      CA     CB        coval       1.530    0.020
 TYR      CB     HB1       coval       0.970    0.020
 TYR      CB     HB2       coval       0.970    0.020
 TYR      CB     CG        coval       1.512    0.022
 TYR      CG     CD2       coval       1.389    0.021
 TYR      CG     CD1       coval       1.389    0.021
 TYR      CD1    HD1       coval       0.930    0.020
 TYR      CD1    CE1       coval       1.382    0.030
 TYR      CE1    HE1       coval       0.930    0.020
 TYR      CE1    CZ        coval       1.378    0.024
 TYR      CZ     OH        coval       1.376    0.021
 TYR      OH     HH        coval       0.820    0.020
 TYR      CZ     CE2       coval       1.378    0.024
 TYR      CE2    HE2       coval       0.930    0.020
 TYR      CE2    CD2       coval       1.382    0.030
 TYR      CD2    HD2       coval       0.930    0.020
 TYR      CA     C         coval       1.525    0.021
 TYR      C      O         coval       1.231    0.020
loop_
_chem_comp_angle.comp_id
_chem_comp_angle.atom_id_1
_chem_comp_angle.atom_id_2
_chem_comp_angle.atom_id_3
_chem_comp_angle.value_angle
_chem_comp_angle.value_angle_esd
 TYR      H      N      CA      114.000    3.000
 TYR      HA     CA     CB      109.000    3.000
 TYR      CB     CA     C       110.100    1.900
 TYR      HA     CA     C       109.000    3.000
 TYR      N      CA     HA      110.000    3.000
 TYR      N      CA     CB      110.500    1.700
 TYR      HB1    CB     HB2     110.000    3.000
 TYR      HB2    CB     CG      108.000    3.000
 TYR      HB1    CB     CG      108.000    3.000
 TYR      CA     CB     HB1     109.000    3.000
 TYR      CA     CB     HB2     109.000    3.000
 TYR      CA     CB     CG      113.900    1.800
 TYR      CB     CG     CD2     120.800    1.500
 TYR      CD1    CG     CD2     118.100    1.500
 TYR      CB     CG     CD1     120.800    1.500
 TYR      HD1    CD1    CE1     119.400    3.000
 TYR      CG     CD1    HD1     119.400    3.000
 TYR      CG     CD1    CE1     121.200    1.500
 TYR      HD2    CD2    CE2     119.400    3.000
 TYR      CG     CD2    HD2     119.400    3.000
 TYR      CG     CD2    CE2     121.200    1.500
 TYR      HE1    CE1    CZ      120.200    3.000
 TYR      CD1    CE1    HE1     120.200    3.000
 TYR      CD1    CE1    CZ      119.600    1.800
 TYR      OH     CZ     CE2     119.900    3.000
 TYR      CE1    CZ     OH      119.900    3.000
 TYR      CZ     OH     HH      110.000    3.000
 TYR      CE1    CZ     CE2     120.300    2.000
 TYR      HE2    CE2    CD2     120.200    3.000
 TYR      CZ     CE2    HE2     120.200    3.000
 TYR      CZ     CE2    CD2     119.600    1.800
 TYR      N      CA     C       111.200    2.800
 TYR      CA     C      O       120.800    1.700
loop_
_chem_comp_tor.comp_id
_chem_comp_tor.id
_chem_comp_tor.atom_id_1
_chem_comp_tor.atom_id_2
_chem_comp_tor.atom_id_3
_chem_comp_tor.atom_id_4
_chem_comp_tor.value_angle
_chem_comp_tor.value_angle_esd
_chem_comp_tor.period
 TYR      chi1     N      CA     CB     CG       180.000   15.000   3
 TYR      chi2     CA     CB     CG     CD1       90.000   20.000   2
 TYR      CONST_01 CB     CG     CD1    CE1      180.000    0.000   0
 TYR      CONST_02 CG     CD1    CE1    CZ         0.000    0.000   0
 TYR      CONST_03 CD1    CE1    CZ     CE2        0.000    0.000   0
 TYR      hh1      CE1    CZ     OH     HH        60.000   30.000   2
 TYR      CONST_04 CE1    CZ     CE2    CD2        0.000    0.000   0
 TYR      CONST_05 CZ     CE2    CD2    CG         0.000    0.000   0
loop_
_chem_comp_chir.comp_id
_chem_comp_chir.id
_chem_comp_chir.atom_id_centre
_chem_comp_chir.atom_id_1
_chem_comp_chir.atom_id_2
_chem_comp_chir.atom_id_3
_chem_comp_chir.volume_sign
 TYR      chir_01  CA     N      CB     C         negativ
loop_
_chem_comp_plane_atom.comp_id
_chem_comp_plane_atom.plane_id
_chem_comp_plane_atom.atom_id
_chem_comp_plane_atom.dist_esd
 TYR      plan      CB        0.020
 TYR      plan      CG        0.020
 TYR      plan      CD1       0.020
 TYR      plan      CE1       0.020
 TYR      plan      CZ        0.020
 TYR      plan      CE2       0.020
 TYR      plan      CD2       0.020
 TYR      plan      OH        0.020
 TYR      plan      HD1       0.020
 TYR      plan      HE1       0.020
 TYR      plan      HE2       0.020
 TYR      plan      HD2       0.020

#
# end copy of monomer library entries
#

#
# Modification of GLY, to add a CB
#
data_mod_gly_plus_c_beta
loop_
_chem_mod_atom.mod_id
_chem_mod_atom.function
_chem_mod_atom.atom_id
_chem_mod_atom.new_atom_id
_chem_mod_atom.new_type_symbol
_chem_mod_atom.new_type_energy
_chem_mod_atom.new_partial_charge
 gly_plus_c_beta   change   CA     .      .    CH1     0.058
 gly_plus_c_beta   change   HA1    HA     .    HCH1    0.046
 gly_plus_c_beta   delete   HA2    .      .    .        .
 gly_plus_c_beta   add      .      CB     C    CH2    -0.054
 gly_plus_c_beta   add      .      HB1    H    HCH2    0.049
 gly_plus_c_beta   add      .      HB2    H    HCH2    0.049
loop_
_chem_mod_bond.mod_id
_chem_mod_bond.function
_chem_mod_bond.atom_id_1
_chem_mod_bond.atom_id_2
_chem_mod_bond.new_type
_chem_mod_bond.new_value_dist
_chem_mod_bond.new_value_dist_esd
 gly_plus_c_beta   change   CA       C         .            1.525    0.021
 gly_plus_c_beta   change   CA       N         .            1.458    0.019
 gly_plus_c_beta   change   CA       HA        .            0.980     .
 gly_plus_c_beta   add      CA       CB        coval        1.530    0.020
 gly_plus_c_beta   add      CB       HB1       coval        0.970    0.020
 gly_plus_c_beta   add      CB       HB2       coval        0.970    0.020
loop_
_chem_mod_angle.mod_id
_chem_mod_angle.function
_chem_mod_angle.atom_id_1
_chem_mod_angle.atom_id_2
_chem_mod_angle.atom_id_3
_chem_mod_angle.new_value_angle
_chem_mod_angle.new_value_angle_esd
 gly_plus_c_beta   add      C       CA      CB      110.1      1.900
 gly_plus_c_beta   change   C       CA      N       111.2      2.800
 gly_plus_c_beta   change   CA      C       O          .       1.700
 gly_plus_c_beta   add      CA      CB      HB1     109.0      3.000
 gly_plus_c_beta   add      CA      CB      HB2     109.0      3.000
 gly_plus_c_beta   add      CB      CA      HA      109.0      3.000
 gly_plus_c_beta   add      CB      CA      N       110.5      1.700
 gly_plus_c_beta   add      HB1     CB      HB2     110.0      3.000
loop_
_chem_mod_chir.mod_id
_chem_mod_chir.function
_chem_mod_chir.atom_id_centre
_chem_mod_chir.atom_id_1
_chem_mod_chir.atom_id_2
_chem_mod_chir.atom_id_3
_chem_mod_chir.new_volume_sign
 gly_plus_c_beta  add  CA     N      CB     C         negativ

#
# Modification of BNZ (benzene), to make it into a TYR sidechain,
# but without the CB
#
data_mod_bnz_to_tyr_sidechain
loop_
_chem_mod_atom.mod_id
_chem_mod_atom.function
_chem_mod_atom.atom_id
_chem_mod_atom.new_atom_id
_chem_mod_atom.new_type_symbol
_chem_mod_atom.new_type_energy
_chem_mod_atom.new_partial_charge
 bnz_to_tyr_sidechain   change   C1     CZ     .    CR6     0.176
 bnz_to_tyr_sidechain   delete   H1     .      .    .        .
 bnz_to_tyr_sidechain   add      .      OH     O    OH1    -0.391
 bnz_to_tyr_sidechain   add      .      HH     H    HOH1    0.305
 bnz_to_tyr_sidechain   change   C2     CE1    .    CR16   -0.099
 bnz_to_tyr_sidechain   change   H2     HE1    .    HCR6    0.054
 bnz_to_tyr_sidechain   change   C3     CD1    .    CR16   -0.053
 bnz_to_tyr_sidechain   change   H3     HD1    .    HCR6    0.053
 bnz_to_tyr_sidechain   change   C4     CG     .    CR6    -0.044
 bnz_to_tyr_sidechain   delete   H4     .      .    .        .
 bnz_to_tyr_sidechain   change   C5     CD2    .    CR16   -0.053
 bnz_to_tyr_sidechain   change   H5     HD2    .    HCR6    0.053
 bnz_to_tyr_sidechain   change   C6     CE2    .    CR16   -0.099
 bnz_to_tyr_sidechain   change   H6     HE2    .    HCR6    0.054
loop_
_chem_mod_bond.mod_id
_chem_mod_bond.function
_chem_mod_bond.atom_id_1
_chem_mod_bond.atom_id_2
_chem_mod_bond.new_type
_chem_mod_bond.new_value_dist
_chem_mod_bond.new_value_dist_esd
 bnz_to_tyr_sidechain   change   CD1      CE1       .            1.382    0.030
 bnz_to_tyr_sidechain   change   CD1      CG        .            1.389    0.021
 bnz_to_tyr_sidechain   change   CD1      HD1       .            0.930    0.020
 bnz_to_tyr_sidechain   change   CD2      CE2       .            1.382    0.030
 bnz_to_tyr_sidechain   change   CD2      CG        .            1.389    0.021
 bnz_to_tyr_sidechain   change   CD2      HD2       .            0.930    0.020
 bnz_to_tyr_sidechain   change   CE1      CZ        .            1.378    0.024
 bnz_to_tyr_sidechain   change   CE1      HE1       .            0.930    0.020
 bnz_to_tyr_sidechain   change   CE2      CZ        .            1.378    0.024
 bnz_to_tyr_sidechain   change   CE2      HE2       .            0.930    0.020
 bnz_to_tyr_sidechain   add      CZ       OH        coval        1.376    0.021
 bnz_to_tyr_sidechain   add      HH       OH        coval        0.820    0.020
loop_
_chem_mod_angle.mod_id
_chem_mod_angle.function
_chem_mod_angle.atom_id_1
_chem_mod_angle.atom_id_2
_chem_mod_angle.atom_id_3
_chem_mod_angle.new_value_angle
_chem_mod_angle.new_value_angle_esd
 bnz_to_tyr_sidechain   change   CD1     CE1     CZ      119.6      1.800
 bnz_to_tyr_sidechain   change   CD1     CE1     HE1     120.2      3.000
 bnz_to_tyr_sidechain   change   CD1     CG      CD2     118.1      1.500
 bnz_to_tyr_sidechain   change   CD2     CE2     CZ      119.6      1.800
 bnz_to_tyr_sidechain   change   CD2     CE2     HE2     120.2       .
 bnz_to_tyr_sidechain   change   CE1     CD1     CG      121.2      1.500
 bnz_to_tyr_sidechain   change   CE1     CD1     CG      121.2      1.500
 bnz_to_tyr_sidechain   change   CE1     CD1     HD1     119.4       .
 bnz_to_tyr_sidechain   change   CE1     CZ      CE2     120.3      2.000
 bnz_to_tyr_sidechain   add      CE1     CZ      OH      119.9      3.000
 bnz_to_tyr_sidechain   change   CE2     CD2     CG      121.2      1.500
 bnz_to_tyr_sidechain   change   CE2     CD2     HD2     119.4       .
 bnz_to_tyr_sidechain   add      CE2     CZ      OH      119.9      3.000
 bnz_to_tyr_sidechain   change   CG      CD1     HD1     119.4       .
 bnz_to_tyr_sidechain   change   CG      CD2     HD2     119.4       .
 bnz_to_tyr_sidechain   change   CZ      CE1     HE1     120.2       .
 bnz_to_tyr_sidechain   change   CZ      CE2     HE2     120.2       .
 bnz_to_tyr_sidechain   add      CZ      OH      HH      110.0      3.000
loop_
_chem_mod_tor.mod_id
_chem_mod_tor.function
_chem_mod_tor.id
_chem_mod_tor.atom_id_1
_chem_mod_tor.atom_id_2
_chem_mod_tor.atom_id_3
_chem_mod_tor.atom_id_4
_chem_mod_tor.new_value_angle
_chem_mod_tor.new_value_angle_esd
_chem_mod_tor.new_period
 bnz_to_tyr_sidechain  delete  CONST_1   CE1   CZ    CE2   CD2      .     .   .
 bnz_to_tyr_sidechain  add     CONST_04  CE1   CZ    CE2   CD2     0.0   0.0  0
 bnz_to_tyr_sidechain  delete  CONST_2   CZ    CE2   CD2   CG       .     .   .
 bnz_to_tyr_sidechain  add     CONST_05  CZ    CE2   CD2   CG      0.0   0.0  0
 bnz_to_tyr_sidechain  delete  CONST_4   CE2   CD2   CG    CD1      .     .   .
 bnz_to_tyr_sidechain  delete  CONST_5   CD2   CG    CD1   CE1      .     .   .
 bnz_to_tyr_sidechain  add     hh1       CE1   CZ    OH    HH     60.0  30.0  2
 bnz_to_tyr_sidechain  delete  CONST_6   CG    CD1   CE1   CZ       .     .   .
 bnz_to_tyr_sidechain  add     CONST_02  CG    CD1   CE1   CZ      0.0   0.0  0
 bnz_to_tyr_sidechain  delete  CONST_7   CD1   CE1   CZ    CE2      .     .   .
 bnz_to_tyr_sidechain  add     CONST_03  CD1   CE1   CZ    CE2     0.0   0.0  0
loop_
_chem_mod_plane_atom.mod_id
_chem_mod_plane_atom.function
_chem_mod_plane_atom.plane_id
_chem_mod_plane_atom.atom_id
_chem_mod_plane_atom.new_dist_esd
 bnz_to_tyr_sidechain  add       plan   OH        0.020

data_link_list
loop_
_chem_link.id
_chem_link.comp_id_1
_chem_link.mod_id_1
_chem_link.group_comp_1
_chem_link.comp_id_2
_chem_link.mod_id_2
_chem_link.group_comp_2
_chem_link.name
gly_bnz_to_tyr  GLY  gly_plus_c_beta  .  BNZ  bnz_to_tyr_sidechain  . .

data_link_gly_bnz_to_tyr
loop_
_chem_link_bond.link_id
_chem_link_bond.atom_1_comp_id
_chem_link_bond.atom_id_1
_chem_link_bond.atom_2_comp_id
_chem_link_bond.atom_id_2
_chem_link_bond.type
_chem_link_bond.value_dist
_chem_link_bond.value_dist_esd
 gly_bnz_to_tyr  1 CB      2 CG        .           1.512    0.022
loop_
_chem_link_angle.link_id
_chem_link_angle.atom_1_comp_id
_chem_link_angle.atom_id_1
_chem_link_angle.atom_2_comp_id
_chem_link_angle.atom_id_2
_chem_link_angle.atom_3_comp_id
_chem_link_angle.atom_id_3
_chem_link_angle.value_angle
_chem_link_angle.value_angle_esd
 gly_bnz_to_tyr  1 CA      1 CB      2 CG      113.900    1.800
 gly_bnz_to_tyr  1 CB      2 CG      2 CD1     120.800    1.500
 gly_bnz_to_tyr  1 CB      2 CG      2 CD2     120.800    1.500
 gly_bnz_to_tyr  2 CG      1 CB      1 HB1     108.000    3.000
 gly_bnz_to_tyr  2 CG      1 CB      1 HB2     108.000    3.000
loop_
_chem_link_tor.link_id
_chem_link_tor.id
_chem_link_tor.atom_1_comp_id
_chem_link_tor.atom_id_1
_chem_link_tor.atom_2_comp_id
_chem_link_tor.atom_id_2
_chem_link_tor.atom_3_comp_id
_chem_link_tor.atom_id_3
_chem_link_tor.atom_4_comp_id
_chem_link_tor.atom_id_4
_chem_link_tor.value_angle
_chem_link_tor.value_angle_esd
_chem_link_tor.period
 gly_bnz_to_tyr  CONST_01  1 CB     2 CG     2 CD1    2 CE1     180.00   0.0 0
 gly_bnz_to_tyr  chi1      1 N      1 CA     1 CB     2 CG      180.00  15.0 3
 gly_bnz_to_tyr  chi2      1 CA     1 CB     2 CG     2 CD1      90.00  20.0 2
loop_
_chem_link_plane.link_id
_chem_link_plane.plane_id
_chem_link_plane.atom_comp_id
_chem_link_plane.atom_id
_chem_link_plane.dist_esd
 gly_bnz_to_tyr  plan   1 CB    0.020
"""

def exercise(args):
  if ("--verbose" in args):
    out = sys.stdout
  else:
    out = StringIO()
  mon_lib_srv = monomer_library.server.server()
  ener_lib = monomer_library.server.ener_lib()
  with open("tmp.cif", "w") as f:
    f.write(cif_string)
  mon_lib_srv.process_cif(file_name="tmp.cif")
  mod_gly_plus_c_beta = mon_lib_srv.mod_mod_id_dict[
    "gly_plus_c_beta"]
  mod_bnz_to_tyr_sidechain = mon_lib_srv.mod_mod_id_dict[
    "bnz_to_tyr_sidechain"]
  #
  pdb_inp = pdb.input(
    source_info=None, lines=flex.std_string(pdb_records_gly_bnz))
  pdb_hierarchy = pdb_inp.construct_hierarchy()
  residues = pdb_hierarchy.only_conformer().residues()
  assert len(residues) == 2
  monomer_definitions = []
  for residue in residues:
    md, ani = mon_lib_srv.get_comp_comp_id_and_atom_name_interpretation(
      residue_name=residue.resname,
      atom_names=residue.atoms().extract_name())
    if (ani is not None):
      assert residue.resname == "GLY"
      assert ani.mon_lib_names() == ["N", "CA", "C", "O", None]
    monomer_definitions.append(md)
  gly_plus_c_beta = monomer_definitions[0].apply_mod(mod=mod_gly_plus_c_beta)
  gly_plus_c_beta.show(f=out)
  sidechain = monomer_definitions[1].apply_mod(mod=mod_bnz_to_tyr_sidechain)
  sidechain.show(f=out)
  #
  tyr_definition = mon_lib_srv.get_comp_comp_id_direct("TYR")
  tyr_atoms = []
  for atom in tyr_definition.atom_list:
    s = StringIO()
    atom.show(f=s)
    tyr_atoms.append(s.getvalue())
  tyr_atoms.sort()
  #
  mod_atoms = []
  for atom in gly_plus_c_beta.atom_list + sidechain.atom_list:
    s = StringIO()
    atom.show(f=s)
    mod_atoms.append(s.getvalue())
  mod_atoms.sort()
  assert not show_diff("".join(mod_atoms), "".join(tyr_atoms))
  #
  tyr_bonds = []
  for bond in tyr_definition.normalized_bond_list():
    s = StringIO()
    bond.show(f=s)
    tyr_bonds.append(s.getvalue())
  tyr_bonds.sort()
  #
  mod_bonds = []
  for bond in   gly_plus_c_beta.normalized_bond_list() \
              + sidechain.normalized_bond_list():
    s = StringIO()
    bond.show(f=s)
    mod_bonds.append(s.getvalue())
  mod_bonds.sort()
  mod_bonds.insert(5, None)
  mod_bonds += [None] * (len(tyr_bonds) - len(mod_bonds))
  for i,t,m in zip(count(), tyr_bonds, mod_bonds):
    print("bond index:", i, file=out)
    if (m is None):
      print(t, file=out)
    else:
      t = t.splitlines()
      m = m.splitlines()
      assert len(m) == len(t)
      for ti,mi in zip(t, m):
        print("%-39s %-39s" % (ti,mi), file=out)
    print(file=out)
  assert not show_diff("".join(mod_bonds[:5]), "".join(tyr_bonds[:5]))
  assert not show_diff("".join(mod_bonds[6]), "".join(tyr_bonds[6]))
  assert not show_diff("".join(mod_bonds[8:]), "".join(tyr_bonds[8:]))
  #
  tyr_angles = []
  for angle in tyr_definition.normalized_angle_list():
    s = StringIO()
    angle.show(f=s)
    tyr_angles.append(s.getvalue())
  tyr_angles.sort()
  #
  mod_angles = []
  for angle in  gly_plus_c_beta.normalized_angle_list() \
              + sidechain.normalized_angle_list():
    s = StringIO()
    angle.show(f=s)
    mod_angles.append(s.getvalue())
  mod_angles.sort()
  mod_angles.insert(4, None)
  mod_angles.insert(10, None)
  mod_angles.insert(11, None)
  mod_angles.insert(24, None)
  mod_angles.insert(25, None)
  mod_angles += [None] * (len(tyr_angles) - len(mod_angles))
  for i,t,m in zip(count(), tyr_angles, mod_angles):
    print("angle index:", i, file=out)
    if (m is None):
      print(t, file=out)
    else:
      t = t.splitlines()
      m = m.splitlines()
      assert len(m) == len(t)
      for ti,mi in zip(t, m):
        print("%-39s %-39s" % (ti,mi), file=out)
      print(file=out)
  assert not show_diff("".join(mod_angles[:4]), "".join(tyr_angles[:4]))
  assert not show_diff("".join(mod_angles[5:10]), "".join(tyr_angles[5:10]))
  assert not show_diff("".join(mod_angles[12:24]), "".join(tyr_angles[12:24]))
  assert not show_diff("".join(mod_angles[26:]), "".join(tyr_angles[26:]))
  #
  tyr_tors = []
  for tor in tyr_definition.tor_list:
    s = StringIO()
    tor.show(f=s)
    tyr_tors.append(s.getvalue())
  tyr_tors.sort()
  #
  mod_tors = []
  for tor in  gly_plus_c_beta.tor_list \
              + sidechain.tor_list:
    s = StringIO()
    tor.show(f=s)
    mod_tors.append(s.getvalue())
  mod_tors.sort()
  mod_tors.insert(0, None)
  mod_tors.insert(5, None)
  mod_tors.insert(6, None)
  for i,t,m in zip(count(), tyr_tors, mod_tors):
    print("tor index:", i, file=out)
    if (m is None):
      print(t, file=out)
    else:
      t = t.splitlines()
      m = m.splitlines()
      assert len(m) == len(t)
      for ti,mi in zip(t, m):
        print("%-39s %-39s" % (ti,mi), file=out)
      print(file=out)
  assert not show_diff("".join(mod_tors[1:5]), "".join(tyr_tors[1:5]))
  assert not show_diff("".join(mod_tors[7]), "".join(tyr_tors[7]))
  #
  assert len(tyr_definition.chir_list) == 1
  assert len(gly_plus_c_beta.chir_list) == 1
  assert len(sidechain.chir_list) == 0
  gly_plus_c_beta.chir_list[0].id = tyr_definition.chir_list[0].id
  s = StringIO()
  tyr_definition.chir_list[0].show(f=s)
  tyr_chir = s.getvalue()
  s = StringIO()
  gly_plus_c_beta.chir_list[0].show(f=s)
  mod_chir = s.getvalue()
  assert not show_diff(mod_chir, tyr_chir)
  #
  tyr_plane_atoms = []
  for plane_atom in tyr_definition.plane_atom_list:
    s = StringIO()
    plane_atom.show(f=s)
    tyr_plane_atoms.append(s.getvalue())
  tyr_plane_atoms.sort()
  #
  mod_plane_atoms = []
  for plane_atom in  gly_plus_c_beta.plane_atom_list \
                   + sidechain.plane_atom_list:
    s = StringIO()
    plane_atom.show(f=s)
    mod_plane_atoms.append(s.getvalue())
  mod_plane_atoms.sort()
  mod_plane_atoms.insert(0, None)
  mod_plane_atoms += [None] * (len(tyr_plane_atoms) - len(mod_plane_atoms))
  for i,t,m in zip(count(), tyr_plane_atoms, mod_plane_atoms):
    print("plane_atom index:", i, file=out)
    if (m is None):
      print(t, file=out)
    else:
      t = t.splitlines()
      m = m.splitlines()
      assert len(m) == len(t)
      for ti,mi in zip(t, m):
        print("%-39s %-39s" % (ti,mi), file=out)
      print(file=out)
  assert not show_diff(
    "".join(mod_plane_atoms[1:]), "".join(tyr_plane_atoms[1:]))
  #
  processed_tyr = monomer_library.pdb_interpretation.process(
    mon_lib_srv=mon_lib_srv,
    ener_lib=ener_lib,
    params=None,
    raw_records=pdb_records_tyr,
    log=sys.stdout)
  print()
  processed_gly_bnz = monomer_library.pdb_interpretation.process(
    mon_lib_srv=mon_lib_srv,
    ener_lib=ener_lib,
    params=None,
    raw_records=pdb_records_gly_bnz,
    log=sys.stdout)
  print()
  print("geo_tyr")
  geo_tyr = processed_tyr.geometry_restraints_manager()
  print()
  print("geo_gly_bnz")
  geo_gly_bnz = processed_gly_bnz.geometry_restraints_manager()
  print()
  #
  print("TODO: compare geometry restraints")
  print("OK")

if (__name__ == "__main__"):
  exercise(sys.argv[1:])


 *******************************************************************************


 *******************************************************************************
mmtbx/monomer_library/tst_user_supplied_library.py
from __future__ import absolute_import, division, print_function
import os
from libtbx import easy_run

water = '''CRYST1   21.937    4.866   23.477  90.00 107.08  90.00 P 1 21 1
HETATM  108  O   HOH A   8      -6.471   5.227   7.124  1.00 22.62           O
HETATM  109  H1  HOH A   8      -5.757   5.261   7.584  1.00 22.62           H
HETATM  110  H2  HOH A   8      -6.841   5.979   7.266  1.00 22.62           H
END
'''

hoh = '''
data_comp_list
loop_
_chem_comp.id
_chem_comp.three_letter_code
_chem_comp.name
_chem_comp.group
_chem_comp.number_atoms_all
_chem_comp.number_atoms_nh
_chem_comp.desc_level
HOH        HOH 'water                    ' ligand 3 1 .
#
data_comp_HOH
#
loop_
_chem_comp_atom.comp_id
_chem_comp_atom.atom_id
_chem_comp_atom.type_symbol
_chem_comp_atom.type_energy
_chem_comp_atom.charge
_chem_comp_atom.partial_charge
_chem_comp_atom.x
_chem_comp_atom.y
_chem_comp_atom.z
HOH         O      O   OH2    0    .      -0.2095    0.0000   -0.2963
HOH         H1     H   HOH2   0    .       0.7334    0.0000   -0.2963
HOH         H2     H   HOH2   0    .      -0.5239    0.0000    0.5926
#
loop_
_chem_comp_bond.comp_id
_chem_comp_bond.atom_id_1
_chem_comp_bond.atom_id_2
_chem_comp_bond.type
_chem_comp_bond.value_dist
_chem_comp_bond.value_dist_esd
HOH   O       H1    single        %s.943 0.020
HOH   O       H2    single        %s.943 0.020
#
loop_
_chem_comp_angle.comp_id
_chem_comp_angle.atom_id_1
_chem_comp_angle.atom_id_2
_chem_comp_angle.atom_id_3
_chem_comp_angle.value_angle
_chem_comp_angle.value_angle_esd
HOH   H2      O       H1          180.00 3.000
'''

inp='tst_user_supplied_library.pdb'
base_cmd = 'phenix.geometry_minimization %s' % inp
cmds = [
    base_cmd,
    '%s HOH.cif' % (base_cmd),
    '%s pdb_interpretation.restraints_library.user_supplied.path=usl' % (base_cmd),
    '%s pdb_interpretation.restraints_library.user_supplied.path=usl' % (base_cmd),
    '%s pdb_interpretation.restraints_library.user_supplied.path=usl' % (base_cmd),
    '%s HOH.cif pdb_interpretation.restraints_library.user_supplied.path=usl' % (base_cmd),
    '%s HOH.cif pdb_interpretation.restraints_library.user_supplied.path=usl' % (base_cmd),
    '%s HOH.cif pdb_interpretation.restraints_library.user_supplied.path=usl' % (base_cmd),
        ]
cmds[3]+=' pdb_interpretation.restraints_library.user_supplied.action=pre'
cmds[4]+=' pdb_interpretation.restraints_library.user_supplied.action=post'
cmds[6]+=' pdb_interpretation.restraints_library.user_supplied.action=pre'
cmds[7]+=' pdb_interpretation.restraints_library.user_supplied.action=post'

results = [
  '''bond pdb=" O   HOH A   8 "
     pdb=" H2  HOH A   8 "
  ideal  model  delta    sigma   weight residual
  0.850  0.850''',
  '''bond pdb=" O   HOH A   8 "
     pdb=" H2  HOH A   8 "
  ideal  model  delta    sigma   weight residual
  1.943  1.943''',
  '''bond pdb=" O   HOH A   8 "
     pdb=" H1  HOH A   8 "
  ideal  model  delta    sigma   weight residual
  10.943 10.943''',
  '''bond pdb=" O   HOH A   8 "
     pdb=" H1  HOH A   8 "
  ideal  model  delta    sigma   weight residual
  10.943 10.943''',
  '''bond pdb=" O   HOH A   8 "
     pdb=" H2  HOH A   8 "
  ideal  model  delta    sigma   weight residual
  0.850  0.850''',
  '''bond pdb=" O   HOH A   8 "
     pdb=" H2  HOH A   8 "
  ideal  model  delta    sigma   weight residual
  5.943  5.943''',
  '''bond pdb=" O   HOH A   8 "
     pdb=" H2  HOH A   8 "
  ideal  model  delta    sigma   weight residual
  6.943  6.943''',
  '''bond pdb=" O   HOH A   8 "
     pdb=" H2  HOH A   8 "
  ideal  model  delta    sigma   weight residual
  7.943  7.943''',
  ]

def write_water(a,b):
  f=open('HOH.cif', 'w')
  f.write(hoh % (a,b))
  del f

def main():
  f=open(inp, 'w')
  f.write(water)
  del f
  if not os.path.exists('usl'): os.mkdir('usl')
  os.chdir('usl')
  write_water(10,10)
  os.chdir('..')
  for i, cmd in enumerate(cmds):
    print(i, cmd)
    write_water(i,i)
    easy_run.go(cmd)
    f=open(inp.replace('.pdb', '_minimized.geo'), 'r')
    lines=f.read()
    del f
    assert lines.find(results[i])>-1, '"%s"\n not found' % results[i]

if __name__ == '__main__':
  main()


 *******************************************************************************
