

 *******************************************************************************
mmtbx/regression/tst_polder.py
from __future__ import absolute_import, division, print_function
import time, os
import iotbx.pdb
from mmtbx.programs import fmodel, polder
from iotbx.cli_parser import run_program
from iotbx import reflection_file_reader
from libtbx.test_utils import approx_equal
from libtbx.utils import null_out
from cctbx import miller
from cctbx import maptbx
from scitbx.array_family import flex

# ---------------------------------------------------------------------------

def get_map(cg, mc):
  fft_map = miller.fft_map(
    crystal_gridding     = cg,
    fourier_coefficients = mc)
  fft_map.apply_sigma_scaling()
  return fft_map.real_map_unpadded()

def get_map_stats(map, sites_frac):
  map_values = flex.double()
  for sf in sites_frac:
    map_values.append(map.eight_point_interpolation(sf))
  return map_values

def format_map_stat(m):
  return m.min_max_mean().as_tuple(), (m>flex.mean(m)).count(True)

# ---------------------------------------------------------------------------

def exercise_00(prefix="tst_polder"):
  """
  Test for phenix.polder.
  """

  # save test model as file
  model_fn = "tst_polder.pdb"
  with open(model_fn, "w") as f:
    f.write(pdb_str)

  pdb_hierarchy = iotbx.pdb.input(
    source_info=None, lines=pdb_str).construct_hierarchy()

  # create test data with phenix.fmodel
  mtz_fn = "tst_polder.mtz"
  args = [
    model_fn,
    "high_res=2.0",
    "type=real",
    "label=f-obs",
    "k_sol=0.4",
    "b_sol=50",
    "output.file_name=%s" % mtz_fn]
  run_program(program_class=fmodel.Program, args=args, logger=null_out())

  # run polder on test files
  args_polder = [
    model_fn,
    mtz_fn,
    "sphere_radius=3",
    'solvent_exclusion_mask_selection="resname PHE and resseq 1" ',
    'debug="True"'
  ]
  r = run_program(program_class=polder.Program, args=args_polder, logger=null_out())

  miller_arrays = reflection_file_reader.any_reflection_file(file_name =
    r.output_file).as_miller_arrays()
  mmm_mp, mmm_o = check(miller_arrays, pdb_hierarchy)
  assert approx_equal(mmm_mp, [0.329, 6.119, 3.333], eps=0.15)
  assert approx_equal(mmm_o, [-2.838, 0.901, -1.385], eps=0.15)

  os.remove("box_1_polder.ccp4")
  os.remove("box_2_polder.ccp4")
  os.remove("box_3_polder.ccp4")
  os.remove(r.output_file)

  extensions = ['.pdb', '.cif']
  for ext in extensions:
    file_path = 'box_polder' + ext
    if os.path.isfile(file_path):
      try:
        os.remove(file_path)
      except Exception as e:
        print(f"Error removing {file_path}: {e}")

  # now with high resolution cutoff
  args_polder = [
    model_fn,
    mtz_fn,
    "fmodel.xray_data.high_resolution=2.2",
    "sphere_radius=3",
    'solvent_exclusion_mask_selection="resname PHE and resseq 1" ',
    'output_file_name_prefix=tst_cutoff',
    'debug="True"'
  ]
  r = run_program(program_class=polder.Program, args=args_polder, logger=null_out())

  miller_arrays = reflection_file_reader.any_reflection_file(file_name =
    r.output_file).as_miller_arrays()
  mmm_mp, mmm_o = check(miller_arrays, pdb_hierarchy)
  assert approx_equal(mmm_mp, [-0.358, 5.149, 2.882], eps=0.15)
  assert approx_equal(mmm_o, [-3.708, -0.734, -2.217], eps=0.15)

  os.remove(r.output_file)
  os.remove("box_1_polder.ccp4")
  os.remove("box_2_polder.ccp4")
  os.remove("box_3_polder.ccp4")
  extensions = ['.pdb', '.cif']
  for ext in extensions:
    file_path = 'box_polder' + ext
    if os.path.isfile(file_path):
      try:
        os.remove(file_path)
      except Exception as e:
        print(f"Error removing {file_path}: {e}")

  # now with low resolution cutoff
  args_polder = [
    model_fn,
    mtz_fn,
    "fmodel.xray_data.low_resolution=10",
    "sphere_radius=3",
    'solvent_exclusion_mask_selection="resname PHE and resseq 1" ',
    'output_file_name_prefix=tst_cutoff_low',
    'debug="True"'
  ]
  r = run_program(program_class=polder.Program, args=args_polder, logger=null_out())

  miller_arrays = reflection_file_reader.any_reflection_file(file_name =
    r.output_file).as_miller_arrays()
  mmm_mp, mmm_o = check(miller_arrays, pdb_hierarchy)
  assert approx_equal(mmm_mp, [2.547, 12.601, 5.798], eps=0.15)
  assert approx_equal(mmm_o, [0.325, 5.589, 2.042], eps=0.15)

  # Clean up files
  os.remove(model_fn)
  os.remove(mtz_fn)
  os.remove(r.output_file)
  os.remove("box_1_polder.ccp4")
  os.remove("box_2_polder.ccp4")
  os.remove("box_3_polder.ccp4")
  extensions = ['.pdb', '.cif']
  for ext in extensions:
    file_path = 'box_polder' + ext
    if os.path.isfile(file_path):
      try:
        os.remove(file_path)
      except Exception as e:
        print(f"Error removing {file_path}: {e}")

# ---------------------------------------------------------------------------

def check(miller_arrays, pdb_hierarchy):
  mc_polder, mc_bias_omit, mc_omit = [None,]*3
  for ma in miller_arrays:
    lbl = ma.info().label_string()
    if(lbl == "mFo-DFc_polder,PHImFo-DFc_polder"):
      mc_polder = ma.deep_copy()
    if(lbl == "mFo-DFc_bias_omit,PHImFo-DFc_bias_omit"):
      mc_bias_omit = ma.deep_copy()
    if(lbl == "mFo-DFc_omit,PHImFo-DFc_omit"):
      mc_omit = ma.deep_copy()
  assert [mc_polder, mc_bias_omit, mc_omit].count(None)==0
  cg = maptbx.crystal_gridding(
    unit_cell         = mc_polder.unit_cell(),
    d_min             = mc_polder.d_min(),
    resolution_factor = 0.25,
    space_group_info  = mc_polder.space_group_info())
  map_polder   = get_map(cg=cg, mc=mc_polder)
  map_bias_omit = get_map(cg=cg, mc=mc_bias_omit)
  map_omit     = get_map(cg=cg, mc=mc_omit)

  sel = pdb_hierarchy.atom_selection_cache().selection(string = "resname PHE and resseq 1")
  sites_cart_lig = pdb_hierarchy.atoms().extract_xyz().select(sel)
  sites_frac_lig = mc_polder.unit_cell().fractionalize(sites_cart_lig)
  mp  = get_map_stats(map=map_polder,   sites_frac=sites_frac_lig)
  mlo = get_map_stats(map=map_bias_omit, sites_frac=sites_frac_lig)
  mo  = get_map_stats(map=map_omit,     sites_frac=sites_frac_lig)
  #
  mmm_mp = mp.min_max_mean().as_tuple()
  mmm_o = mo.min_max_mean().as_tuple()
  #print("Polder map : %7.3f %7.3f %7.3f"%mmm_mp)
  #print("Biased map : %7.3f %7.3f %7.3f"%mlo.min_max_mean().as_tuple())
  #print("Omit       : %7.3f %7.3f %7.3f"%mmm_o)
  #
  return(mmm_mp, mmm_o)

# ---------------------------------------------------------------------------

pdb_str = """\
CRYST1   28.992   28.409   27.440  90.00  90.00  90.00 P 1
ATOM      1  N   ALA E   1       9.731  23.364   9.222  1.00 20.00           N
ATOM      2  CA  ALA E   1      10.928  22.678   9.693  1.00 20.00           C
ATOM      3  C   ALA E   1      10.619  21.229  10.055  1.00 20.00           C
ATOM      4  O   ALA E   1      11.301  20.629  10.886  1.00 20.00           O
ATOM      5  CB  ALA E   1      11.522  23.409  10.887  1.00 20.00           C
ATOM      6  N   HIS E   2       9.586  20.672   9.419  1.00 20.00           N
ATOM      7  CA  HIS E   2       9.202  19.291   9.695  1.00 20.00           C
ATOM      8  C   HIS E   2      10.295  18.321   9.264  1.00 20.00           C
ATOM      9  O   HIS E   2      10.653  17.402  10.010  1.00 20.00           O
ATOM     10  CB  HIS E   2       7.882  18.965   8.997  1.00 20.00           C
ATOM     11  CG  HIS E   2       6.738  19.828   9.431  1.00 20.00           C
ATOM     12  ND1 HIS E   2       5.915  19.498  10.485  1.00 20.00           N
ATOM     13  CD2 HIS E   2       6.282  21.010   8.953  1.00 20.00           C
ATOM     14  CE1 HIS E   2       5.000  20.438  10.638  1.00 20.00           C
ATOM     15  NE2 HIS E   2       5.200  21.367   9.721  1.00 20.00           N
ATOM     16  N   CYS E   3      10.837  18.510   8.058  1.00 20.00           N
ATOM     17  CA  CYS E   3      11.937  17.667   7.605  1.00 20.00           C
ATOM     18  C   CYS E   3      13.176  17.854   8.470  1.00 20.00           C
ATOM     19  O   CYS E   3      13.943  16.905   8.669  1.00 20.00           O
ATOM     20  CB  CYS E   3      12.260  17.966   6.141  1.00 20.00           C
ATOM     21  SG  CYS E   3      10.887  17.680   5.000  1.00 20.00           S
ATOM     22  N   ALA E   4      13.386  19.064   8.995  1.00 20.00           N
ATOM     23  CA  ALA E   4      14.520  19.295   9.885  1.00 20.00           C
ATOM     24  C   ALA E   4      14.353  18.539  11.196  1.00 20.00           C
ATOM     25  O   ALA E   4      15.308  17.933  11.696  1.00 20.00           O
ATOM     26  CB  ALA E   4      14.689  20.792  10.142  1.00 20.00           C
ATOM     27  N   ILE E   5      13.146  18.559  11.766  1.00 20.00           N
ATOM     28  CA  ILE E   5      12.893  17.811  12.993  1.00 20.00           C
ATOM     29  C   ILE E   5      13.003  16.313  12.735  1.00 20.00           C
ATOM     30  O   ILE E   5      13.481  15.555  13.588  1.00 20.00           O
ATOM     31  CB  ILE E   5      11.519  18.193  13.576  1.00 20.00           C
ATOM     32  CG1 ILE E   5      11.493  19.677  13.949  1.00 20.00           C
ATOM     33  CG2 ILE E   5      11.187  17.338  14.789  1.00 20.00           C
ATOM     34  CD1 ILE E   5      10.171  20.139  14.522  1.00 20.00           C
ATOM     35  N   TYR E   6      12.577  15.864  11.552  1.00 20.00           N
ATOM     36  CA  TYR E   6      12.688  14.447  11.218  1.00 20.00           C
ATOM     37  C   TYR E   6      14.146  14.025  11.072  1.00 20.00           C
ATOM     38  O   TYR E   6      14.524  12.925  11.492  1.00 20.00           O
ATOM     39  CB  TYR E   6      11.910  14.145   9.937  1.00 20.00           C
ATOM     40  CG  TYR E   6      10.412  14.302  10.074  1.00 20.00           C
ATOM     41  CD1 TYR E   6       9.796  14.221  11.316  1.00 20.00           C
ATOM     42  CD2 TYR E   6       9.614  14.530   8.961  1.00 20.00           C
ATOM     43  CE1 TYR E   6       8.427  14.363  11.446  1.00 20.00           C
ATOM     44  CE2 TYR E   6       8.244  14.674   9.080  1.00 20.00           C
ATOM     45  CZ  TYR E   6       7.656  14.589  10.325  1.00 20.00           C
ATOM     46  OH  TYR E   6       6.293  14.731  10.449  1.00 20.00           O
ATOM     47  N   THR E   7      14.979  14.884  10.479  1.00 20.00           N
ATOM     48  CA  THR E   7      16.391  14.547  10.326  1.00 20.00           C
ATOM     49  C   THR E   7      17.120  14.587  11.664  1.00 20.00           C
ATOM     50  O   THR E   7      17.960  13.724  11.944  1.00 20.00           O
ATOM     51  CB  THR E   7      17.058  15.492   9.326  1.00 20.00           C
ATOM     52  OG1 THR E   7      16.757  16.850   9.672  1.00 20.00           O
ATOM     53  CG2 THR E   7      16.571  15.207   7.912  1.00 20.00           C
ATOM     54  N   ILE E   8      16.814  15.580  12.502  1.00 20.00           N
ATOM     55  CA  ILE E   8      17.450  15.665  13.815  1.00 20.00           C
ATOM     56  C   ILE E   8      17.050  14.475  14.679  1.00 20.00           C
ATOM     57  O   ILE E   8      17.893  13.855  15.340  1.00 20.00           O
ATOM     58  CB  ILE E   8      17.103  17.004  14.492  1.00 20.00           C
ATOM     59  CG1 ILE E   8      17.763  18.165  13.745  1.00 20.00           C
ATOM     60  CG2 ILE E   8      17.530  16.996  15.951  1.00 20.00           C
ATOM     61  CD1 ILE E   8      17.464  19.524  14.342  1.00 20.00           C
ATOM     62  N   HIS E   9      15.760  14.128  14.678  1.00 20.00           N
ATOM     63  CA  HIS E   9      15.302  12.994  15.472  1.00 20.00           C
ATOM     64  C   HIS E   9      15.787  11.669  14.897  1.00 20.00           C
ATOM     65  O   HIS E   9      15.926  10.689  15.637  1.00 20.00           O
ATOM     66  CB  HIS E   9      13.776  13.002  15.572  1.00 20.00           C
ATOM     67  CG  HIS E   9      13.232  14.116  16.411  1.00 20.00           C
ATOM     68  ND1 HIS E   9      14.038  15.058  17.012  1.00 20.00           N
ATOM     69  CD2 HIS E   9      11.961  14.436  16.753  1.00 20.00           C
ATOM     70  CE1 HIS E   9      13.288  15.912  17.685  1.00 20.00           C
ATOM     71  NE2 HIS E   9      12.024  15.557  17.545  1.00 20.00           N
ATOM     72  N   SER E  10      16.046  11.615  13.589  1.00 20.00           N
ATOM     73  CA  SER E  10      16.560  10.388  12.991  1.00 20.00           C
ATOM     74  C   SER E  10      18.038  10.191  13.305  1.00 20.00           C
ATOM     75  O   SER E  10      18.458   9.080  13.651  1.00 20.00           O
ATOM     76  CB  SER E  10      16.334  10.403  11.479  1.00 20.00           C
ATOM     77  OG  SER E  10      17.100  11.420  10.858  1.00 20.00           O
ATOM     78  N   VAL E  11      18.839  11.252  13.191  1.00 20.00           N
ATOM     79  CA  VAL E  11      20.262  11.143  13.498  1.00 20.00           C
ATOM     80  C   VAL E  11      20.471  10.920  14.991  1.00 20.00           C
ATOM     81  O   VAL E  11      21.273  10.071  15.398  1.00 20.00           O
ATOM     82  CB  VAL E  11      21.014  12.389  12.998  1.00 20.00           C
ATOM     83  CG1 VAL E  11      22.469  12.345  13.440  1.00 20.00           C
ATOM     84  CG2 VAL E  11      20.920  12.491  11.483  1.00 20.00           C
ATOM     85  N   ASP E  12      19.755  11.672  15.830  1.00 20.00           N
ATOM     86  CA  ASP E  12      19.881  11.484  17.272  1.00 20.00           C
ATOM     87  C   ASP E  12      19.303  10.148  17.719  1.00 20.00           C
ATOM     88  O   ASP E  12      19.822   9.534  18.658  1.00 20.00           O
ATOM     89  CB  ASP E  12      19.200  12.633  18.016  1.00 20.00           C
ATOM     90  CG  ASP E  12      19.888  13.964  17.788  1.00 20.00           C
ATOM     91  OD1 ASP E  12      21.099  13.964  17.481  1.00 20.00           O
ATOM     92  OD2 ASP E  12      19.220  15.010  17.921  1.00 20.00           O
ATOM     93  N   ALA E  13      18.236   9.683  17.066  1.00 20.00           N
ATOM     94  CA  ALA E  13      17.640   8.405  17.442  1.00 20.00           C
ATOM     95  C   ALA E  13      18.531   7.237  17.035  1.00 20.00           C
ATOM     96  O   ALA E  13      18.671   6.266  17.787  1.00 20.00           O
ATOM     97  CB  ALA E  13      16.253   8.268  16.816  1.00 20.00           C
ATOM     98  N   PHE E  14      19.140   7.312  15.850  1.00 20.00           N
ATOM     99  CA  PHE E  14      20.024   6.243  15.402  1.00 20.00           C
ATOM    100  C   PHE E  14      21.374   6.283  16.108  1.00 20.00           C
ATOM    101  O   PHE E  14      22.022   5.241  16.254  1.00 20.00           O
ATOM    102  CB  PHE E  14      20.223   6.320  13.887  1.00 20.00           C
ATOM    103  CG  PHE E  14      18.980   6.023  13.096  1.00 20.00           C
ATOM    104  CD1 PHE E  14      17.953   5.275  13.646  1.00 20.00           C
ATOM    105  CD2 PHE E  14      18.841   6.492  11.800  1.00 20.00           C
ATOM    106  CE1 PHE E  14      16.809   5.000  12.919  1.00 20.00           C
ATOM    107  CE2 PHE E  14      17.700   6.221  11.068  1.00 20.00           C
ATOM    108  CZ  PHE E  14      16.683   5.474  11.629  1.00 20.00           C
ATOM    109  N   ALA E  15      21.810   7.463  16.548  1.00 20.00           N
ATOM    110  CA  ALA E  15      23.084   7.598  17.240  1.00 20.00           C
ATOM    111  C   ALA E  15      22.974   7.379  18.742  1.00 20.00           C
ATOM    112  O   ALA E  15      23.992   7.108  19.390  1.00 20.00           O
ATOM    113  CB  ALA E  15      23.689   8.980  16.973  1.00 20.00           C
ATOM    114  N   GLU E  16      21.776   7.489  19.307  1.00 20.00           N
ATOM    115  CA  GLU E  16      21.584   7.294  20.739  1.00 20.00           C
ATOM    116  C   GLU E  16      20.666   6.107  21.011  1.00 20.00           C
ATOM    117  O   GLU E  16      20.973   5.248  21.838  1.00 20.00           O
ATOM    118  CB  GLU E  16      21.012   8.559  21.382  1.00 20.00           C
ATOM    119  CG  GLU E  16      21.901   9.784  21.238  1.00 20.00           C
ATOM    120  CD  GLU E  16      21.296  11.020  21.875  1.00 20.00           C
ATOM    121  OE1 GLU E  16      20.188  10.917  22.440  1.00 20.00           O
ATOM    122  OE2 GLU E  16      21.930  12.095  21.809  1.00 20.00           O
TER
ATOM     98  N   PHE A   1       9.174   9.310  14.969  0.20 20.00           N
ATOM     99  CA  PHE A   1      10.235   8.421  14.508  0.20 20.00           C
ATOM    100  C   PHE A   1      11.171   8.048  15.652  0.20 20.00           C
ATOM    101  O   PHE A   1      12.391   8.032  15.489  0.20 20.00           O
ATOM    102  CB  PHE A   1      11.025   9.073  13.371  0.20 20.00           C
ATOM    103  CG  PHE A   1      10.196   9.391  12.160  0.20 20.00           C
ATOM    104  CD1 PHE A   1      10.002   8.444  11.168  0.20 20.00           C
ATOM    105  CD2 PHE A   1       9.611  10.638  12.012  0.20 20.00           C
ATOM    106  CE1 PHE A   1       9.240   8.734  10.052  0.20 20.00           C
ATOM    107  CE2 PHE A   1       8.847  10.934  10.898  0.20 20.00           C
ATOM    108  CZ  PHE A   1       8.662   9.980   9.917  0.20 20.00           C
TER
END
"""

# ---------------------------------------------------------------------------

if (__name__ == "__main__"):
  t0 = time.time()
  for as_cif in (False, True):  # XXX as_cif is one way so True must be last
    if as_cif:
      print("CONVERTING PDB STRINGS TO CIF AND CHANGING "+
         "CHAIN ID/HETATM RESIDUE NAMES")
      # Convert to mmcif and make long chain ID and HETATM resname:
      from libtbx.test_utils import convert_pdb_to_cif_for_pdb_str
      convert_pdb_to_cif_for_pdb_str(locals(), print_new_string=False)
    else:
      print("USING PDB STRINGS AS IS")
    exercise_00()
  print("OK. Time: %8.3f"%(time.time()-t0))


 *******************************************************************************


 *******************************************************************************
mmtbx/regression/tst_polder_1.py
from __future__ import absolute_import, division, print_function
import time, os
from libtbx.test_utils import approx_equal
from iotbx.data_manager import DataManager
from iotbx.cli_parser import run_program
import iotbx.pdb
from mmtbx.programs import polder
from iotbx import reflection_file_reader
from cctbx import maptbx
from scitbx.array_family import flex
from six.moves import range
from libtbx.utils import null_out
from mmtbx.regression.tst_polder import get_map, get_map_stats


def generate_r_free_flags_systematic(miller_array):
  result = flex.bool()
  for i in range(miller_array.indices().size()):
    if(i%10==0): result.append(True)
    else: result.append(False)
  return miller_array.array(data = result)

# ---------------------------------------------------------------------------

def exercise_01(fobs_1, fobs_2, flags_1, flags_2):
  '''
  Test reading one mtz with different choices for F and Rfree
  '''
  mtz = fobs_1.as_mtz_dataset(column_root_label="FP1")
  mtz.add_miller_array(fobs_2, column_root_label="FP2")
  mtz.add_miller_array(flags_1, column_root_label="R-free-flags-1")
  mtz.add_miller_array(flags_2, column_root_label="R-free-flags-2")
  mtz.mtz_object().write("tst_polder_1_1.mtz")
  #
  selection = "chain A"

  args = [
    "tst_polder_1.pdb",
    "tst_polder_1_1.mtz",
    "sphere_radius=3",
    'solvent_exclusion_mask_selection="%s"' % selection,
    "user_selected_labels=FP1",
    "user_selected_labels=R-free-flags-1",
    "output_file_name_prefix=tst_polder_1_1"]

  r = run_program(program_class=polder.Program, args=args, logger=null_out())

  check(
    tuple_calc=[10.6, 16.0, 13.5],
    selection=selection,
    filename = r.output_file)

  os.remove("tst_polder_1_1.mtz")
  os.remove(r.output_file)

# ---------------------------------------------------------------------------

def exercise_02(fobs_1, flags_1):
  '''
  Test reading two cns files: one with Fobs, one with Rfree;
  without specifying labels --> test automatic machinery
  '''
  with open("tst_polder_1_2.cns", "w") as file_object:
    fobs_1.export_as_cns_hkl(
      file_object=file_object,
      file_name="tst_polder_1_2.cns",
      info=["calculated structure factors FP1"])
  #
  with open("tst_polder_1_2_free.cns", "w") as file_object:
    flags_1.export_as_cns_hkl(
      file_object=file_object,
      file_name="tst_polder_1_2_free.cns",
      info=["R-free-flags for FP1"])
  #
  selection = "chain E and resseq 14"
  args = [
    "tst_polder_1.pdb",
    "tst_polder_1_2.cns",
    "tst_polder_1_2_free.cns",
    "sphere_radius=5",
    'solvent_exclusion_mask_selection="%s"' % selection,
    "output_file_name_prefix=tst_polder_1_2"]

  r = run_program(program_class=polder.Program, args=args, logger=null_out())

  check(
    tuple_calc=[10.7, 15.1, 13.4],
    selection=selection,
    filename = r.output_file)

  os.remove("tst_polder_1_2.cns")
  os.remove("tst_polder_1_2_free.cns")
  os.remove(r.output_file)

# ---------------------------------------------------------------------------

def exercise_03(fobs_2, flags_2):
  '''
  Test reading model as cif, Fobs from mtz and Rfree from cns file
  '''
  mtz = fobs_2.as_mtz_dataset(column_root_label="FP1")
  mtz.mtz_object().write("tst_polder_1_3.mtz")
  with open("tst_polder_1_3.cns", "w") as file_object:
    flags_2.export_as_cns_hkl(
      file_object=file_object,
      file_name="tst_polder_1_3.cns",
      info=["R-free-flags for FP1"])
  #
  selection = "chain E and resseq 7"
  args = [
    "tst_polder_1.cif",
    "tst_polder_1_3.mtz",
    "tst_polder_1_3.cns",
    "sphere_radius=5",
    'solvent_exclusion_mask_selection="%s"' % selection,
    "output_file_name_prefix=tst_polder_1_3"]

  r = run_program(program_class=polder.Program, args=args, logger=null_out())

  check(
    tuple_calc=[13.7, 20.3, 18.4],
    selection=selection,
    filename = r.output_file)

  # Clean up files
  os.remove('tst_polder_1_3.mtz')
  os.remove('tst_polder_1_3.cns')
  os.remove(r.output_file)

# ---------------------------------------------------------------------------

def exercise():
  """
  Test for phenix.polder: Reading files.
  """
  dm = DataManager(['model'])
  dm.process_model_str("tst_polder_1.pdb", pdb_str)
  model = dm.get_model()
  dm.write_model_file(model.model_as_pdb(),
                      filename  = "tst_polder_1.pdb",
                      overwrite = True)
  dm.write_model_file(model.model_as_mmcif(),
                      filename  = "tst_polder_1.cif",
                      overwrite = True)
  xrs = model.get_xray_structure()

  fobs_1 = abs(xrs.structure_factors(d_min=3.0).f_calc())
  fobs_2 = abs(xrs.structure_factors(d_min=2.5).f_calc())
  flags_1 = generate_r_free_flags_systematic(miller_array=fobs_1)
  flags_2 = generate_r_free_flags_systematic(miller_array=fobs_2)

  exercise_01(fobs_1, fobs_2, flags_1, flags_2)
  exercise_02(fobs_1, flags_1)
  exercise_03(fobs_2, flags_2)

  # Clean up files
  os.remove('tst_polder_1.pdb')
  os.remove('tst_polder_1.cif')

# ---------------------------------------------------------------------------

def check(tuple_calc, selection, filename):
  miller_arrays = reflection_file_reader.any_reflection_file(file_name =
    filename).as_miller_arrays()
  mc_polder = None
  for ma in miller_arrays:
    lbl = ma.info().label_string()
    if(lbl == "mFo-DFc_polder,PHImFo-DFc_polder"):
      mc_polder = ma.deep_copy()
  assert (mc_polder is not None)
  cg = maptbx.crystal_gridding(
    unit_cell         = mc_polder.unit_cell(),
    d_min             = mc_polder.d_min(),
    resolution_factor = 0.25,
    space_group_info  = mc_polder.space_group_info())
  map_polder   = get_map(cg=cg, mc=mc_polder)
  pdb_hierarchy = iotbx.pdb.input(
    source_info=None, lines=pdb_str).construct_hierarchy()
  sel = pdb_hierarchy.atom_selection_cache().selection(string = selection)
  sites_cart_lig = pdb_hierarchy.atoms().extract_xyz().select(sel)
  sites_frac_lig = mc_polder.unit_cell().fractionalize(sites_cart_lig)
  mp  = get_map_stats(map=map_polder,   sites_frac=sites_frac_lig)
  #
  mmm_mp = mp.min_max_mean().as_tuple()
  #print("Polder map : %7.3f %7.3f %7.3f" % mmm_mp)
  assert approx_equal(mmm_mp, tuple_calc, eps=1.0), "\
   calculated is %s and expected is %s" % (mmm_mp, tuple_calc)

# ---------------------------------------------------------------------------

pdb_str = """
CRYST1   28.992   28.409   27.440  90.00  90.00  90.00 P 1
ATOM      1  N   ALA E   1       9.731  23.364   9.222  1.00 20.00           N
ATOM      2  CA  ALA E   1      10.928  22.678   9.693  1.00 20.00           C
ATOM      3  C   ALA E   1      10.619  21.229  10.055  1.00 20.00           C
ATOM      4  O   ALA E   1      11.301  20.629  10.886  1.00 20.00           O
ATOM      5  CB  ALA E   1      11.522  23.409  10.887  1.00 20.00           C
ATOM      6  N   HIS E   2       9.586  20.672   9.419  1.00 20.00           N
ATOM      7  CA  HIS E   2       9.202  19.291   9.695  1.00 20.00           C
ATOM      8  C   HIS E   2      10.295  18.321   9.264  1.00 20.00           C
ATOM      9  O   HIS E   2      10.653  17.402  10.010  1.00 20.00           O
ATOM     10  CB  HIS E   2       7.882  18.965   8.997  1.00 20.00           C
ATOM     11  CG  HIS E   2       6.738  19.828   9.431  1.00 20.00           C
ATOM     12  ND1 HIS E   2       5.915  19.498  10.485  1.00 20.00           N
ATOM     13  CD2 HIS E   2       6.282  21.010   8.953  1.00 20.00           C
ATOM     14  CE1 HIS E   2       5.000  20.438  10.638  1.00 20.00           C
ATOM     15  NE2 HIS E   2       5.200  21.367   9.721  1.00 20.00           N
ATOM     16  N   CYS E   3      10.837  18.510   8.058  1.00 20.00           N
ATOM     17  CA  CYS E   3      11.937  17.667   7.605  1.00 20.00           C
ATOM     18  C   CYS E   3      13.176  17.854   8.470  1.00 20.00           C
ATOM     19  O   CYS E   3      13.943  16.905   8.669  1.00 20.00           O
ATOM     20  CB  CYS E   3      12.260  17.966   6.141  1.00 20.00           C
ATOM     21  SG  CYS E   3      10.887  17.680   5.000  1.00 20.00           S
ATOM     22  N   ALA E   4      13.386  19.064   8.995  1.00 20.00           N
ATOM     23  CA  ALA E   4      14.520  19.295   9.885  1.00 20.00           C
ATOM     24  C   ALA E   4      14.353  18.539  11.196  1.00 20.00           C
ATOM     25  O   ALA E   4      15.308  17.933  11.696  1.00 20.00           O
ATOM     26  CB  ALA E   4      14.689  20.792  10.142  1.00 20.00           C
ATOM     27  N   ILE E   5      13.146  18.559  11.766  1.00 20.00           N
ATOM     28  CA  ILE E   5      12.893  17.811  12.993  1.00 20.00           C
ATOM     29  C   ILE E   5      13.003  16.313  12.735  1.00 20.00           C
ATOM     30  O   ILE E   5      13.481  15.555  13.588  1.00 20.00           O
ATOM     31  CB  ILE E   5      11.519  18.193  13.576  1.00 20.00           C
ATOM     32  CG1 ILE E   5      11.493  19.677  13.949  1.00 20.00           C
ATOM     33  CG2 ILE E   5      11.187  17.338  14.789  1.00 20.00           C
ATOM     34  CD1 ILE E   5      10.171  20.139  14.522  1.00 20.00           C
ATOM     35  N   TYR E   6      12.577  15.864  11.552  1.00 20.00           N
ATOM     36  CA  TYR E   6      12.688  14.447  11.218  1.00 20.00           C
ATOM     37  C   TYR E   6      14.146  14.025  11.072  1.00 20.00           C
ATOM     38  O   TYR E   6      14.524  12.925  11.492  1.00 20.00           O
ATOM     39  CB  TYR E   6      11.910  14.145   9.937  1.00 20.00           C
ATOM     40  CG  TYR E   6      10.412  14.302  10.074  1.00 20.00           C
ATOM     41  CD1 TYR E   6       9.796  14.221  11.316  1.00 20.00           C
ATOM     42  CD2 TYR E   6       9.614  14.530   8.961  1.00 20.00           C
ATOM     43  CE1 TYR E   6       8.427  14.363  11.446  1.00 20.00           C
ATOM     44  CE2 TYR E   6       8.244  14.674   9.080  1.00 20.00           C
ATOM     45  CZ  TYR E   6       7.656  14.589  10.325  1.00 20.00           C
ATOM     46  OH  TYR E   6       6.293  14.731  10.449  1.00 20.00           O
ATOM     47  N   THR E   7      14.979  14.884  10.479  0.20 20.00           N
ATOM     48  CA  THR E   7      16.391  14.547  10.326  0.20 20.00           C
ATOM     49  C   THR E   7      17.120  14.587  11.664  0.20 20.00           C
ATOM     50  O   THR E   7      17.960  13.724  11.944  0.20 20.00           O
ATOM     51  CB  THR E   7      17.058  15.492   9.326  0.20 20.00           C
ATOM     52  OG1 THR E   7      16.757  16.850   9.672  0.20 20.00           O
ATOM     53  CG2 THR E   7      16.571  15.207   7.912  0.20 20.00           C
ATOM     54  N   ILE E   8      16.814  15.580  12.502  1.00 20.00           N
ATOM     55  CA  ILE E   8      17.450  15.665  13.815  1.00 20.00           C
ATOM     56  C   ILE E   8      17.050  14.475  14.679  1.00 20.00           C
ATOM     57  O   ILE E   8      17.893  13.855  15.340  1.00 20.00           O
ATOM     58  CB  ILE E   8      17.103  17.004  14.492  1.00 20.00           C
ATOM     59  CG1 ILE E   8      17.763  18.165  13.745  1.00 20.00           C
ATOM     60  CG2 ILE E   8      17.530  16.996  15.951  1.00 20.00           C
ATOM     61  CD1 ILE E   8      17.464  19.524  14.342  1.00 20.00           C
ATOM     62  N   HIS E   9      15.760  14.128  14.678  1.00 20.00           N
ATOM     63  CA  HIS E   9      15.302  12.994  15.472  1.00 20.00           C
ATOM     64  C   HIS E   9      15.787  11.669  14.897  1.00 20.00           C
ATOM     65  O   HIS E   9      15.926  10.689  15.637  1.00 20.00           O
ATOM     66  CB  HIS E   9      13.776  13.002  15.572  1.00 20.00           C
ATOM     67  CG  HIS E   9      13.232  14.116  16.411  1.00 20.00           C
ATOM     68  ND1 HIS E   9      14.038  15.058  17.012  1.00 20.00           N
ATOM     69  CD2 HIS E   9      11.961  14.436  16.753  1.00 20.00           C
ATOM     70  CE1 HIS E   9      13.288  15.912  17.685  1.00 20.00           C
ATOM     71  NE2 HIS E   9      12.024  15.557  17.545  1.00 20.00           N
ATOM     72  N   SER E  10      16.046  11.615  13.589  1.00 20.00           N
ATOM     73  CA  SER E  10      16.560  10.388  12.991  1.00 20.00           C
ATOM     74  C   SER E  10      18.038  10.191  13.305  1.00 20.00           C
ATOM     75  O   SER E  10      18.458   9.080  13.651  1.00 20.00           O
ATOM     76  CB  SER E  10      16.334  10.403  11.479  1.00 20.00           C
ATOM     77  OG  SER E  10      17.100  11.420  10.858  1.00 20.00           O
ATOM     78  N   VAL E  11      18.839  11.252  13.191  1.00 20.00           N
ATOM     79  CA  VAL E  11      20.262  11.143  13.498  1.00 20.00           C
ATOM     80  C   VAL E  11      20.471  10.920  14.991  1.00 20.00           C
ATOM     81  O   VAL E  11      21.273  10.071  15.398  1.00 20.00           O
ATOM     82  CB  VAL E  11      21.014  12.389  12.998  1.00 20.00           C
ATOM     83  CG1 VAL E  11      22.469  12.345  13.440  1.00 20.00           C
ATOM     84  CG2 VAL E  11      20.920  12.491  11.483  1.00 20.00           C
ATOM     85  N   ASP E  12      19.755  11.672  15.830  1.00 20.00           N
ATOM     86  CA  ASP E  12      19.881  11.484  17.272  1.00 20.00           C
ATOM     87  C   ASP E  12      19.303  10.148  17.719  1.00 20.00           C
ATOM     88  O   ASP E  12      19.822   9.534  18.658  1.00 20.00           O
ATOM     89  CB  ASP E  12      19.200  12.633  18.016  1.00 20.00           C
ATOM     90  CG  ASP E  12      19.888  13.964  17.788  1.00 20.00           C
ATOM     91  OD1 ASP E  12      21.099  13.964  17.481  1.00 20.00           O
ATOM     92  OD2 ASP E  12      19.220  15.010  17.921  1.00 20.00           O
ATOM     93  N   ALA E  13      18.236   9.683  17.066  1.00 20.00           N
ATOM     94  CA  ALA E  13      17.640   8.405  17.442  1.00 20.00           C
ATOM     95  C   ALA E  13      18.531   7.237  17.035  1.00 20.00           C
ATOM     96  O   ALA E  13      18.671   6.266  17.787  1.00 20.00           O
ATOM     97  CB  ALA E  13      16.253   8.268  16.816  1.00 20.00           C
ATOM     98  N   PHE E  14      19.140   7.312  15.850  0.20 20.00           N
ATOM     99  CA  PHE E  14      20.024   6.243  15.402  0.20 20.00           C
ATOM    100  C   PHE E  14      21.374   6.283  16.108  0.20 20.00           C
ATOM    101  O   PHE E  14      22.022   5.241  16.254  0.20 20.00           O
ATOM    102  CB  PHE E  14      20.223   6.320  13.887  0.20 20.00           C
ATOM    103  CG  PHE E  14      18.980   6.023  13.096  0.20 20.00           C
ATOM    104  CD1 PHE E  14      17.953   5.275  13.646  0.20 20.00           C
ATOM    105  CD2 PHE E  14      18.841   6.492  11.800  0.20 20.00           C
ATOM    106  CE1 PHE E  14      16.809   5.000  12.919  0.20 20.00           C
ATOM    107  CE2 PHE E  14      17.700   6.221  11.068  0.20 20.00           C
ATOM    108  CZ  PHE E  14      16.683   5.474  11.629  0.20 20.00           C
ATOM    109  N   ALA E  15      21.810   7.463  16.548  1.00 20.00           N
ATOM    110  CA  ALA E  15      23.084   7.598  17.240  1.00 20.00           C
ATOM    111  C   ALA E  15      22.974   7.379  18.742  1.00 20.00           C
ATOM    112  O   ALA E  15      23.992   7.108  19.390  1.00 20.00           O
ATOM    113  CB  ALA E  15      23.689   8.980  16.973  1.00 20.00           C
ATOM    114  N   GLU E  16      21.776   7.489  19.307  1.00 20.00           N
ATOM    115  CA  GLU E  16      21.584   7.294  20.739  1.00 20.00           C
ATOM    116  C   GLU E  16      20.666   6.107  21.011  1.00 20.00           C
ATOM    117  O   GLU E  16      20.973   5.248  21.838  1.00 20.00           O
ATOM    118  CB  GLU E  16      21.012   8.559  21.382  1.00 20.00           C
ATOM    119  CG  GLU E  16      21.901   9.784  21.238  1.00 20.00           C
ATOM    120  CD  GLU E  16      21.296  11.020  21.875  1.00 20.00           C
ATOM    121  OE1 GLU E  16      20.188  10.917  22.440  1.00 20.00           O
ATOM    122  OE2 GLU E  16      21.930  12.095  21.809  1.00 20.00           O
TER
ATOM     98  N   PHE A   1       9.174   9.310  14.969  0.20 20.00           N
ATOM     99  CA  PHE A   1      10.235   8.421  14.508  0.20 20.00           C
ATOM    100  C   PHE A   1      11.171   8.048  15.652  0.20 20.00           C
ATOM    101  O   PHE A   1      12.391   8.032  15.489  0.20 20.00           O
ATOM    102  CB  PHE A   1      11.025   9.073  13.371  0.20 20.00           C
ATOM    103  CG  PHE A   1      10.196   9.391  12.160  0.20 20.00           C
ATOM    104  CD1 PHE A   1      10.002   8.444  11.168  0.20 20.00           C
ATOM    105  CD2 PHE A   1       9.611  10.638  12.012  0.20 20.00           C
ATOM    106  CE1 PHE A   1       9.240   8.734  10.052  0.20 20.00           C
ATOM    107  CE2 PHE A   1       8.847  10.934  10.898  0.20 20.00           C
ATOM    108  CZ  PHE A   1       8.662   9.980   9.917  0.20 20.00           C
TER
END
"""

# ---------------------------------------------------------------------------

if (__name__ == "__main__"):
  t0 = time.time()
  exercise()
  print("OK. Time: %8.3f"%(time.time()-t0))


 *******************************************************************************


 *******************************************************************************
mmtbx/regression/tst_polder_2.py
from __future__ import absolute_import, division, print_function
import time, os
from iotbx.data_manager import DataManager
from iotbx.cli_parser import run_program
from mmtbx.programs import polder
import iotbx.pdb
from libtbx.utils import null_out
from scitbx.array_family import flex
from mmtbx.regression.tst_polder_1 import check, generate_r_free_flags_systematic



def format_map_stat(m):
  return m.min_max_mean().as_tuple(), (m>flex.mean(m)).count(True)

# ---------------------------------------------------------------------------

def exercise_01(fobs_1, flags_1):
  '''
  Test reading mtz with anomalous arrays for F and Rfree
  '''
  mtz = fobs_1.as_mtz_dataset(column_root_label="FP1")
  mtz.add_miller_array(flags_1, column_root_label="R-free-flags")
  mtz.mtz_object().write("tst_polder_2_1.mtz")
  #
  selection = "chain A"
  args = [
    "tst_polder_2.pdb",
    "tst_polder_2_1.mtz",
    "sphere_radius=3",
    'solvent_exclusion_mask_selection="%s"' % selection,
    "output_file_name_prefix=tst_polder_2_1"]

  r = run_program(program_class=polder.Program, args=args, logger=null_out())

  check(
    tuple_calc = [10.927, 15.138, 12.849],
    selection  = selection,
    filename = r.output_file)

  os.remove("tst_polder_2_1.mtz")
  os.remove(r.output_file)

# ---------------------------------------------------------------------------

def exercise_02(fobs_1):
  '''
  Test reading one mtz with F as anomalous array (no Rfree present)
  '''
  mtz = fobs_1.as_mtz_dataset(column_root_label="FP1")
  mtz.mtz_object().write("tst_polder_2_2.mtz")
  #
  selection = "chain E and resseq 1"
  args = [
    "tst_polder_2.pdb",
    "tst_polder_2_2.mtz",
    "sphere_radius=3",
    'solvent_exclusion_mask_selection="%s"' % selection,
    "output_file_name_prefix=tst_polder_2_2"]

  r = run_program(program_class=polder.Program, args=args, logger=null_out())

  check(
    tuple_calc = [12.7, 22.7, 17.7],
    selection  = selection,
    filename = r.output_file)

  os.remove("tst_polder_2_2.mtz")
  os.remove(r.output_file)

# ---------------------------------------------------------------------------

def exercise_03(fobs_1, flags_1):
  '''
  Test reading mtz with F as anomalous array and Rfree is usual array
  '''
  mtz = fobs_1.as_mtz_dataset(column_root_label="FP1")
  mtz.add_miller_array(flags_1, column_root_label="R-free-flags")
  mtz.mtz_object().write("tst_polder_2_3.mtz")
  #
  selection = "chain A"
  args = [
    "tst_polder_2.pdb",
    "tst_polder_2_3.mtz",
    "sphere_radius=3",
    'solvent_exclusion_mask_selection="%s"' % selection,
    "output_file_name_prefix=tst_polder_2_3"]

  r = run_program(program_class=polder.Program, args=args, logger=null_out())

  # exact values: 11.129  16.152  13.006
  check(
    tuple_calc = [10.927,  15.138,  12.849],
    selection  = selection,
    filename = r.output_file)

  os.remove("tst_polder_2_3.mtz")
  os.remove(r.output_file)

# ---------------------------------------------------------------------------

def exercise():
  """
  Test for phenix.polder: accepting anomalous data labels.
  """
  dm = DataManager(['model'])
  dm.process_model_str("tst_polder_2.pdb", pdb_str)
  model = dm.get_model()
  dm.write_model_file(model.model_as_pdb(),
                      filename  = "tst_polder_2.pdb",
                      overwrite = True)
  xrs = model.get_xray_structure()

  f_anom = abs(xrs.structure_factors(d_min=3.0).f_calc().generate_bijvoet_mates())
  f_obs = abs(xrs.structure_factors(d_min=3.0).f_calc())
  flags_obs = generate_r_free_flags_systematic(miller_array=f_obs)
  flags_anom = flags_obs.generate_bijvoet_mates()
  #
  exercise_01(fobs_1 = f_anom, flags_1 = flags_anom)
  exercise_02(fobs_1 = f_anom)
  exercise_03(fobs_1 = f_anom, flags_1 = flags_obs)

  os.remove("tst_polder_2.pdb")

# ---------------------------------------------------------------------------

pdb_str = """\
CRYST1   28.992   28.409   27.440  90.00  90.00  90.00 P 1
ATOM      1  N   ALA E   1       9.731  23.364   9.222  0.20 20.00           N
ATOM      2  CA  ALA E   1      10.928  22.678   9.693  0.20 20.00           C
ATOM      3  C   ALA E   1      10.619  21.229  10.055  0.20 20.00           C
ATOM      4  O   ALA E   1      11.301  20.629  10.886  0.20 20.00           O
ATOM      5  CB  ALA E   1      11.522  23.409  10.887  0.20 20.00           C
ATOM      6  N   HIS E   2       9.586  20.672   9.419  1.00 20.00           N
ATOM      7  CA  HIS E   2       9.202  19.291   9.695  1.00 20.00           C
ATOM      8  C   HIS E   2      10.295  18.321   9.264  1.00 20.00           C
ATOM      9  O   HIS E   2      10.653  17.402  10.010  1.00 20.00           O
ATOM     10  CB  HIS E   2       7.882  18.965   8.997  1.00 20.00           C
ATOM     11  CG  HIS E   2       6.738  19.828   9.431  1.00 20.00           C
ATOM     12  ND1 HIS E   2       5.915  19.498  10.485  1.00 20.00           N
ATOM     13  CD2 HIS E   2       6.282  21.010   8.953  1.00 20.00           C
ATOM     14  CE1 HIS E   2       5.000  20.438  10.638  1.00 20.00           C
ATOM     15  NE2 HIS E   2       5.200  21.367   9.721  1.00 20.00           N
ATOM     16  N   CYS E   3      10.837  18.510   8.058  1.00 20.00           N
ATOM     17  CA  CYS E   3      11.937  17.667   7.605  1.00 20.00           C
ATOM     18  C   CYS E   3      13.176  17.854   8.470  1.00 20.00           C
ATOM     19  O   CYS E   3      13.943  16.905   8.669  1.00 20.00           O
ATOM     20  CB  CYS E   3      12.260  17.966   6.141  1.00 20.00           C
ATOM     21  SG  CYS E   3      10.887  17.680   5.000  1.00 20.00           S
ATOM     22  N   ALA E   4      13.386  19.064   8.995  1.00 20.00           N
ATOM     23  CA  ALA E   4      14.520  19.295   9.885  1.00 20.00           C
ATOM     24  C   ALA E   4      14.353  18.539  11.196  1.00 20.00           C
ATOM     25  O   ALA E   4      15.308  17.933  11.696  1.00 20.00           O
ATOM     26  CB  ALA E   4      14.689  20.792  10.142  1.00 20.00           C
TER
ATOM     98  N   PHE A   1       9.174   9.310  14.969  0.20 20.00           N
ATOM     99  CA  PHE A   1      10.235   8.421  14.508  0.20 20.00           C
ATOM    100  C   PHE A   1      11.171   8.048  15.652  0.20 20.00           C
ATOM    101  O   PHE A   1      12.391   8.032  15.489  0.20 20.00           O
ATOM    102  CB  PHE A   1      11.025   9.073  13.371  0.20 20.00           C
ATOM    103  CG  PHE A   1      10.196   9.391  12.160  0.20 20.00           C
ATOM    104  CD1 PHE A   1      10.002   8.444  11.168  0.20 20.00           C
ATOM    105  CD2 PHE A   1       9.611  10.638  12.012  0.20 20.00           C
ATOM    106  CE1 PHE A   1       9.240   8.734  10.052  0.20 20.00           C
ATOM    107  CE2 PHE A   1       8.847  10.934  10.898  0.20 20.00           C
ATOM    108  CZ  PHE A   1       8.662   9.980   9.917  0.20 20.00           C
TER
END
"""
# ---------------------------------------------------------------------------

if (__name__ == "__main__"):
  t0 = time.time()
  exercise()
  print("OK. Time: %8.3f"%(time.time()-t0))


 *******************************************************************************


 *******************************************************************************
mmtbx/regression/tst_polder_3.py
from __future__ import absolute_import, division, print_function
import time, os
from libtbx.test_utils import approx_equal
from iotbx import reflection_file_reader
from iotbx.cli_parser import run_program
from libtbx.utils import null_out
from iotbx.data_manager import DataManager
from mmtbx.programs import fmodel
import mmtbx.maps.polder
import iotbx.phil
from six.moves import range


def exercise(prefix="tst_polder_3"):
  """
  Test for phenix.polder sphere radius and box buffer.
  """

  # save test model as file
  model_fn = "tst_polder_3.pdb"
  dm = DataManager(['model'])
  dm.process_model_str(model_fn, pdb_str+pdb_str_ligand)
  model = dm.get_model()
  dm.write_model_file(model.model_as_pdb(),
                      filename  = "tst_polder_3.pdb",
                      overwrite = True)

  # create test data with phenix.fmodel
  mtz_fn = "tst_polder_3.mtz"
  args = [
    model_fn,
    "high_res=2.0",
    "type=real",
    "label=f-obs",
    "k_sol=0.4",
    "b_sol=50",
    "output.file_name=%s" % mtz_fn]
  run_program(program_class=fmodel.Program, args=args, logger=null_out())

  params_line = mmtbx.maps.polder.master_params_str
  params = iotbx.phil.parse(
      input_string=params_line, process_includes=True).extract()

  pdb_hierarchy = model.get_hierarchy()

  selection_string = 'chain A'

  miller_arrays = reflection_file_reader.any_reflection_file(file_name =
    "tst_polder_3.mtz").as_miller_arrays()
  fobs = [None]
  for ma in miller_arrays:
    if(ma.info().label_string() == "f-obs"):
      fobs = ma.deep_copy()

  mmm_list = []
  mask_mmm = [[0.0, 1.0, 0.9083055555555556],
              [0.0, 1.0, 0.8901388888888889],
              [0.0, 1.0, 0.9083055555555556],
              [0.0, 1.0, 0.8583379629629629],
              [0.0, 1.0, 0.9083055555555556],
              [0.0, 1.0, 0.8025601851851852] ]

  for radius in [3, 5, 7]:
    params.polder.sphere_radius = radius
    polder_object = mmtbx.maps.polder.compute_polder_map(
      f_obs            = fobs,
      r_free_flags     = None,
      model            = model,
      params           = params.polder,
      selection_string = selection_string)
    polder_object.validate()
    polder_object.run()
    results = polder_object.get_results()

    mmm_list.append(results.mask_data_omit.as_1d().min_max_mean().as_tuple())
    mmm_list.append(results.mask_data_polder.as_1d().min_max_mean().as_tuple())

  for i in range(6):
    assert approx_equal(mask_mmm[i], mmm_list[i], eps = 0.1)
    #print mask_mmm[i], mmm_list[i]

  mmm_list = []
  mask_mmm = [ [0.0, 1.0, 0.898712962962963],
               [0.0, 1.0, 0.8642268518518519],
               [0.0, 1.0, 0.898712962962963],
               [0.0, 1.0, 0.7957083333333334],
               [0.0, 1.0, 0.898712962962963],
               [0.0, 1.0, 0.6772777777777778] ]

  for box_buffer in [3, 5, 7]:
    params.polder.box_buffer = box_buffer
    params.polder.compute_box = True
    polder_object = mmtbx.maps.polder.compute_polder_map(
      f_obs               = fobs,
      r_free_flags        = None,
      model               = model,
      params              = params.polder,
      selection_string    = selection_string)
    polder_object.validate()
    polder_object.run()
    results = polder_object.get_results()

    mmm_list.append(results.mask_data_omit.as_1d().min_max_mean().as_tuple())
    mmm_list.append(results.mask_data_polder.as_1d().min_max_mean().as_tuple())

  for i in range(6):
    assert approx_equal(mask_mmm[i], mmm_list[i], eps = 0.1)
    #print mask_mmm[i], mmm_list[i]

  # Clean up files
  os.remove(model_fn)
  os.remove(mtz_fn)

# ---------------------------------------------------------------------------

pdb_str = """\
CRYST1   28.992   28.409   27.440  90.00  90.00  90.00 P 1
ATOM      1  N   ALA E   1       9.731  23.364   9.222  1.00 20.00           N
ATOM      2  CA  ALA E   1      10.928  22.678   9.693  1.00 20.00           C
ATOM      3  C   ALA E   1      10.619  21.229  10.055  1.00 20.00           C
ATOM      4  O   ALA E   1      11.301  20.629  10.886  1.00 20.00           O
ATOM      5  CB  ALA E   1      11.522  23.409  10.887  1.00 20.00           C
ATOM      6  N   HIS E   2       9.586  20.672   9.419  1.00 20.00           N
ATOM      7  CA  HIS E   2       9.202  19.291   9.695  1.00 20.00           C
ATOM      8  C   HIS E   2      10.295  18.321   9.264  1.00 20.00           C
ATOM      9  O   HIS E   2      10.653  17.402  10.010  1.00 20.00           O
ATOM     10  CB  HIS E   2       7.882  18.965   8.997  1.00 20.00           C
ATOM     11  CG  HIS E   2       6.738  19.828   9.431  1.00 20.00           C
ATOM     12  ND1 HIS E   2       5.915  19.498  10.485  1.00 20.00           N
ATOM     13  CD2 HIS E   2       6.282  21.010   8.953  1.00 20.00           C
ATOM     14  CE1 HIS E   2       5.000  20.438  10.638  1.00 20.00           C
ATOM     15  NE2 HIS E   2       5.200  21.367   9.721  1.00 20.00           N
ATOM     16  N   CYS E   3      10.837  18.510   8.058  1.00 20.00           N
ATOM     17  CA  CYS E   3      11.937  17.667   7.605  1.00 20.00           C
ATOM     18  C   CYS E   3      13.176  17.854   8.470  1.00 20.00           C
ATOM     19  O   CYS E   3      13.943  16.905   8.669  1.00 20.00           O
ATOM     20  CB  CYS E   3      12.260  17.966   6.141  1.00 20.00           C
ATOM     21  SG  CYS E   3      10.887  17.680   5.000  1.00 20.00           S
ATOM     22  N   ALA E   4      13.386  19.064   8.995  1.00 20.00           N
ATOM     23  CA  ALA E   4      14.520  19.295   9.885  1.00 20.00           C
ATOM     24  C   ALA E   4      14.353  18.539  11.196  1.00 20.00           C
ATOM     25  O   ALA E   4      15.308  17.933  11.696  1.00 20.00           O
ATOM     26  CB  ALA E   4      14.689  20.792  10.142  1.00 20.00           C
ATOM     27  N   ILE E   5      13.146  18.559  11.766  1.00 20.00           N
ATOM     28  CA  ILE E   5      12.893  17.811  12.993  1.00 20.00           C
ATOM     29  C   ILE E   5      13.003  16.313  12.735  1.00 20.00           C
ATOM     30  O   ILE E   5      13.481  15.555  13.588  1.00 20.00           O
ATOM     31  CB  ILE E   5      11.519  18.193  13.576  1.00 20.00           C
ATOM     32  CG1 ILE E   5      11.493  19.677  13.949  1.00 20.00           C
ATOM     33  CG2 ILE E   5      11.187  17.338  14.789  1.00 20.00           C
ATOM     34  CD1 ILE E   5      10.171  20.139  14.522  1.00 20.00           C
ATOM     35  N   TYR E   6      12.577  15.864  11.552  1.00 20.00           N
ATOM     36  CA  TYR E   6      12.688  14.447  11.218  1.00 20.00           C
ATOM     37  C   TYR E   6      14.146  14.025  11.072  1.00 20.00           C
ATOM     38  O   TYR E   6      14.524  12.925  11.492  1.00 20.00           O
ATOM     39  CB  TYR E   6      11.910  14.145   9.937  1.00 20.00           C
ATOM     40  CG  TYR E   6      10.412  14.302  10.074  1.00 20.00           C
ATOM     41  CD1 TYR E   6       9.796  14.221  11.316  1.00 20.00           C
ATOM     42  CD2 TYR E   6       9.614  14.530   8.961  1.00 20.00           C
ATOM     43  CE1 TYR E   6       8.427  14.363  11.446  1.00 20.00           C
ATOM     44  CE2 TYR E   6       8.244  14.674   9.080  1.00 20.00           C
ATOM     45  CZ  TYR E   6       7.656  14.589  10.325  1.00 20.00           C
ATOM     46  OH  TYR E   6       6.293  14.731  10.449  1.00 20.00           O
ATOM     47  N   THR E   7      14.979  14.884  10.479  1.00 20.00           N
ATOM     48  CA  THR E   7      16.391  14.547  10.326  1.00 20.00           C
ATOM     49  C   THR E   7      17.120  14.587  11.664  1.00 20.00           C
ATOM     50  O   THR E   7      17.960  13.724  11.944  1.00 20.00           O
ATOM     51  CB  THR E   7      17.058  15.492   9.326  1.00 20.00           C
ATOM     52  OG1 THR E   7      16.757  16.850   9.672  1.00 20.00           O
ATOM     53  CG2 THR E   7      16.571  15.207   7.912  1.00 20.00           C
ATOM     54  N   ILE E   8      16.814  15.580  12.502  1.00 20.00           N
ATOM     55  CA  ILE E   8      17.450  15.665  13.815  1.00 20.00           C
ATOM     56  C   ILE E   8      17.050  14.475  14.679  1.00 20.00           C
ATOM     57  O   ILE E   8      17.893  13.855  15.340  1.00 20.00           O
ATOM     58  CB  ILE E   8      17.103  17.004  14.492  1.00 20.00           C
ATOM     59  CG1 ILE E   8      17.763  18.165  13.745  1.00 20.00           C
ATOM     60  CG2 ILE E   8      17.530  16.996  15.951  1.00 20.00           C
ATOM     61  CD1 ILE E   8      17.464  19.524  14.342  1.00 20.00           C
ATOM     62  N   HIS E   9      15.760  14.128  14.678  1.00 20.00           N
ATOM     63  CA  HIS E   9      15.302  12.994  15.472  1.00 20.00           C
ATOM     64  C   HIS E   9      15.787  11.669  14.897  1.00 20.00           C
ATOM     65  O   HIS E   9      15.926  10.689  15.637  1.00 20.00           O
ATOM     66  CB  HIS E   9      13.776  13.002  15.572  1.00 20.00           C
ATOM     67  CG  HIS E   9      13.232  14.116  16.411  1.00 20.00           C
ATOM     68  ND1 HIS E   9      14.038  15.058  17.012  1.00 20.00           N
ATOM     69  CD2 HIS E   9      11.961  14.436  16.753  1.00 20.00           C
ATOM     70  CE1 HIS E   9      13.288  15.912  17.685  1.00 20.00           C
ATOM     71  NE2 HIS E   9      12.024  15.557  17.545  1.00 20.00           N
ATOM     72  N   SER E  10      16.046  11.615  13.589  1.00 20.00           N
ATOM     73  CA  SER E  10      16.560  10.388  12.991  1.00 20.00           C
ATOM     74  C   SER E  10      18.038  10.191  13.305  1.00 20.00           C
ATOM     75  O   SER E  10      18.458   9.080  13.651  1.00 20.00           O
ATOM     76  CB  SER E  10      16.334  10.403  11.479  1.00 20.00           C
ATOM     77  OG  SER E  10      17.100  11.420  10.858  1.00 20.00           O
ATOM     78  N   VAL E  11      18.839  11.252  13.191  1.00 20.00           N
ATOM     79  CA  VAL E  11      20.262  11.143  13.498  1.00 20.00           C
ATOM     80  C   VAL E  11      20.471  10.920  14.991  1.00 20.00           C
ATOM     81  O   VAL E  11      21.273  10.071  15.398  1.00 20.00           O
ATOM     82  CB  VAL E  11      21.014  12.389  12.998  1.00 20.00           C
ATOM     83  CG1 VAL E  11      22.469  12.345  13.440  1.00 20.00           C
ATOM     84  CG2 VAL E  11      20.920  12.491  11.483  1.00 20.00           C
ATOM     85  N   ASP E  12      19.755  11.672  15.830  1.00 20.00           N
ATOM     86  CA  ASP E  12      19.881  11.484  17.272  1.00 20.00           C
ATOM     87  C   ASP E  12      19.303  10.148  17.719  1.00 20.00           C
ATOM     88  O   ASP E  12      19.822   9.534  18.658  1.00 20.00           O
ATOM     89  CB  ASP E  12      19.200  12.633  18.016  1.00 20.00           C
ATOM     90  CG  ASP E  12      19.888  13.964  17.788  1.00 20.00           C
ATOM     91  OD1 ASP E  12      21.099  13.964  17.481  1.00 20.00           O
ATOM     92  OD2 ASP E  12      19.220  15.010  17.921  1.00 20.00           O
ATOM     93  N   ALA E  13      18.236   9.683  17.066  1.00 20.00           N
ATOM     94  CA  ALA E  13      17.640   8.405  17.442  1.00 20.00           C
ATOM     95  C   ALA E  13      18.531   7.237  17.035  1.00 20.00           C
ATOM     96  O   ALA E  13      18.671   6.266  17.787  1.00 20.00           O
ATOM     97  CB  ALA E  13      16.253   8.268  16.816  1.00 20.00           C
ATOM     98  N   PHE E  14      19.140   7.312  15.850  1.00 20.00           N
ATOM     99  CA  PHE E  14      20.024   6.243  15.402  1.00 20.00           C
ATOM    100  C   PHE E  14      21.374   6.283  16.108  1.00 20.00           C
ATOM    101  O   PHE E  14      22.022   5.241  16.254  1.00 20.00           O
ATOM    102  CB  PHE E  14      20.223   6.320  13.887  1.00 20.00           C
ATOM    103  CG  PHE E  14      18.980   6.023  13.096  1.00 20.00           C
ATOM    104  CD1 PHE E  14      17.953   5.275  13.646  1.00 20.00           C
ATOM    105  CD2 PHE E  14      18.841   6.492  11.800  1.00 20.00           C
ATOM    106  CE1 PHE E  14      16.809   5.000  12.919  1.00 20.00           C
ATOM    107  CE2 PHE E  14      17.700   6.221  11.068  1.00 20.00           C
ATOM    108  CZ  PHE E  14      16.683   5.474  11.629  1.00 20.00           C
ATOM    109  N   ALA E  15      21.810   7.463  16.548  1.00 20.00           N
ATOM    110  CA  ALA E  15      23.084   7.598  17.240  1.00 20.00           C
ATOM    111  C   ALA E  15      22.974   7.379  18.742  1.00 20.00           C
ATOM    112  O   ALA E  15      23.992   7.108  19.390  1.00 20.00           O
ATOM    113  CB  ALA E  15      23.689   8.980  16.973  1.00 20.00           C
ATOM    114  N   GLU E  16      21.776   7.489  19.307  1.00 20.00           N
ATOM    115  CA  GLU E  16      21.584   7.294  20.739  1.00 20.00           C
ATOM    116  C   GLU E  16      20.666   6.107  21.011  1.00 20.00           C
ATOM    117  O   GLU E  16      20.973   5.248  21.838  1.00 20.00           O
ATOM    118  CB  GLU E  16      21.012   8.559  21.382  1.00 20.00           C
ATOM    119  CG  GLU E  16      21.901   9.784  21.238  1.00 20.00           C
ATOM    120  CD  GLU E  16      21.296  11.020  21.875  1.00 20.00           C
ATOM    121  OE1 GLU E  16      20.188  10.917  22.440  1.00 20.00           O
ATOM    122  OE2 GLU E  16      21.930  12.095  21.809  1.00 20.00           O
TER
"""
pdb_str_ligand = """\
ATOM     98  N   PHE A   1       9.174   9.310  14.969  0.20 20.00           N
ATOM     99  CA  PHE A   1      10.235   8.421  14.508  0.20 20.00           C
ATOM    100  C   PHE A   1      11.171   8.048  15.652  0.20 20.00           C
ATOM    101  O   PHE A   1      12.391   8.032  15.489  0.20 20.00           O
ATOM    102  CB  PHE A   1      11.025   9.073  13.371  0.20 20.00           C
ATOM    103  CG  PHE A   1      10.196   9.391  12.160  0.20 20.00           C
ATOM    104  CD1 PHE A   1      10.002   8.444  11.168  0.20 20.00           C
ATOM    105  CD2 PHE A   1       9.611  10.638  12.012  0.20 20.00           C
ATOM    106  CE1 PHE A   1       9.240   8.734  10.052  0.20 20.00           C
ATOM    107  CE2 PHE A   1       8.847  10.934  10.898  0.20 20.00           C
ATOM    108  CZ  PHE A   1       8.662   9.980   9.917  0.20 20.00           C
TER
END
"""

# ---------------------------------------------------------------------------

if (__name__ == "__main__"):
  t0 = time.time()
  exercise()
  print("OK. Time: %8.3f"%(time.time()-t0))


 *******************************************************************************


 *******************************************************************************
mmtbx/regression/tst_polder_4.py
from __future__ import division, print_function
import iotbx.pdb
import time, os
from libtbx import easy_run
import iotbx.pdb

def exercise_00(prefix="tst_phenix_regression_maps_polder"):
  """
  Make sure EXACTLY THIS comand below runs (= does not crash):

  phenix.polder model.pdb data.mtz scattering_table=electron selectioon="resseq 2"
  """
  pdb_str= """
CRYST1   10.000   10.000   10.000  90.00  90.00  90.00 P 1
HETATM    1  O   HOH A   1       1.000   2.000   3.000  1.00 10.00           O
HETATM    2  O   HOH A   2       4.000   5.000   6.000  1.00 20.00           O
END
"""
  pdb_inp = iotbx.pdb.input(lines = pdb_str, source_info=None)
  pdb_inp.write_pdb_file(file_name="%s.pdb"%prefix)
  xrs = pdb_inp.xray_structure_simple()
  fo = abs(xrs.structure_factors(d_min=1).f_calc())
  mtz_dataset = fo.as_mtz_dataset(column_root_label = "FOBS")
  mtz_object = mtz_dataset.mtz_object()
  mtz_object.write(file_name = "%s.mtz"%prefix)
  cmd = " ".join([
    "phenix.polder",
    "%s.mtz"%prefix,
    "%s.pdb"%prefix,
    "selection='resseq 1' ",
    "scattering_table=electron",
    "> %s.zlog"%prefix
    ])
  #print(cmd)
  assert not easy_run.call(cmd)
  assert os.path.isfile("tst_phenix_regression_maps_polder_polder_map_coeffs.mtz")

  os.remove('tst_phenix_regression_maps_polder.mtz')
  os.remove('tst_phenix_regression_maps_polder.pdb')
  os.remove('tst_phenix_regression_maps_polder.zlog')
  os.remove('tst_phenix_regression_maps_polder_polder_map_coeffs.mtz')

if (__name__ == "__main__"):
  t0 = time.time()
  exercise_00()
  print("Time: %6.4f" % (time.time()-t0))


 *******************************************************************************


 *******************************************************************************
mmtbx/regression/tst_polder_box.py
from __future__ import absolute_import, division, print_function
import time, os
from libtbx.test_utils import approx_equal
from iotbx import reflection_file_reader
from cctbx import maptbx
from mmtbx.regression.tst_polder import get_map, get_map_stats
from iotbx.data_manager import DataManager
from iotbx.cli_parser import run_program
from mmtbx.programs import fmodel, polder
from libtbx.utils import null_out

def exercise_00(prefix="tst_polder_box"):
  """
  Test for phenix.polder using the compute_box=True option.
  """
  dm = DataManager(['model'])
  dm.process_model_str('tst_polder_box.pdb', pdb_str)
  dm.process_model_str('tst_polder_box_ligand.pdb', pdb_str + pdb_str_ligand)
  dm.write_model_file(dm.get_model('tst_polder_box.pdb').model_as_pdb(),
                      filename  = 'tst_polder_box.pdb',
                      overwrite = True)
  dm.write_model_file(dm.get_model('tst_polder_box_ligand.pdb').model_as_pdb(),
                      filename  = 'tst_polder_box_ligand.pdb',
                      overwrite = True)

  # create test data with phenix.fmodel
  mtz_fn = "tst_polder_box.mtz"
  args = [
    'tst_polder_box_ligand.pdb',
    "high_res=2.0",
    "type=real",
    "label=f-obs",
    "k_sol=0.4",
    "b_sol=50",
    "output.file_name=%s" % mtz_fn]
  run_program(program_class=fmodel.Program, args=args, logger=null_out())

  selection = '((resseq 65 and name CG) or (resseq 7 and name OH) or \
    resseq 183 or resseq 95 or (resseq 148 and name CG))'

  args = [
    "tst_polder_box.pdb",
    "tst_polder_box.mtz",
    "compute_box=True",
    'solvent_exclusion_mask_selection="%s"' % selection]
    #'mask_output=True']

  r = run_program(program_class=polder.Program, args=args, logger=null_out())

  miller_arrays = reflection_file_reader.any_reflection_file(file_name =
    r.output_file).as_miller_arrays()
  mc_polder, mc_bias_omit, mc_omit = [None,]*3
  for ma in miller_arrays:
    lbl = ma.info().label_string()
    if(lbl == "mFo-DFc_polder,PHImFo-DFc_polder"):
      mc_polder = ma.deep_copy()
    if(lbl == "mFo-DFc_bias_omit,PHImFo-DFc_bias_omit"):
      mc_bias_omit = ma.deep_copy()
    if(lbl == "mFo-DFc_omit,PHImFo-DFc_omit"):
      mc_omit = ma.deep_copy()
  assert [mc_polder, mc_omit].count(None)==0
  cg = maptbx.crystal_gridding(
    unit_cell         = mc_polder.unit_cell(),
    d_min             = mc_polder.d_min(),
    resolution_factor = 0.25,
    space_group_info  = mc_polder.space_group_info())
  map_polder   = get_map(cg=cg, mc=mc_polder)
  map_omit     = get_map(cg=cg, mc=mc_omit)
  pdb_hierarchy = dm.get_model('tst_polder_box.pdb').get_hierarchy()
  sel = pdb_hierarchy.atom_selection_cache().selection(string = selection)
  sites_cart_lig = pdb_hierarchy.atoms().extract_xyz().select(sel)
  sites_frac_lig = mc_polder.unit_cell().fractionalize(sites_cart_lig)
  mp  = get_map_stats(map=map_polder,   sites_frac=sites_frac_lig)
  mo  = get_map_stats(map=map_omit,     sites_frac=sites_frac_lig)
  #
  mmm_mp = mp.min_max_mean().as_tuple()
  mmm_o = mo.min_max_mean().as_tuple()
  #print("Polder map : %7.3f %7.3f %7.3f"%mmm_mp)
  #print("Omit       : %7.3f %7.3f %7.3f"%mmm_o)
  #
  assert approx_equal(mmm_mp, [-2.051, 1.255, -0.162], eps=0.15)
  assert approx_equal(mmm_o,  [-0.558, 0.138, -0.068], eps=0.15)

  os.remove('tst_polder_box.pdb')
  os.remove('tst_polder_box_ligand.pdb')
  os.remove('tst_polder_box.mtz')
  os.remove(r.output_file)

# ---------------------------------------------------------------------------

pdb_str = """\
CRYST1   21.830   27.276   27.424  90.00  90.00  90.00 P 1
SCALE1      0.045809  0.000000  0.000000        0.00000
SCALE2      0.000000  0.036662  0.000000        0.00000
SCALE3      0.000000  0.000000  0.036464        0.00000
ATOM      1  N   TYR A   7      13.337  15.752  19.645  1.00 10.24           N
ATOM      2  CA  TYR A   7      12.308  16.751  19.902  1.00 11.36           C
ATOM      3  C   TYR A   7      12.565  17.364  21.244  1.00 12.55           C
ATOM      4  O   TYR A   7      12.979  16.662  22.161  1.00 14.36           O
ATOM      5  CB  TYR A   7      10.900  16.172  20.015  1.00 12.24           C
ATOM      6  CG  TYR A   7      10.374  15.482  18.784  1.00 13.20           C
ATOM      7  CD1 TYR A   7       9.910  16.256  17.734  1.00 15.61           C
ATOM      8  CD2 TYR A   7      10.326  14.099  18.719  1.00 13.25           C
ATOM      9  CE1 TYR A   7       9.393  15.632  16.618  1.00 16.74           C
ATOM     10  CE2 TYR A   7       9.809  13.467  17.600  1.00 14.24           C
ATOM     11  CZ  TYR A   7       9.346  14.248  16.562  1.00 16.67           C
ATOM     12  OH  TYR A   7       8.789  13.651  15.447  1.00 18.39           O
ATOM     13  N   HIS A  12       7.131  18.758  21.927  1.00 17.15           N
ATOM     14  CA  HIS A  12       6.572  17.487  21.517  1.00 15.83           C
ATOM     15  C   HIS A  12       7.214  16.460  22.424  1.00 16.05           C
ATOM     16  O   HIS A  12       8.426  16.251  22.372  1.00 15.95           O
ATOM     17  CB  HIS A  12       6.933  17.253  20.079  1.00 14.81           C
ATOM     18  CG  HIS A  12       6.260  16.046  19.452  1.00 16.05           C
ATOM     19  ND1 HIS A  12       5.199  16.054  18.655  1.00 17.40           N
ATOM     20  CD2 HIS A  12       6.719  14.757  19.509  1.00 16.62           C
ATOM     21  CE1 HIS A  12       5.000  14.839  18.206  1.00 17.35           C
ATOM     22  NE2 HIS A  12       5.919  14.078  18.726  1.00 19.34           N
ATOM     23  N   PHE A  43       7.914  21.178  11.433  1.00 16.32           N
ATOM     24  CA  PHE A  43       9.201  20.521  11.286  1.00 16.57           C
ATOM     25  C   PHE A  43      10.206  21.423  10.616  1.00 16.47           C
ATOM     26  O   PHE A  43       9.888  22.276   9.769  1.00 17.79           O
ATOM     27  CB  PHE A  43       9.088  19.272  10.437  1.00 17.43           C
ATOM     28  CG  PHE A  43       8.447  18.153  11.230  1.00 20.51           C
ATOM     29  CD1 PHE A  43       9.221  17.393  12.096  1.00 20.64           C
ATOM     30  CD2 PHE A  43       7.102  17.882  11.076  1.00 22.06           C
ATOM     31  CE1 PHE A  43       8.649  16.354  12.805  1.00 21.49           C
ATOM     32  CE2 PHE A  43       6.536  16.837  11.792  1.00 23.71           C
ATOM     33  CZ  PHE A  43       7.310  16.073  12.653  1.00 22.33           C
ATOM     34  N   ILE A  48      15.849  17.789   8.930  1.00 12.46           N
ATOM     35  CA  ILE A  48      15.469  16.420   8.550  1.00 13.43           C
ATOM     36  C   ILE A  48      16.295  16.013   7.331  1.00 13.28           C
ATOM     37  O   ILE A  48      16.830  14.898   7.337  1.00 12.47           O
ATOM     38  CB  ILE A  48      13.931  16.337   8.250  1.00 14.44           C
ATOM     39  CG1 ILE A  48      13.181  16.678   9.560  1.00 17.20           C
ATOM     40  CG2 ILE A  48      13.499  14.930   7.806  1.00 13.84           C
ATOM     41  CD1 ILE A  48      11.668  16.906   9.422  1.00 20.34           C
ATOM     42  N   GLN A  60      11.818   7.832   5.000  1.00 18.95           N
ATOM     43  CA  GLN A  60      11.755   8.086   6.430  1.00 20.21           C
ATOM     44  C   GLN A  60      11.086   6.941   7.175  1.00 19.68           C
ATOM     45  O   GLN A  60      10.875   7.000   8.389  1.00 19.28           O
ATOM     46  CB  GLN A  60      10.978   9.383   6.675  1.00 21.96           C
ATOM     47  CG  GLN A  60      11.647  10.627   6.126  1.00 25.34           C
ATOM     48  CD  GLN A  60      10.695  11.816   6.163  1.00 27.40           C
ATOM     49  OE1 GLN A  60       9.790  11.966   5.335  1.00 29.45           O
ATOM     50  NE2 GLN A  60      10.841  12.673   7.155  1.00 28.52           N
ATOM     51  N   LEU A  63      11.754   5.581  10.915  1.00 17.62           N
ATOM     52  CA  LEU A  63      12.627   6.435  11.685  1.00 17.71           C
ATOM     53  C   LEU A  63      11.929   7.021  12.904  1.00 15.54           C
ATOM     54  O   LEU A  63      10.864   7.652  12.785  1.00 17.03           O
ATOM     55  CB  LEU A  63      13.111   7.577  10.812  1.00 21.79           C
ATOM     56  CG ALEU A  63      14.302   8.243  10.167  0.50 25.94           C
ATOM     57  CD1ALEU A  63      13.988   9.692   9.787  0.50 26.52           C
ATOM     58  CD2ALEU A  63      15.437   8.172  11.170  0.50 26.38           C
ATOM     59  CG BLEU A  63      14.448   7.458  10.122  0.50 25.94           C
ATOM     60  CD1BLEU A  63      14.585   8.487   8.998  0.50 26.52           C
ATOM     61  CD2BLEU A  63      15.508   7.663  11.187  0.50 26.38           C
ATOM     62  N   THR A  64      12.504   6.810  14.068  1.00 12.15           N
ATOM     63  CA  THR A  64      11.993   7.397  15.285  1.00 12.07           C
ATOM     64  C   THR A  64      13.092   8.265  15.911  1.00 10.59           C
ATOM     65  O   THR A  64      14.263   8.236  15.515  1.00 10.38           O
ATOM     66  CB  THR A  64      11.573   6.306  16.277  1.00 12.33           C
ATOM     67  OG1 THR A  64      12.700   5.444  16.461  1.00 13.86           O
ATOM     68  CG2 THR A  64      10.370   5.516  15.788  1.00 12.38           C
ATOM     69  N   MET A  65      12.656   9.167  16.778  1.00 10.56           N
ATOM     70  CA  MET A  65      13.564  10.027  17.504  1.00  9.30           C
ATOM     71  C   MET A  65      13.794   9.445  18.893  1.00  9.44           C
ATOM     72  O   MET A  65      12.845   8.932  19.489  1.00 10.75           O
ATOM     73  CB  MET A  65      12.966  11.435  17.629  1.00 10.13           C
ATOM     74  CG  MET A  65      12.862  12.139  16.284  1.00 11.59           C
ATOM     75  SD  MET A  65      14.472  12.368  15.465  1.00 14.86           S
ATOM     76  CE  MET A  65      14.089  11.535  13.957  1.00 13.71           C
HETATM   89  O   HOH A  91       8.366  11.587  20.482  1.00 26.84           O
HETATM   90  O   HOH A  92       6.401  11.429  18.139  1.00 25.10           O
HETATM   91  O   HOH A  94      10.085   9.313  19.814  1.00 19.48           O
HETATM   92  O   HOH A  95       5.707   8.844  18.491  1.00 67.81           O
HETATM   93  O   HOH A 161       6.064  13.749  14.882  1.00 46.91           O
HETATM   94  O   HOH A 183       7.620   9.005   8.058  1.00 72.39           O
HETATM   95  O   HOH A 185       8.376   5.000  12.590  1.00 64.39           O
HETATM   96  O   HOH A 197       8.894   7.872  10.214  1.00 53.20           O
"""

pdb_str_ligand = """
HETATM   77  C2  MES A  88      11.178  10.844  10.521  1.00 66.12           C
HETATM   78  C3  MES A  88      10.035  10.700  11.264  1.00 65.44           C
HETATM   79  C5  MES A  88       9.898  12.901  11.698  1.00 65.50           C
HETATM   80  C6  MES A  88      11.005  13.173  10.925  1.00 66.33           C
HETATM   81  C7  MES A  88       8.949  11.458  13.133  1.00 63.09           C
HETATM   82  C8  MES A  88       8.983  10.302  13.874  1.00 61.16           C
HETATM   83  N4  MES A  88      10.025  11.657  12.279  1.00 64.72           N
HETATM   84  O1  MES A  88      11.134  12.150   9.913  1.00 66.57           O
HETATM   85  O1S MES A  88       7.392  11.377  15.767  1.00 59.34           O
HETATM   86  O2S MES A  88       8.043   8.588  15.664  1.00 59.97           O
HETATM   87  O3S MES A  88      10.061  10.480  16.373  1.00 59.16           O
HETATM   88  S   MES A  88       8.674  10.225  15.261  1.00 59.12           S
"""

# ---------------------------------------------------------------------------

if (__name__ == "__main__"):
  t0 = time.time()
  exercise_00()
  print("OK. Time: %8.3f"%(time.time()-t0))


 *******************************************************************************


 *******************************************************************************
mmtbx/regression/tst_polder_ccs.py
from __future__ import absolute_import, division, print_function
import time, os
from libtbx.test_utils import approx_equal
from libtbx.utils import null_out
import iotbx.phil
from iotbx.cli_parser import run_program
from iotbx.data_manager import DataManager
from iotbx import reflection_file_reader
from mmtbx.programs import fmodel
import mmtbx.maps.polder


def exercise(prefix="tst_polder_ccs"):
  """
  Test for phenix.polder correlation coefficients.
  """

  # save test model as file
  model_fn = "tst_polder_ccs.pdb"
  dm = DataManager(['model'])
  dm.process_model_str(model_fn, pdb_str)
  model = dm.get_model()
  dm.write_model_file(model.model_as_pdb(),
                      filename  = "tst_polder_ccs.pdb",
                      overwrite = True)

  # create test data with phenix.fmodel
  mtz_fn = "tst_polder_ccs.mtz"
  args = [
    model_fn,
    "high_res=2.0",
    "type=real",
    "label=f-obs",
    "k_sol=0.4",
    "b_sol=50",
    "output.file_name=%s" % mtz_fn]
  run_program(program_class=fmodel.Program, args=args, logger=null_out())

  params_line = mmtbx.maps.polder.master_params_str
  params = iotbx.phil.parse(
      input_string=params_line, process_includes=True).extract()

  pdb_hierarchy = model.get_hierarchy()

  selection_string = 'resseq 88'
  #selection_bool = pdb_hierarchy.atom_selection_cache().selection(
  #  string = 'resseq 88')
  #f_obs = abs(xray_structure.structure_factors(d_min=2).f_calc())
  #mtz = f_obs.as_mtz_dataset(column_root_label = "Fobs")
  #mtz.mtz_object().write("bla.mtz")

  miller_arrays = reflection_file_reader.any_reflection_file(file_name =
    mtz_fn).as_miller_arrays()
  fobs = [None]
  for ma in miller_arrays:
    if(ma.info().label_string() == "f-obs"):
      fobs = ma.deep_copy()

  # Calculate polder map and get results
  polder_object = mmtbx.maps.polder.compute_polder_map(
    f_obs             = fobs,
    r_free_flags      = None,
    model             = model,
    params            = params.polder,
    selection_string    = selection_string)
  polder_object.validate()
  polder_object.run()
  results = polder_object.get_results()

  #mtz_dataset = results.mc_polder.as_mtz_dataset(
  #  column_root_label = "mFo-DFc_polder")
  #mtz_dataset.add_miller_array(
  #  miller_array      = results.mc_omit,
  #  column_root_label = "mFo-DFc_omit")
  #mtz_object = mtz_dataset.mtz_object()
  #mtz_object.write(file_name = "bla.mtz")

  vr = results.validation_results

  assert approx_equal([vr.cc12, vr.cc13, vr.cc23], [0.4153, 0.9980, 0.4213], eps = 0.1)
  assert approx_equal([vr.cc12_peak, vr.cc13_peak, vr.cc23_peak], [0.4310, 0.9966, 0.4379], eps = 0.1)

  # Clean up files
  os.remove(model_fn)
  os.remove(mtz_fn)

# ---------------------------------------------------------------------------

pdb_str = """\
CRYST1   21.830   27.276   27.424  90.00  90.00  90.00 P 1
SCALE1      0.045809  0.000000  0.000000        0.00000
SCALE2      0.000000  0.036662  0.000000        0.00000
SCALE3      0.000000  0.000000  0.036464        0.00000
ATOM      1  N   TYR A   7      13.337  15.752  19.645  1.00 10.24           N
ATOM      2  CA  TYR A   7      12.308  16.751  19.902  1.00 11.36           C
ATOM      3  C   TYR A   7      12.565  17.364  21.244  1.00 12.55           C
ATOM      4  O   TYR A   7      12.979  16.662  22.161  1.00 14.36           O
ATOM      5  CB  TYR A   7      10.900  16.172  20.015  1.00 12.24           C
ATOM      6  CG  TYR A   7      10.374  15.482  18.784  1.00 13.20           C
ATOM      7  CD1 TYR A   7       9.910  16.256  17.734  1.00 15.61           C
ATOM      8  CD2 TYR A   7      10.326  14.099  18.719  1.00 13.25           C
ATOM      9  CE1 TYR A   7       9.393  15.632  16.618  1.00 16.74           C
ATOM     10  CE2 TYR A   7       9.809  13.467  17.600  1.00 14.24           C
ATOM     11  CZ  TYR A   7       9.346  14.248  16.562  1.00 16.67           C
ATOM     12  OH  TYR A   7       8.789  13.651  15.447  1.00 18.39           O
ATOM     13  N   HIS A  12       7.131  18.758  21.927  1.00 17.15           N
ATOM     14  CA  HIS A  12       6.572  17.487  21.517  1.00 15.83           C
ATOM     15  C   HIS A  12       7.214  16.460  22.424  1.00 16.05           C
ATOM     16  O   HIS A  12       8.426  16.251  22.372  1.00 15.95           O
ATOM     17  CB  HIS A  12       6.933  17.253  20.079  1.00 14.81           C
ATOM     18  CG  HIS A  12       6.260  16.046  19.452  1.00 16.05           C
ATOM     19  ND1 HIS A  12       5.199  16.054  18.655  1.00 17.40           N
ATOM     20  CD2 HIS A  12       6.719  14.757  19.509  1.00 16.62           C
ATOM     21  CE1 HIS A  12       5.000  14.839  18.206  1.00 17.35           C
ATOM     22  NE2 HIS A  12       5.919  14.078  18.726  1.00 19.34           N
ATOM     23  N   PHE A  43       7.914  21.178  11.433  1.00 16.32           N
ATOM     24  CA  PHE A  43       9.201  20.521  11.286  1.00 16.57           C
ATOM     25  C   PHE A  43      10.206  21.423  10.616  1.00 16.47           C
ATOM     26  O   PHE A  43       9.888  22.276   9.769  1.00 17.79           O
ATOM     27  CB  PHE A  43       9.088  19.272  10.437  1.00 17.43           C
ATOM     28  CG  PHE A  43       8.447  18.153  11.230  1.00 20.51           C
ATOM     29  CD1 PHE A  43       9.221  17.393  12.096  1.00 20.64           C
ATOM     30  CD2 PHE A  43       7.102  17.882  11.076  1.00 22.06           C
ATOM     31  CE1 PHE A  43       8.649  16.354  12.805  1.00 21.49           C
ATOM     32  CE2 PHE A  43       6.536  16.837  11.792  1.00 23.71           C
ATOM     33  CZ  PHE A  43       7.310  16.073  12.653  1.00 22.33           C
ATOM     34  N   ILE A  48      15.849  17.789   8.930  1.00 12.46           N
ATOM     35  CA  ILE A  48      15.469  16.420   8.550  1.00 13.43           C
ATOM     36  C   ILE A  48      16.295  16.013   7.331  1.00 13.28           C
ATOM     37  O   ILE A  48      16.830  14.898   7.337  1.00 12.47           O
ATOM     38  CB  ILE A  48      13.931  16.337   8.250  1.00 14.44           C
ATOM     39  CG1 ILE A  48      13.181  16.678   9.560  1.00 17.20           C
ATOM     40  CG2 ILE A  48      13.499  14.930   7.806  1.00 13.84           C
ATOM     41  CD1 ILE A  48      11.668  16.906   9.422  1.00 20.34           C
ATOM     42  N   GLN A  60      11.818   7.832   5.000  1.00 18.95           N
ATOM     43  CA  GLN A  60      11.755   8.086   6.430  1.00 20.21           C
ATOM     44  C   GLN A  60      11.086   6.941   7.175  1.00 19.68           C
ATOM     45  O   GLN A  60      10.875   7.000   8.389  1.00 19.28           O
ATOM     46  CB  GLN A  60      10.978   9.383   6.675  1.00 21.96           C
ATOM     47  CG  GLN A  60      11.647  10.627   6.126  1.00 25.34           C
ATOM     48  CD  GLN A  60      10.695  11.816   6.163  1.00 27.40           C
ATOM     49  OE1 GLN A  60       9.790  11.966   5.335  1.00 29.45           O
ATOM     50  NE2 GLN A  60      10.841  12.673   7.155  1.00 28.52           N
ATOM     51  N   LEU A  63      11.754   5.581  10.915  1.00 17.62           N
ATOM     52  CA  LEU A  63      12.627   6.435  11.685  1.00 17.71           C
ATOM     53  C   LEU A  63      11.929   7.021  12.904  1.00 15.54           C
ATOM     54  O   LEU A  63      10.864   7.652  12.785  1.00 17.03           O
ATOM     55  CB  LEU A  63      13.111   7.577  10.812  1.00 21.79           C
ATOM     56  CG ALEU A  63      14.302   8.243  10.167  0.50 25.94           C
ATOM     57  CD1ALEU A  63      13.988   9.692   9.787  0.50 26.52           C
ATOM     58  CD2ALEU A  63      15.437   8.172  11.170  0.50 26.38           C
ATOM     59  CG BLEU A  63      14.448   7.458  10.122  0.50 25.94           C
ATOM     60  CD1BLEU A  63      14.585   8.487   8.998  0.50 26.52           C
ATOM     61  CD2BLEU A  63      15.508   7.663  11.187  0.50 26.38           C
ATOM     62  N   THR A  64      12.504   6.810  14.068  1.00 12.15           N
ATOM     63  CA  THR A  64      11.993   7.397  15.285  1.00 12.07           C
ATOM     64  C   THR A  64      13.092   8.265  15.911  1.00 10.59           C
ATOM     65  O   THR A  64      14.263   8.236  15.515  1.00 10.38           O
ATOM     66  CB  THR A  64      11.573   6.306  16.277  1.00 12.33           C
ATOM     67  OG1 THR A  64      12.700   5.444  16.461  1.00 13.86           O
ATOM     68  CG2 THR A  64      10.370   5.516  15.788  1.00 12.38           C
ATOM     69  N   MET A  65      12.656   9.167  16.778  1.00 10.56           N
ATOM     70  CA  MET A  65      13.564  10.027  17.504  1.00  9.30           C
ATOM     71  C   MET A  65      13.794   9.445  18.893  1.00  9.44           C
ATOM     72  O   MET A  65      12.845   8.932  19.489  1.00 10.75           O
ATOM     73  CB  MET A  65      12.966  11.435  17.629  1.00 10.13           C
ATOM     74  CG  MET A  65      12.862  12.139  16.284  1.00 11.59           C
ATOM     75  SD  MET A  65      14.472  12.368  15.465  1.00 14.86           S
ATOM     76  CE  MET A  65      14.089  11.535  13.957  1.00 13.71           C
HETATM   89  O   HOH A  91       8.366  11.587  20.482  1.00 26.84           O
HETATM   90  O   HOH A  92       6.401  11.429  18.139  1.00 25.10           O
HETATM   91  O   HOH A  94      10.085   9.313  19.814  1.00 19.48           O
HETATM   92  O   HOH A  95       5.707   8.844  18.491  1.00 67.81           O
HETATM   93  O   HOH A 161       6.064  13.749  14.882  1.00 46.91           O
HETATM   94  O   HOH A 183       7.620   9.005   8.058  1.00 72.39           O
HETATM   95  O   HOH A 185       8.376   5.000  12.590  1.00 64.39           O
HETATM   96  O   HOH A 197       8.894   7.872  10.214  1.00 53.20           O
HETATM   77  C2  MES A  88      11.178  10.844  10.521  1.00 66.12           C
HETATM   78  C3  MES A  88      10.035  10.700  11.264  1.00 65.44           C
HETATM   79  C5  MES A  88       9.898  12.901  11.698  1.00 65.50           C
HETATM   80  C6  MES A  88      11.005  13.173  10.925  1.00 66.33           C
HETATM   81  C7  MES A  88       8.949  11.458  13.133  1.00 63.09           C
HETATM   82  C8  MES A  88       8.983  10.302  13.874  1.00 61.16           C
HETATM   83  N4  MES A  88      10.025  11.657  12.279  1.00 64.72           N
HETATM   84  O1  MES A  88      11.134  12.150   9.913  1.00 66.57           O
HETATM   85  O1S MES A  88       7.392  11.377  15.767  1.00 59.34           O
HETATM   86  O2S MES A  88       8.043   8.588  15.664  1.00 59.97           O
HETATM   87  O3S MES A  88      10.061  10.480  16.373  1.00 59.16           O
HETATM   88  S   MES A  88       8.674  10.225  15.261  1.00 59.12           S
"""

# ---------------------------------------------------------------------------

if (__name__ == "__main__"):
  t0 = time.time()
  exercise()
  print("OK. Time: %8.3f"%(time.time()-t0))


 *******************************************************************************


 *******************************************************************************
mmtbx/regression/tst_probe.py
##################################################################################
# This is a test program to validate that the Python wrapping of Probe worked.
#

#                Copyright 2021  Richardson Lab at Duke University
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

from __future__ import absolute_import, division, print_function
from libtbx.utils import format_cpu_times
import sys, os, subprocess, tempfile, platform
from iotbx.map_model_manager import map_model_manager
from iotbx.data_manager import DataManager
from cctbx.maptbx.box import shift_and_box_model
import mmtbx
import libtbx.load_env

import boost_adaptbx.boost.python as bp
bp.import_ext("mmtbx_probe_ext")
import mmtbx_probe_ext as probeext

from mmtbx.probe import Helpers, AtomTypes

def RunProbeTests(inFileName):

  #========================================================================
  # Call the test functions for the libraries we test.

  ret = probeext.DotSpheres_test()
  assert len(ret) == 0, "DotSpheres_test() failed: " + ret

  ret = probeext.SpatialQuery_test()
  assert len(ret) == 0, "SpatialQuery_test() failed: " + ret

  ret = probeext.Scoring_test()
  assert len(ret) == 0, "Scoring_test() failed: " + ret

  AtomTypes.Test()
  Helpers.Test()

  #========================================================================
  # Now ensure that we can use the C++-wrapped classes as intended to make sure
  # that the wrapping code or parameters have not changed.

  #========================================================================
  # Make sure we can get at the DotSphere objects and their methods
  cache = probeext.DotSphereCache(10)
  sphere1 = cache.get_sphere(1)
  dots = sphere1.dots()

  #========================================================================
  # Make sure we can fill in an ExtraAtomInfoList and pass it to scoring
  # Generate an example data model with a small molecule in it unless we've
  # been given a file name to open.
  if inFileName is not None and len(inFileName) > 0:
    # Read a model from a file using the DataManager
    dm = DataManager()
    dm.process_model_file(inFileName)
    model = dm.get_model(inFileName)
  else:
    # Generate a small-molecule model using the map model manager
    mmm=map_model_manager()         #   get an initialized instance of the map_model_manager
    mmm.generate_map()              #   get a model from a generated small library model and calculate a map for it
    model = mmm.model()             #   get the model

  # Fix up bogus unit cell when it occurs by checking crystal symmetry.
  cs = model.crystal_symmetry()
  if (cs is None) or (cs.unit_cell() is None):
    model = shift_and_box_model(model = model)

  # Get the list of all atoms in the model
  atoms = model.get_atoms()

  # Get the bonding information we'll need to exclude our bonded neighbors.
  try:
    p = mmtbx.model.manager.get_default_pdb_interpretation_params()
    model.process(make_restraints=True, pdb_interpretation_params=p) # make restraints
    geometry = model.get_restraints_manager().geometry
    sites_cart = model.get_sites_cart() # cartesian coordinates
    bond_proxies_simple, asu = \
        geometry.get_all_bond_proxies(sites_cart = sites_cart)
  except Exception as e:
    raise Exception("Could not get bonding information for input file: " + str(e))
  bondedNeighbors = Helpers.getBondedNeighborLists(atoms, bond_proxies_simple)

  # Traverse the hierarchy and look up the extra data to be filled in.
  class philLike:
    def __init__(self, useImplicitHydrogenDistances = False):
      self.implicit_hydrogens = useImplicitHydrogenDistances
      self.set_polar_hydrogen_radius = True
  ret = Helpers.getExtraAtomInfo(model,bondedNeighbors,
          useNeutronDistances=False,probePhil=philLike(False))
  extra = ret.extraAtomInfo

  # Construct a SpatialQuery and fill in the atoms.  Ensure that we can make a
  # query within 1000 Angstroms of the origin.
  sq = probeext.SpatialQuery(atoms)
  nb = sq.neighbors((0,0,0), 0, 1000)

  # Construct a DotScorer object.
  # Find the radius of each atom in the structure and construct dot spheres for
  # them. Find the atoms that are bonded to them and add them to an excluded list.
  # Then compute the score for each of them and report the summed score over the
  # whole molecule the way that Reduce will.
  ds = probeext.DotScorer(extra)
  total = 0
  badBumpTotal = 0
  for a in atoms:
    rad = extra.getMappingFor(a).vdwRadius
    assert rad > 0, "Invalid radius for atom look-up: "+a.name+" rad = "+str(rad)
    sphere = cache.get_sphere(rad)

    # Excluded atoms that are bonded to me or to one of my neightbors.
    # It has the side effect of excluding myself if I have any neighbors.
    # Construct as a set to avoid duplicates.
    exclude = set()
    for n in bondedNeighbors[a]:
      exclude.add(n)
      for n2 in bondedNeighbors[n]:
        exclude.add(n2)
    exclude = list(exclude)

    dots = sphere.dots()
    res = ds.score_dots(a, 1.0, sq, rad*3, 0.25, exclude, sphere.dots(), sphere.density(), False, False)
    total += res.totalScore()
    if res.hasBadBump:
      badBumpTotal += 1

  # Test calling the single-dot checking code as will be used by Probe to make sure
  # all of the Python linkage is working
  dotOffset = [1, 0, 0]
  check = ds.check_dot(atoms[0], dotOffset, 1, atoms, [atoms[0]])
  overlapType = check.overlapType

  # Test calling the interaction_type method to be sure Python linkage is working
  interactionType = ds.interaction_type(check.overlapType, check.gap)

  #========================================================================
  # Regression test a Probe2 run against a snippet of a file, comparing the output
  # to the output generated by a previous version of the program.  If there are
  # differences, report that this is the case and recommend verifying that the
  # differences are intentional and replacing the stored output.
  data_dir = libtbx.env.under_dist(
    module_name = "mmtbx",
    path = os.path.join("regression","pdbs"),
    test = os.path.isdir)
  model_file = os.path.join(data_dir,'Fe_1brf_snip_reduced.pdb')
  kin_dir = libtbx.env.under_dist(
    module_name = "mmtbx",
    path = os.path.join("regression","kins"),
    test = os.path.isdir)
  kin_file = os.path.join(kin_dir,'Fe_1brf_snip_reduced.kin')
  temp_file = os.path.join(tempfile._get_default_tempdir(),
    next(tempfile._get_candidate_names())+".kin" )
  try:
    my_env = os.environ
    exe_name = 'mmtbx.probe2'
    if platform.system() == 'Windows':
      exe_name += '.bat'
    if subprocess.check_call([exe_name
                              ,'source_selection="all"'
                              ,'approach=self'
                              ,'output.separate_worse_clashes=True'
                              ,'output.file_name='+temp_file
                              ,'include_mainchain_mainchain=True'
                              ,'output.add_kinemage_keyword=True'
                              ,model_file
                            ], env = my_env
                             , stdout = subprocess.DEVNULL
                             , stderr = subprocess.DEVNULL):
      raise Exception("Call to subprocess to regression test had nonzero return")
  except Exception as e:
    raise Exception("Could not call subprocess to do regression test: "+str(e))
  with open(temp_file) as ft:
    ft_text = ft.readlines()
  with open(kin_file) as fk:
    fk_text = fk.readlines()
  instructions = ("Use KiNG or another program to see what changed and then determine if the "+
      "differences are expected.  If so, replace "+kin_file+" with the new file.")
  if len(ft_text) != len(fk_text):
    raise Exception("Different number of lines in "+temp_file+" and "+kin_file+instructions)
  for i in range(3,len(ft_text)):
    if ft_text[i] != fk_text[i]:
      print('Line',i,'from each file:')
      print(ft_text[i])
      print(fk_text[i])
      raise Exception("Line "+str(i)+" in "+temp_file+" and "+kin_file+" differ.  "+instructions)

if __name__ == '__main__':

  #==============================================================
  # Parse command-line arguments.  The 0th argument is the name
  # of the script. There can be the name of a PDB file to read.
  realParams = 0
  fileName = ""
  for i in range(1,len(sys.argv)):
    fileName = sys.argv[i]

  RunProbeTests(fileName)
  print(format_cpu_times())
  print('OK')


 *******************************************************************************


 *******************************************************************************
mmtbx/regression/tst_process_predicted_model.py
from __future__ import division, print_function
import sys, os, time

from libtbx.test_utils import approx_equal
import iotbx.phil

import libtbx.load_env
data_dir = libtbx.env.under_dist(
  module_name="mmtbx",
  path=os.path.join("regression","pdbs"),
  test=os.path.isdir)

pae_data_dir = libtbx.env.under_dist(
  module_name="mmtbx",
  path="regression",
  test=os.path.isdir)

from iotbx.data_manager import DataManager
from mmtbx.process_predicted_model import split_model_into_compact_units, \
   get_cutoff_b_value, \
   get_b_values_from_plddt, get_rmsd_from_plddt, \
   process_predicted_model, master_phil_str, get_plddt_from_b

from mmtbx.domains_from_pae import parse_pae_file
master_phil = iotbx.phil.parse(master_phil_str)
params = master_phil.extract()

# For these tests, use defaults from original version of process_predicted_model
params.process_predicted_model.minimum_domain_length = 10
params.process_predicted_model.minimum_sequential_residues = 5
params.process_predicted_model.pae_power = 1
params.process_predicted_model.pae_cutoff = 5
params.process_predicted_model.pae_graph_resolution = 0.5



two_chains_model_file=os.path.join(data_dir,'two_chains.pdb')
model_file=os.path.join(data_dir,'fibronectin_af_ca_1358_1537.pdb')
pae_model_file=os.path.join(data_dir,'pae_model.pdb')
pae_file=os.path.join(pae_data_dir,'pae.json')

def tst_01(log = sys.stdout):


  # Check calculations of conversion between rmsd, plddt , and B values
  print("\nChecking conversions between rmsd, plddt and B-values", file = log)
  for maximum_rmsd, minimum_plddt, target_b in [
       (1.5, None, 59.2175263686),
       (None,0.7,59.2175263686),
       (1.5,0.7,59.2175263686),
       (1.0, None, 26.3189006083),
       (None,0.5,293.306328196),]:
    print()
    cutoff_b = get_cutoff_b_value(
      maximum_rmsd,
      minimum_plddt,
      log = log)
    print("maximum_rmsd: %s min plddt %s Cutoff B:  %.2f" %(
     maximum_rmsd, minimum_plddt,
     cutoff_b), file = log)
    assert approx_equal(cutoff_b, target_b)


  # Read in alphafold model and get pLDDT from B-value field
  print("\nReading in alphafold model with plddt values in B-value field",
    file = log)

  dm = DataManager()
  dm.set_overwrite(True)
  m = dm.get_model(model_file)
  pae_m = dm.get_model(pae_model_file)
  pae_matrix = parse_pae_file(pae_file)

  plddt_values = m.get_hierarchy().atoms().extract_b().deep_copy()
  print("\npLDDT mean:",plddt_values.min_max_mean().mean)
  assert approx_equal(plddt_values.min_max_mean().mean, 82.5931111111)

  # Multiply plddt_values by 0.01 (fractional)
  fractional_plddt = plddt_values * 0.01

  #  Convert plddt to b
  b_values = get_b_values_from_plddt(plddt_values)
  print("B-value mean:",b_values.min_max_mean().mean)
  assert approx_equal(b_values.min_max_mean().mean, 24.7254093338)

  # Convert b to plddt
  plddt = get_plddt_from_b(b_values)
  assert approx_equal(plddt,fractional_plddt)
  plddt = get_plddt_from_b(b_values, input_plddt_is_fractional=False)
  assert approx_equal(plddt,plddt_values)

  # Convert  plddt to rmsd
  rmsd_values = get_rmsd_from_plddt(plddt_values)
  print("RMSD mean:",rmsd_values.min_max_mean().mean)
  assert approx_equal(rmsd_values.min_max_mean().mean, 0.93559254135)

  # use process_predicted_model to convert plddt or rmsd to B return with
  #  mark_atoms_to_ignore_with_occ_zero

  print("\nConverting plddt to B values and using mark_atoms_to_ignore_with_occ_zero", file = log)
  params.process_predicted_model.maximum_fraction_close = 0.5
  params.process_predicted_model.b_value_field_is = 'plddt'
  params.process_predicted_model.remove_low_confidence_residues = True
  params.process_predicted_model.maximum_rmsd = 1.5
  params.process_predicted_model.split_model_by_compact_regions = True
  params.process_predicted_model.maximum_domains = 3


  model_info = process_predicted_model(m, params, mark_atoms_to_keep_with_occ_one= True)
  models = model_info.model_list
  for mm,vrms,target_vrms,n1,n2 in zip(models,model_info.vrms_list,[1.1855925413499029,1.1855925413499029],[85,87],[95,93]):
    model_occ_values = mm.get_hierarchy().atoms().extract_occ()
    assert model_occ_values.count(1) == n1
    assert model_occ_values.count(0) == n2
    assert approx_equal(vrms, target_vrms, eps=0.01)

  # use process_predicted_model to convert plddt or rmsd to B

  print("\nConverting plddt to B values", file = log)
  params.process_predicted_model.maximum_fraction_close = 0.5
  params.process_predicted_model.b_value_field_is = 'plddt'
  params.process_predicted_model.remove_low_confidence_residues = False
  params.process_predicted_model.split_model_by_compact_regions = False
  params.process_predicted_model.input_plddt_is_fractional = None

  model_info = process_predicted_model(m, params)
  model = model_info.model
  model_b_values = model.get_hierarchy().atoms().extract_b()
  assert approx_equal(b_values, model_b_values, eps = 0.02) # come back rounded


  print("\nConverting fractional plddt to B values", file = log)
  ph = model.get_hierarchy().deep_copy()
  ph.atoms().set_b(fractional_plddt)
  test_model = model.as_map_model_manager().model_from_hierarchy(ph,
     return_as_model = True)
  params.process_predicted_model.maximum_fraction_close = 0.5
  params.process_predicted_model.b_value_field_is = 'plddt'
  params.process_predicted_model.remove_low_confidence_residues = False
  params.process_predicted_model.split_model_by_compact_regions = False
  params.process_predicted_model.input_plddt_is_fractional = None
  model_info = process_predicted_model(test_model, params)
  model = model_info.model
  model_b_values = model.get_hierarchy().atoms().extract_b()
  assert approx_equal(b_values, model_b_values, eps = 3) # come back very rounded

  ph = model.get_hierarchy().deep_copy()
  ph.atoms().set_b(rmsd_values)
  test_model = model.as_map_model_manager().model_from_hierarchy(ph,
     return_as_model = True)

  print("\nConverting rmsd to B values", file = log)
  params.process_predicted_model.maximum_fraction_close = 0.5
  params.process_predicted_model.b_value_field_is = 'rmsd'
  params.process_predicted_model.remove_low_confidence_residues = False
  params.process_predicted_model.split_model_by_compact_regions = False
  params.process_predicted_model.input_plddt_is_fractional = None
  model_info = process_predicted_model(test_model, params)
  model = model_info.model
  model_b_values = model.get_hierarchy().atoms().extract_b()
  assert approx_equal(b_values, model_b_values, eps = 0.5) # come back rounded

  print("B-values > 59: %s of %s" %(
     (model_b_values > 59).count(True), model_b_values.size()), file = log)

  print("\nConverting rmsd to B values and selecting rmsd < 1.5", file = log)
  params.process_predicted_model.maximum_fraction_close = 0.5
  params.process_predicted_model.b_value_field_is = 'rmsd'
  params.process_predicted_model.remove_low_confidence_residues = True
  params.process_predicted_model.maximum_rmsd = 1.5
  params.process_predicted_model.split_model_by_compact_regions = False
  params.process_predicted_model.input_plddt_is_fractional = None

  model_info = process_predicted_model(test_model, params)
  model = model_info.model
  print("Residues before: %s   After: %s " %(
    test_model.get_hierarchy().overall_counts().n_residues,
    model.get_hierarchy().overall_counts().n_residues,), file = log)

  # Check splitting model into domains
  print("\nSplitting model into domains", file = log)
  model_info = split_model_into_compact_units(model,
      adjust_domain_size = False,
      maximum_fraction_close = 0.5, log = log)

  chainid_list = model_info.chainid_list
  print("Segments found: %s" %(" ".join(chainid_list)), file = log)
  assert len(chainid_list) == 1

  # Check processing and splitting model into domains, adjusting domain size automatically
  print("\nProcessing and splitting model into domains", file = log)

  params.process_predicted_model.maximum_fraction_close = 0.5
  params.process_predicted_model.b_value_field_is = 'plddt'
  params.process_predicted_model.remove_low_confidence_residues = True
  params.process_predicted_model.maximum_rmsd = 1.5
  params.process_predicted_model.split_model_by_compact_regions = True
  params.process_predicted_model.maximum_domains = 3
  params.process_predicted_model.adjust_domain_size = True
  model_info = process_predicted_model(m,  params, log = log)

  chainid_list = model_info.chainid_list
  print("Segments found: %s" %(" ".join(chainid_list)), file = log)
  assert len(chainid_list) == 2


  mmm = model_info.model.as_map_model_manager()
  mmm.write_model('model_with_groupings.pdb')
  residue_count = []
  expected_residue_count =  [85, 87]
  for chainid in chainid_list:
    selection_string = "chain %s" %(chainid)
    ph = model_info.model.get_hierarchy()
    asc1 = ph.atom_selection_cache()
    sel = asc1.selection(selection_string)
    m1 = model_info.model.select(sel)
    n = m1.get_hierarchy().overall_counts().n_residues
    print("Residues in %s: %s" %(
      selection_string, n),
       file = log)
    residue_count.append(n)
  assert expected_residue_count == residue_count

  # Check processing and splitting model into domains
  print("\nProcessing and splitting model into domains without adjusting domain size", file = log)

  params.process_predicted_model.maximum_fraction_close = 0.5
  params.process_predicted_model.b_value_field_is = 'plddt'
  params.process_predicted_model.remove_low_confidence_residues = True
  params.process_predicted_model.maximum_rmsd = 1.5
  params.process_predicted_model.split_model_by_compact_regions = True
  params.process_predicted_model.maximum_domains = 3
  params.process_predicted_model.adjust_domain_size = False
  model_info = process_predicted_model(m,  params, log = log)

  chainid_list = model_info.chainid_list
  print("Segments found: %s" %(" ".join(chainid_list)), file = log)
  assert len(chainid_list) == 1


  mmm = model_info.model.as_map_model_manager()
  mmm.write_model('model_with_groupings.pdb')
  residue_count = []
  expected_residue_count = [172]
  for chainid in chainid_list:
    selection_string = "chain %s" %(chainid)
    ph = model_info.model.get_hierarchy()
    asc1 = ph.atom_selection_cache()
    sel = asc1.selection(selection_string)
    m1 = model_info.model.select(sel)
    n = m1.get_hierarchy().overall_counts().n_residues
    print("Residues in %s: %s" %(
      selection_string, n),
       file = log)
    residue_count.append(n)
  print(expected_residue_count,residue_count)
  assert expected_residue_count == residue_count

  # Now process and use pae model and pae model file
  print("\nProcessing and splitting model into domains with pae", file = log)


  params.process_predicted_model.maximum_fraction_close = 0.5
  params.process_predicted_model.b_value_field_is = 'plddt'
  params.process_predicted_model.remove_low_confidence_residues = True
  params.process_predicted_model.maximum_rmsd = 0.7
  params.process_predicted_model.split_model_by_compact_regions = True
  params.process_predicted_model.maximum_domains = 3
  params.process_predicted_model.pae_power= 2
  model_info = process_predicted_model(pae_m,  params, pae_matrix = pae_matrix,
     log = log)

def tst_02(log = sys.stdout):


  # Split into domains with chunks
  print("\nSplitting into domains with chunks",
    file = log)

  dm = DataManager()
  dm.set_overwrite(True)
  model = dm.get_model(model_file)
  model.add_crystal_symmetry_if_necessary()

  # Check splitting model into domains
  print("\nSplitting model into domains", file = log)
  model_info = split_model_into_compact_units(model,
      break_into_chunks_if_length_is = model.overall_counts().n_residues,
      chunk_size = 70,
      overlap_size =  50,
      adjust_domain_size = True,
      maximum_fraction_close = 0.5, log = log)

  chainid_list = model_info.chainid_list
  print("Segments found: %s" %(" ".join(chainid_list)), file = log)
  assert len(chainid_list) == 2

def tst_03():
  from mmtbx.process_predicted_model import restore_true_except_at_ends
  from scitbx.array_family import flex
  a = flex.bool((0,0,0,1,0,1,1,0,0,0,1,1,1,0,0))
  restore_true_except_at_ends(a)
  print(list(a))
  assert list(a) == [False, False, False, True, True, True, True, True, True, True, True, True, True, False, False]

def tst_04(log = sys.stdout):


  # Run on model with multiple chain IDs
  print("\nModel with multiple chain IDs",
    file = log)

  # two_chains_model_file

  # Check splitting model into domains
  print("\nSplitting model with 2 chains into domains", file = log)

  try:
    from iotbx.cli_parser import run_program
    from mmtbx.programs import process_predicted_model as run
  except Exception as e:
    print("process_predicted_model not available...skipping")
    return

  args = "%s minimum_domain_length=10 minimum_sequential_residues=5 pae_power=1 pae_cutoff=5 pae_graph_resolution=0.5" %(two_chains_model_file)



  args = args.split()

  pp = run_program(program_class=run.Program,args=args)
  assert pp.processed_model.overall_counts().n_residues == 172
  assert pp.processed_model.chain_ids() == ['B1','B2']

if __name__ == "__main__":

  t0 = time.time()
  tst_01()
  tst_02()
  tst_03()
  tst_04()
  print ("Time:", time.time()-t0)
  print ("OK")


 *******************************************************************************


 *******************************************************************************
mmtbx/regression/tst_process_predicted_model_cif.py
from __future__ import division, print_function
import sys, os, time

from libtbx.test_utils import approx_equal
import iotbx.phil

import libtbx.load_env
data_dir = libtbx.env.under_dist(
  module_name="mmtbx",
  path=os.path.join("regression","pdbs"),
  test=os.path.isdir)

pae_data_dir = libtbx.env.under_dist(
  module_name="mmtbx",
  path="regression",
  test=os.path.isdir)

from iotbx.data_manager import DataManager
from mmtbx.process_predicted_model import split_model_into_compact_units, \
   get_cutoff_b_value, \
   get_b_values_from_plddt, get_rmsd_from_plddt, \
   process_predicted_model, master_phil_str, get_plddt_from_b

from mmtbx.domains_from_pae import parse_pae_file
master_phil = iotbx.phil.parse(master_phil_str)
params = master_phil.extract()

# NOTE: Slightly different results from .pdb version because of rounding
#  carried out (2 digits for b_value) when pdb hierarchy is converted
#  to pdb_input through #  formatted string, but mmcif string
#  (required by the long chain name
#   used in this test) rounds to 5 digits.  Happens to make a difference
#  in this test.

# For these tests, use defaults from original version of process_predicted_model
params.process_predicted_model.minimum_domain_length = 10
params.process_predicted_model.minimum_sequential_residues = 5
params.process_predicted_model.pae_power = 1
params.process_predicted_model.pae_cutoff = 5
params.process_predicted_model.pae_graph_resolution = 0.5

model_file=os.path.join(data_dir,'fibronectin_af_ca_1358_1537.cif')
pae_model_file=os.path.join(data_dir,'pae_model.cif')
pae_file=os.path.join(pae_data_dir,'pae.json')

def tst_01(log = sys.stdout):


  # Check calculations of conversion between rmsd, plddt , and B values
  print("\nChecking conversions between rmsd, plddt and B-values", file = log)
  for maximum_rmsd, minimum_plddt, target_b in [
       (1.5, None, 59.2175263686),
       (None,0.7,59.2175263686),
       (1.5,0.7,59.2175263686),
       (1.0, None, 26.3189006083),
       (None,0.5,293.306328196),]:
    print()
    cutoff_b = get_cutoff_b_value(
      maximum_rmsd,
      minimum_plddt,
      log = log)
    print("maximum_rmsd: %s min plddt %s Cutoff B:  %.2f" %(
     maximum_rmsd, minimum_plddt,
     cutoff_b), file = log)
    assert approx_equal(cutoff_b, target_b)


  # Read in alphafold model and get pLDDT from B-value field
  print("\nReading in alphafold model with plddt values in B-value field",
    file = log)

  dm = DataManager()
  dm.set_overwrite(True)
  m = dm.get_model(model_file)
  pae_m = dm.get_model(pae_model_file)
  pae_matrix = parse_pae_file(pae_file)

  plddt_values = m.get_hierarchy().atoms().extract_b().deep_copy()
  print("\npLDDT mean:",plddt_values.min_max_mean().mean)
  assert approx_equal(plddt_values.min_max_mean().mean, 82.5931111111)

  # Multiply plddt_values by 0.01 (fractional)
  fractional_plddt = plddt_values * 0.01

  #  Convert plddt to b
  b_values = get_b_values_from_plddt(plddt_values)
  print("B-value mean:",b_values.min_max_mean().mean)
  assert approx_equal(b_values.min_max_mean().mean, 24.7254093338)

  # Convert b to plddt
  plddt = get_plddt_from_b(b_values)
  assert approx_equal(plddt,fractional_plddt)
  plddt = get_plddt_from_b(b_values, input_plddt_is_fractional=False)
  assert approx_equal(plddt,plddt_values)

  # Convert  plddt to rmsd
  rmsd_values = get_rmsd_from_plddt(plddt_values)
  print("RMSD mean:",rmsd_values.min_max_mean().mean)
  assert approx_equal(rmsd_values.min_max_mean().mean, 0.93559254135)

  # use process_predicted_model to convert plddt or rmsd to B return with
  #  mark_atoms_to_ignore_with_occ_zero

  print("\nConverting plddt to B values and using mark_atoms_to_ignore_with_occ_zero", file = log)
  params.process_predicted_model.maximum_fraction_close = 0.5
  params.process_predicted_model.b_value_field_is = 'plddt'
  params.process_predicted_model.remove_low_confidence_residues = True
  params.process_predicted_model.maximum_rmsd = 1.5
  params.process_predicted_model.split_model_by_compact_regions = True
  params.process_predicted_model.maximum_domains = 3

  model_info = process_predicted_model(m, params, mark_atoms_to_keep_with_occ_one= True)
  models = model_info.model_list
  for mm,vrms,target_vrms,n1,n2 in zip(models,model_info.vrms_list,[1.1855925413499029,1.1855925413499029],[85,87],[95,93]):
    model_occ_values = mm.get_hierarchy().atoms().extract_occ()
    assert model_occ_values.count(1) == n1
    assert model_occ_values.count(0) == n2
    assert approx_equal(vrms, target_vrms, eps=0.01)

  # use process_predicted_model to convert plddt or rmsd to B

  print("\nConverting plddt to B values", file = log)
  params.process_predicted_model.maximum_fraction_close = 0.5
  params.process_predicted_model.b_value_field_is = 'plddt'
  params.process_predicted_model.remove_low_confidence_residues = False
  params.process_predicted_model.split_model_by_compact_regions = False
  params.process_predicted_model.input_plddt_is_fractional = None

  model_info = process_predicted_model(m, params)
  model = model_info.model
  model_b_values = model.get_hierarchy().atoms().extract_b()
  assert approx_equal(b_values, model_b_values, eps = 0.02) # come back rounded


  print("\nConverting fractional plddt to B values", file = log)
  ph = model.get_hierarchy().deep_copy()
  ph.atoms().set_b(fractional_plddt)
  test_model = model.as_map_model_manager().model_from_hierarchy(ph,
     return_as_model = True)
  params.process_predicted_model.maximum_fraction_close = 0.5
  params.process_predicted_model.b_value_field_is = 'plddt'
  params.process_predicted_model.remove_low_confidence_residues = False
  params.process_predicted_model.split_model_by_compact_regions = False
  params.process_predicted_model.input_plddt_is_fractional = None
  model_info = process_predicted_model(test_model, params)
  model = model_info.model
  model_b_values = model.get_hierarchy().atoms().extract_b()
  assert approx_equal(b_values, model_b_values, eps = 3) # come back very rounded

  ph = model.get_hierarchy().deep_copy()
  ph.atoms().set_b(rmsd_values)
  test_model = model.as_map_model_manager().model_from_hierarchy(ph,
     return_as_model = True)

  print("\nConverting rmsd to B values", file = log)
  params.process_predicted_model.maximum_fraction_close = 0.5
  params.process_predicted_model.b_value_field_is = 'rmsd'
  params.process_predicted_model.remove_low_confidence_residues = False
  params.process_predicted_model.split_model_by_compact_regions = False
  params.process_predicted_model.input_plddt_is_fractional = None
  model_info = process_predicted_model(test_model, params)
  model = model_info.model
  model_b_values = model.get_hierarchy().atoms().extract_b()
  assert approx_equal(b_values, model_b_values, eps = 0.5) # come back rounded

  print("B-values > 59: %s of %s" %(
     (model_b_values > 59).count(True), model_b_values.size()), file = log)

  print("\nConverting rmsd to B values and selecting rmsd < 1.5", file = log)
  params.process_predicted_model.maximum_fraction_close = 0.5
  params.process_predicted_model.b_value_field_is = 'rmsd'
  params.process_predicted_model.remove_low_confidence_residues = True
  params.process_predicted_model.maximum_rmsd = 1.5
  params.process_predicted_model.split_model_by_compact_regions = False
  params.process_predicted_model.input_plddt_is_fractional = None

  model_info = process_predicted_model(test_model, params)
  model = model_info.model
  print("Residues before: %s   After: %s " %(
    test_model.get_hierarchy().overall_counts().n_residues,
    model.get_hierarchy().overall_counts().n_residues,), file = log)

  # Check splitting model into domains
  print("\nSplitting model into domains", file = log)
  model_info = split_model_into_compact_units(model,
      adjust_domain_size = False,
      maximum_fraction_close = 0.5, log = log)

  chainid_list = model_info.chainid_list
  print("Segments found: %s" %(" ".join(chainid_list)), file = log)
  assert len(chainid_list) == 1, len(chainid_list)

  # Check processing and splitting model into domains, adjusting domain size automatically
  print("\nProcessing and splitting model into domains", file = log)

  params.process_predicted_model.maximum_fraction_close = 0.5
  params.process_predicted_model.b_value_field_is = 'plddt'
  params.process_predicted_model.remove_low_confidence_residues = True
  params.process_predicted_model.maximum_rmsd = 1.5
  params.process_predicted_model.split_model_by_compact_regions = True
  params.process_predicted_model.maximum_domains = 3
  params.process_predicted_model.adjust_domain_size = True
  model_info = process_predicted_model(m,  params, log = log)

  chainid_list = model_info.chainid_list
  print("Segments found: %s" %(" ".join(chainid_list)), file = log)
  assert len(chainid_list) == 2


  mmm = model_info.model.as_map_model_manager()
  mmm.write_model('model_with_groupings.cif', format = 'cif')
  residue_count = []
  expected_residue_count =  [85, 87]
  for chainid in chainid_list:
    selection_string = "chain %s" %(chainid)
    ph = model_info.model.get_hierarchy()
    asc1 = ph.atom_selection_cache()
    sel = asc1.selection(selection_string)
    m1 = model_info.model.select(sel)
    n = m1.get_hierarchy().overall_counts().n_residues
    print("Residues in %s: %s" %(
      selection_string, n),
       file = log)
    residue_count.append(n)
  assert expected_residue_count == residue_count

  # Check processing and splitting model into domains
  print("\nProcessing and splitting model into domains without adjusting domain size", file = log)

  params.process_predicted_model.maximum_fraction_close = 0.5
  params.process_predicted_model.b_value_field_is = 'plddt'
  params.process_predicted_model.remove_low_confidence_residues = True
  params.process_predicted_model.maximum_rmsd = 1.5
  params.process_predicted_model.split_model_by_compact_regions = True
  params.process_predicted_model.maximum_domains = 3
  params.process_predicted_model.adjust_domain_size = False
  model_info = process_predicted_model(m,  params, log = log)

  chainid_list = model_info.chainid_list
  print("Segments found: %s" %(" ".join(chainid_list)), file = log)
  assert len(chainid_list) == 1


  mmm = model_info.model.as_map_model_manager()
  mmm.write_model('model_with_groupings.cif',format = 'cif')
  residue_count = []
  expected_residue_count =  [172]
  for chainid in chainid_list:
    selection_string = "chain %s" %(chainid)
    ph = model_info.model.get_hierarchy()
    asc1 = ph.atom_selection_cache()
    sel = asc1.selection(selection_string)
    m1 = model_info.model.select(sel)
    n = m1.get_hierarchy().overall_counts().n_residues
    print("Residues in %s: %s" %(
      selection_string, n),
       file = log)
    residue_count.append(n)
  assert expected_residue_count == residue_count

  # Now process and use pae model and pae model file
  print("\nProcessing and splitting model into domains with pae", file = log)


  params.process_predicted_model.maximum_fraction_close = 0.5
  params.process_predicted_model.b_value_field_is = 'plddt'
  params.process_predicted_model.remove_low_confidence_residues = True
  params.process_predicted_model.maximum_rmsd = 0.7
  params.process_predicted_model.split_model_by_compact_regions = True
  params.process_predicted_model.maximum_domains = 3
  params.process_predicted_model.pae_power= 2
  model_info = process_predicted_model(pae_m,  params, pae_matrix = pae_matrix,
     log = log)

def tst_02(log = sys.stdout):


  # Split into domains with chunks
  print("\nSplitting into domains with chunks",
    file = log)

  dm = DataManager()
  dm.set_overwrite(True)
  model = dm.get_model(model_file)
  model.add_crystal_symmetry_if_necessary()

  # Check splitting model into domains
  print("\nSplitting model into domains", file = log)
  model_info = split_model_into_compact_units(model,
      break_into_chunks_if_length_is = model.overall_counts().n_residues,
      chunk_size = 70,
      overlap_size =  50,
      adjust_domain_size = True,
      maximum_fraction_close = 0.5, log = log)

  chainid_list = model_info.chainid_list
  print("Segments found: %s" %(" ".join(chainid_list)), file = log)
  assert len(chainid_list) == 2

if __name__ == "__main__":

  t0 = time.time()
  tst_01()
  tst_02()
  print ("Time:", time.time()-t0)
  print ("OK")


 *******************************************************************************


 *******************************************************************************
mmtbx/regression/tst_prune_model.py
from __future__ import absolute_import, division, print_function

import libtbx.load_env
from libtbx import easy_run
import os

def exercise():
  pdb_file = libtbx.env.find_in_repositories(
    relative_path="phenix_regression/pdb/prune.pdb",
    test=os.path.isfile)
  mtz_file = libtbx.env.find_in_repositories(
    relative_path="phenix_regression/reflection_files/prune_data.mtz",
    test=os.path.isfile)
  if (None in [pdb_file, mtz_file]):
    print("Input files not found, skipping test")
    return
  cmd = "mmtbx.prune_model \"%s\" \"%s\" mainchain=True" % (pdb_file, mtz_file)
  result = easy_run.fully_buffered(cmd).raise_if_errors()
  if (not "Removed 3 residues and 1 sidechains" in result.stdout_lines):
    raise RuntimeError(("Program output differs from expected - last 20 lines "+
      "shown below:\n\n%s") % "\n".join(result.stdout_lines[-20:]))

if (__name__ == "__main__"):
  exercise()
  print("OK")


 *******************************************************************************


 *******************************************************************************
mmtbx/regression/tst_psi_phi_extraction.py
from __future__ import absolute_import, division, print_function
from scitbx.array_family import flex
import iotbx.pdb
from mmtbx.conformation_dependent_library import generate_protein_threes
from six.moves import range

rec_1_residue = """\
CRYST1   41.566   72.307   92.870 108.51  93.02  90.06 P 1           4
ATOM   5466  N   ASN C 236      17.899  72.943  29.028  1.00 60.13           N
ATOM   5467  CA  ASN C 236      16.519  72.435  29.114  1.00 60.52           C
ATOM   5468  C   ASN C 236      16.377  70.925  29.327  1.00 60.49           C
ATOM   5469  O   ASN C 236      15.429  70.294  28.863  1.00 60.60           O
ATOM   5470  CB  ASN C 236      15.689  72.896  27.916  1.00 60.55           C
ATOM   5471  CG  ASN C 236      14.357  73.447  28.338  1.00 61.75           C
ATOM   5472  OD1 ASN C 236      14.256  74.609  28.768  1.00 62.86           O
ATOM   5473  ND2 ASN C 236      13.319  72.616  28.247  1.00 61.22           N
"""

rec_2_residues = """\
CRYST1   41.566   72.307   92.870 108.51  93.02  90.06 P 1           4
ATOM   5466  N   ASN C 236      17.899  72.943  29.028  1.00 60.13           N
ATOM   5467  CA  ASN C 236      16.519  72.435  29.114  1.00 60.52           C
ATOM   5468  C   ASN C 236      16.377  70.925  29.327  1.00 60.49           C
ATOM   5469  O   ASN C 236      15.429  70.294  28.863  1.00 60.60           O
ATOM   5470  CB  ASN C 236      15.689  72.896  27.916  1.00 60.55           C
ATOM   5471  CG  ASN C 236      14.357  73.447  28.338  1.00 61.75           C
ATOM   5472  OD1 ASN C 236      14.256  74.609  28.768  1.00 62.86           O
ATOM   5473  ND2 ASN C 236      13.319  72.616  28.247  1.00 61.22           N
ATOM   5474  N   LEU C 237      17.316  70.364  30.068  1.00 60.55           N
ATOM   5475  CA  LEU C 237      17.444  68.931  30.166  1.00 60.48           C
ATOM   5476  C   LEU C 237      17.815  68.555  31.581  1.00 60.06           C
ATOM   5477  O   LEU C 237      17.335  67.547  32.097  1.00 60.41           O
ATOM   5478  CB  LEU C 237      18.518  68.464  29.178  1.00 60.91           C
ATOM   5479  CG  LEU C 237      18.542  67.095  28.491  1.00 62.25           C
ATOM   5480  CD1 LEU C 237      17.407  66.153  28.923  1.00 63.18           C
ATOM   5481  CD2 LEU C 237      18.563  67.309  26.965  1.00 62.89           C
"""

rec_3_residues = """
CRYST1   69.211   49.956   52.557  90.00  90.00  90.00 P 1
ATOM      1  N   THR A   3      51.193  44.956  23.993  1.00 80.52           N
ATOM      2  CA  THR A   3      50.812  43.732  23.211  1.00 80.52           C
ATOM      4  CB  THR A   3      50.446  42.559  24.181  1.00 79.62           C
ATOM      6  OG1 THR A   3      50.206  41.358  23.433  1.00 79.62           O
ATOM      8  CG2 THR A   3      49.239  42.888  25.066  1.00 79.62           C
ATOM     12  C   THR A   3      49.657  44.014  22.221  1.00 80.52           C
ATOM     13  O   THR A   3      48.520  44.223  22.631  1.00 80.52           O
ATOM     17  N   GLY A   4      49.963  44.013  20.917  1.00 79.31           N
ATOM     18  CA  GLY A   4      49.030  44.458  19.892  1.00 79.31           C
ATOM     21  C   GLY A   4      48.761  43.480  18.761  1.00 79.31           C
ATOM     22  O   GLY A   4      47.790  42.725  18.808  1.00 79.31           O
ATOM     24  N   ALA A   5      49.581  43.499  17.715  1.00 78.81           N
ATOM     25  CA  ALA A   5      49.395  42.604  16.581  1.00 78.81           C
ATOM     27  CB  ALA A   5      49.774  43.314  15.283  1.00 77.40           C
ATOM     31  C   ALA A   5      50.195  41.315  16.714  1.00 78.81           C
ATOM     32  O   ALA A   5      50.258  40.537  15.757  1.00 78.81           O
"""

rec_4_residues = """
CRYST1   69.211   49.956   52.557  90.00  90.00  90.00 P 1
ATOM      1  N   THR A   3      51.193  44.956  23.993  1.00 80.52           N
ATOM      2  CA  THR A   3      50.812  43.732  23.211  1.00 80.52           C
ATOM      4  CB  THR A   3      50.446  42.559  24.181  1.00 79.62           C
ATOM      6  OG1 THR A   3      50.206  41.358  23.433  1.00 79.62           O
ATOM      8  CG2 THR A   3      49.239  42.888  25.066  1.00 79.62           C
ATOM     12  C   THR A   3      49.657  44.014  22.221  1.00 80.52           C
ATOM     13  O   THR A   3      48.520  44.223  22.631  1.00 80.52           O
ATOM     17  N   GLY A   4      49.963  44.013  20.917  1.00 79.31           N
ATOM     18  CA  GLY A   4      49.030  44.458  19.892  1.00 79.31           C
ATOM     21  C   GLY A   4      48.761  43.480  18.761  1.00 79.31           C
ATOM     22  O   GLY A   4      47.790  42.725  18.808  1.00 79.31           O
ATOM     24  N   ALA A   5      49.581  43.499  17.715  1.00 78.81           N
ATOM     25  CA  ALA A   5      49.395  42.604  16.581  1.00 78.81           C
ATOM     27  CB  ALA A   5      49.774  43.314  15.283  1.00 77.40           C
ATOM     31  C   ALA A   5      50.195  41.315  16.714  1.00 78.81           C
ATOM     32  O   ALA A   5      50.258  40.537  15.757  1.00 78.81           O
ATOM     34  N   GLN A   6      50.816  41.073  17.872  1.00 80.55           N
ATOM     35  CA  GLN A   6      51.642  39.880  18.018  1.00 80.55           C
ATOM     37  CB  GLN A   6      52.383  39.879  19.354  1.00 79.84           C
ATOM     40  CG  GLN A   6      53.264  41.072  19.596  1.00 79.84           C
ATOM     43  CD  GLN A   6      52.490  42.211  20.225  1.00 79.84           C
ATOM     44  OE1 GLN A   6      51.290  42.091  20.489  1.00 79.84           O
ATOM     45  NE2 GLN A   6      53.167  43.325  20.468  1.00 79.84           N
ATOM     48  C   GLN A   6      50.788  38.631  17.945  1.00 80.55           C
ATOM     49  O   GLN A   6      51.148  37.659  17.273  1.00 80.55           O
"""

rec_2_chains = """
CRYST1   49.945   53.842   33.425  90.00  90.00  90.00 P 1
ATOM   5466  N   ASN C 236      10.328  45.698  25.449  1.00 60.13           N
ATOM   5467  CA  ASN C 236       8.971  45.973  25.787  1.00 60.52           C
ATOM   5468  C   ASN C 236       8.271  44.664  25.724  1.00 60.49           C
ATOM   5469  O   ASN C 236       7.276  44.532  25.017  1.00 60.60           O
ATOM   5470  CB  ASN C 236       8.337  46.962  24.776  1.00 60.55           C
ATOM   5471  CG  ASN C 236       7.235  47.762  25.415  1.00 61.75           C
ATOM   5472  OD1 ASN C 236       6.331  47.222  26.063  1.00 62.86           O
ATOM   5473  ND2 ASN C 236       7.315  49.079  25.302  1.00 61.22           N
ATOM   5474  N   LEU C 237       8.820  43.663  26.441  1.00 60.55           N
ATOM   5475  CA  LEU C 237       8.420  42.305  26.286  1.00 60.48           C
ATOM   5476  C   LEU C 237       8.713  41.508  27.558  1.00 60.06           C
ATOM   5477  O   LEU C 237       7.907  41.421  28.503  1.00 60.41           O
ATOM   5478  CB  LEU C 237       9.159  41.598  25.114  1.00 60.91           C
ATOM   5479  CG  LEU C 237       9.365  42.136  23.662  1.00 62.25           C
ATOM   5480  CD1 LEU C 237      10.605  42.996  23.496  1.00 63.18           C
ATOM   5481  CD2 LEU C 237       9.419  40.966  22.765  1.00 62.89           C
TER
ATOM      1  N   THR A   3      40.527  19.363  20.612  1.00 80.52           N
ATOM      2  CA  THR A   3      41.278  18.625  19.636  1.00 80.52           C
ATOM      4  CB  THR A   3      40.971  17.090  19.710  1.00 79.62           C
ATOM      6  OG1 THR A   3      40.039  16.849  20.760  1.00 79.62           O
ATOM      8  CG2 THR A   3      42.308  16.246  19.999  1.00 79.62           C
ATOM     12  C   THR A   3      40.899  19.134  18.229  1.00 80.52           C
ATOM     13  O   THR A   3      39.780  19.542  17.983  1.00 80.52           O
ATOM     17  N   GLY A   4      41.890  19.246  17.384  1.00 79.31           N
ATOM     18  CA  GLY A   4      41.732  19.850  16.092  1.00 79.31           C
ATOM     21  C   GLY A   4      41.306  18.930  14.985  1.00 79.31           C
ATOM     22  O   GLY A   4      40.121  18.885  14.657  1.00 79.31           O
"""

rec_2_segids = """
CRYST1   49.945   53.842   33.425  90.00  90.00  90.00 P 1
ATOM   5466  N   ASN A 236      10.328  45.698  25.449  1.00 60.13           N
ATOM   5467  CA  ASN A 236       8.971  45.973  25.787  1.00 60.52           C
ATOM   5468  C   ASN A 236       8.271  44.664  25.724  1.00 60.49           C
ATOM   5469  O   ASN A 236       7.276  44.532  25.017  1.00 60.60           O
ATOM   5470  CB  ASN A 236       8.337  46.962  24.776  1.00 60.55           C
ATOM   5471  CG  ASN A 236       7.235  47.762  25.415  1.00 61.75           C
ATOM   5472  OD1 ASN A 236       6.331  47.222  26.063  1.00 62.86           O
ATOM   5473  ND2 ASN A 236       7.315  49.079  25.302  1.00 61.22           N
ATOM   5474  N   LEU A 237       8.820  43.663  26.441  1.00 60.55           N
ATOM   5475  CA  LEU A 237       8.420  42.305  26.286  1.00 60.48           C
ATOM   5476  C   LEU A 237       8.713  41.508  27.558  1.00 60.06           C
ATOM   5477  O   LEU A 237       7.907  41.421  28.503  1.00 60.41           O
ATOM   5478  CB  LEU A 237       9.159  41.598  25.114  1.00 60.91           C
ATOM   5479  CG  LEU A 237       9.365  42.136  23.662  1.00 62.25           C
ATOM   5480  CD1 LEU A 237      10.605  42.996  23.496  1.00 63.18           C
ATOM   5481  CD2 LEU A 237       9.419  40.966  22.765  1.00 62.89           C
TER
ATOM      1  N   THR A   3      40.527  19.363  20.612  1.00 80.52      seg  N
ATOM      2  CA  THR A   3      41.278  18.625  19.636  1.00 80.52      seg  C
ATOM      4  CB  THR A   3      40.971  17.090  19.710  1.00 79.62      seg  C
ATOM      6  OG1 THR A   3      40.039  16.849  20.760  1.00 79.62      seg  O
ATOM      8  CG2 THR A   3      42.308  16.246  19.999  1.00 79.62      seg  C
ATOM     12  C   THR A   3      40.899  19.134  18.229  1.00 80.52      seg  C
ATOM     13  O   THR A   3      39.780  19.542  17.983  1.00 80.52      seg  O
ATOM     17  N   GLY A   4      41.890  19.246  17.384  1.00 79.31      seg  N
ATOM     18  CA  GLY A   4      41.732  19.850  16.092  1.00 79.31      seg  C
ATOM     21  C   GLY A   4      41.306  18.930  14.985  1.00 79.31      seg  C
ATOM     22  O   GLY A   4      40.121  18.885  14.657  1.00 79.31      seg  O
"""

rec_2_acs_edge = """
CRYST1   69.211   49.956   52.557  90.00  90.00  90.00 P 1
ATOM      1  N   THR A   3      51.193  44.956  23.993  1.00 80.52           N
ATOM      2  CA  THR A   3      50.812  43.732  23.211  1.00 80.52           C
ATOM      3  CB  THR A   3      50.446  42.559  24.181  1.00 79.62           C
ATOM      4  OG1 THR A   3      50.206  41.358  23.433  1.00 79.62           O
ATOM      5  CG2 THR A   3      49.239  42.888  25.066  1.00 79.62           C
ATOM      6  C   THR A   3      49.657  44.014  22.221  1.00 80.52           C
ATOM      7  O   THR A   3      48.520  44.223  22.631  1.00 80.52           O
ATOM      8  N   GLY A   4      49.963  44.013  20.917  1.00 79.31           N
ATOM      9  CA  GLY A   4      49.030  44.458  19.892  1.00 79.31           C
ATOM     10  C   GLY A   4      48.761  43.480  18.761  1.00 79.31           C
ATOM     11  O   GLY A   4      47.790  42.725  18.808  1.00 79.31           O
ATOM     12  N  AALA A   5      49.581  43.499  17.715  0.50 78.81           N
ATOM     13  CA AALA A   5      49.395  42.604  16.581  0.50 78.81           C
ATOM     14  CB AALA A   5      49.774  43.314  15.283  0.50 77.40           C
ATOM     15  C  AALA A   5      50.195  41.315  16.714  0.50 78.81           C
ATOM     16  O  AALA A   5      50.258  40.537  15.757  0.50 78.81           O
ATOM     17  N  BALA A   5      49.681  43.499  17.715  0.50 78.81           N
ATOM     18  CA BALA A   5      49.495  42.604  16.581  0.50 78.81           C
ATOM     19  CB BALA A   5      49.874  43.314  15.283  0.50 77.40           C
ATOM     20  C  BALA A   5      50.295  41.315  16.714  0.50 78.81           C
ATOM     21  O  BALA A   5      50.358  40.537  15.757  0.50 78.81           O
END
"""

rec_2_acs_middle = """
CRYST1   69.211   49.956   52.557  90.00  90.00  90.00 P 1
ATOM      1  N   THR A   3      51.193  44.956  23.993  1.00 80.52           N
ATOM      2  CA  THR A   3      50.812  43.732  23.211  1.00 80.52           C
ATOM      3  CB  THR A   3      50.446  42.559  24.181  1.00 79.62           C
ATOM      4  OG1 THR A   3      50.206  41.358  23.433  1.00 79.62           O
ATOM      5  CG2 THR A   3      49.239  42.888  25.066  1.00 79.62           C
ATOM      6  C   THR A   3      49.657  44.014  22.221  1.00 80.52           C
ATOM      7  O   THR A   3      48.520  44.223  22.631  1.00 80.52           O
ATOM      8  N  AGLY A   4      49.963  44.013  20.917  0.50 79.31           N
ATOM      9  CA AGLY A   4      49.030  44.458  19.892  0.50 79.31           C
ATOM     10  C  AGLY A   4      48.761  43.480  18.761  0.50 79.31           C
ATOM     11  O  AGLY A   4      47.790  42.725  18.808  0.50 79.31           O
ATOM     12  N  BGLY A   4      50.063  44.013  20.917  0.50 79.31           N
ATOM     13  CA BGLY A   4      49.130  44.458  19.892  0.50 79.31           C
ATOM     14  C  BGLY A   4      48.861  43.480  18.761  0.50 79.31           C
ATOM     15  O  BGLY A   4      47.890  42.725  18.808  0.50 79.31           O
ATOM     16  N   ALA A   5      49.581  43.499  17.715  1.00 78.81           N
ATOM     17  CA  ALA A   5      49.395  42.604  16.581  1.00 78.81           C
ATOM     18  CB  ALA A   5      49.774  43.314  15.283  1.00 77.40           C
ATOM     19  C   ALA A   5      50.195  41.315  16.714  1.00 78.81           C
ATOM     20  O   ALA A   5      50.258  40.537  15.757  1.00 78.81           O
END
"""
rec_2_acs_middle_one_atom_1 = """
CRYST1   69.211   49.956   52.557  90.00  90.00  90.00 P 1
ATOM      1  N   THR A   3      51.193  44.956  23.993  1.00 80.52           N
ATOM      2  CA  THR A   3      50.812  43.732  23.211  1.00 80.52           C
ATOM      3  CB  THR A   3      50.446  42.559  24.181  1.00 79.62           C
ATOM      4  OG1 THR A   3      50.206  41.358  23.433  1.00 79.62           O
ATOM      5  CG2 THR A   3      49.239  42.888  25.066  1.00 79.62           C
ATOM      6  C   THR A   3      49.657  44.014  22.221  1.00 80.52           C
ATOM      7  O   THR A   3      48.520  44.223  22.631  1.00 80.52           O
ATOM      8  N  AGLY A   4      49.963  44.013  20.917  0.50 79.31           N
ATOM      9  N  BGLY A   4      50.063  44.013  20.917  0.50 79.31           N
ATOM     10  CA  GLY A   4      49.030  44.458  19.892  0.50 79.31           C
ATOM     11  C   GLY A   4      48.761  43.480  18.761  0.50 79.31           C
ATOM     12  O   GLY A   4      47.790  42.725  18.808  0.50 79.31           O
ATOM     16  N   ALA A   5      49.581  43.499  17.715  1.00 78.81           N
ATOM     17  CA  ALA A   5      49.395  42.604  16.581  1.00 78.81           C
ATOM     18  CB  ALA A   5      49.774  43.314  15.283  1.00 77.40           C
ATOM     19  C   ALA A   5      50.195  41.315  16.714  1.00 78.81           C
ATOM     20  O   ALA A   5      50.258  40.537  15.757  1.00 78.81           O
END
"""
rec_2_acs_middle_one_atom_2 = """
CRYST1   69.211   49.956   52.557  90.00  90.00  90.00 P 1
ATOM      1  N   THR A   3      51.193  44.956  23.993  1.00 80.52           N
ATOM      2  CA  THR A   3      50.812  43.732  23.211  1.00 80.52           C
ATOM      3  CB  THR A   3      50.446  42.559  24.181  1.00 79.62           C
ATOM      4  OG1 THR A   3      50.206  41.358  23.433  1.00 79.62           O
ATOM      5  CG2 THR A   3      49.239  42.888  25.066  1.00 79.62           C
ATOM      6  C   THR A   3      49.657  44.014  22.221  1.00 80.52           C
ATOM      7  O   THR A   3      48.520  44.223  22.631  1.00 80.52           O
ATOM      8  N   GLY A   4      49.963  44.013  20.917  0.50 79.31           N
ATOM      9  CA AGLY A   4      49.030  44.458  19.892  0.50 79.31           C
ATOM     13  CA BGLY A   4      49.130  44.458  19.892  0.50 79.31           C
ATOM     10  C   GLY A   4      48.761  43.480  18.761  0.50 79.31           C
ATOM     11  O   GLY A   4      47.790  42.725  18.808  0.50 79.31           O
ATOM     16  N   ALA A   5      49.581  43.499  17.715  1.00 78.81           N
ATOM     17  CA  ALA A   5      49.395  42.604  16.581  1.00 78.81           C
ATOM     18  CB  ALA A   5      49.774  43.314  15.283  1.00 77.40           C
ATOM     19  C   ALA A   5      50.195  41.315  16.714  1.00 78.81           C
ATOM     20  O   ALA A   5      50.258  40.537  15.757  1.00 78.81           O
END
"""
rec_2_acs_middle_one_atom_3 = """\
CRYST1   72.072   33.173   34.033  90.00  90.00  90.00 P 1
SCALE1      0.013875  0.000000  0.000000        0.00000
SCALE2      0.000000  0.030145  0.000000        0.00000
SCALE3      0.000000  0.000000  0.029383        0.00000
ATOM    519  N   HIS B   1       5.000   8.515  18.112  1.00 20.00           N
ATOM    520  CA  HIS B   1       5.999   8.713  17.074  1.00 20.00           C
ATOM    521  C   HIS B   1       7.157   9.627  17.517  1.00 20.00           C
ATOM    522  O   HIS B   1       8.302   9.165  17.614  1.00 20.00           O
ATOM    523  CB  HIS B   1       5.315   9.226  15.797  1.00 20.00           C
ATOM    524  HA  HIS B   1       6.434   7.742  16.835  1.00 20.00           H
ATOM    525  N   TRP B   2       6.845  10.900  17.805  1.00 20.00           N
ATOM    526  CA ATRP B   2       7.853  11.954  18.083  0.50 20.00           C
ATOM    556  CA BTRP B   2       7.453  11.454  18.083  0.50 20.00           C
ATOM    527  C   TRP B   2       8.071  12.262  19.565  1.00 20.00           C
ATOM    528  O   TRP B   2       8.355  13.406  19.941  1.00 20.00           O
ATOM    529  CB  TRP B   2       7.516  13.257  17.336  1.00 20.00           C
ATOM    530  HA  TRP B   2       8.809  11.606  17.692  1.00 20.00           H
ATOM    531  H  ATRP B   2       5.886  11.243  17.855  0.50 20.00           H
ATOM    532  D  BTRP B   2       5.886  11.243  17.855  0.50 20.00           D
ATOM    533  N   GLU B   3       7.910  11.239  20.396  1.00 20.00           N
ATOM    534  CA  GLU B   3       8.310  11.284  21.798  1.00 20.00           C
ATOM    535  C   GLU B   3       9.344  10.190  21.979  1.00 20.00           C
ATOM    536  O   GLU B   3      10.197  10.267  22.867  1.00 20.00           O
ATOM    537  CB  GLU B   3       7.115  11.041  22.731  1.00 20.00           C
ATOM    538  HA  GLU B   3       8.761  12.248  22.034  1.00 20.00           H
ATOM    539  H  AGLU B   3       7.474  10.360  20.122  0.50 20.00           H
ATOM    540  D  BGLU B   3       7.474  10.360  20.122  0.50 20.00           D
"""

rec_4_residues_isertions = """
CRYST1   69.211   49.956   52.557  90.00  90.00  90.00 P 1
ATOM      1  N   THR A   3      51.193  44.956  23.993  1.00 80.52           N
ATOM      2  CA  THR A   3      50.812  43.732  23.211  1.00 80.52           C
ATOM      4  CB  THR A   3      50.446  42.559  24.181  1.00 79.62           C
ATOM      6  OG1 THR A   3      50.206  41.358  23.433  1.00 79.62           O
ATOM      8  CG2 THR A   3      49.239  42.888  25.066  1.00 79.62           C
ATOM     12  C   THR A   3      49.657  44.014  22.221  1.00 80.52           C
ATOM     13  O   THR A   3      48.520  44.223  22.631  1.00 80.52           O
ATOM     17  N   GLY A   3A     49.963  44.013  20.917  1.00 79.31           N
ATOM     18  CA  GLY A   3A     49.030  44.458  19.892  1.00 79.31           C
ATOM     21  C   GLY A   3A     48.761  43.480  18.761  1.00 79.31           C
ATOM     22  O   GLY A   3A     47.790  42.725  18.808  1.00 79.31           O
ATOM     24  N   ALA A   3B     49.581  43.499  17.715  1.00 78.81           N
ATOM     25  CA  ALA A   3B     49.395  42.604  16.581  1.00 78.81           C
ATOM     27  CB  ALA A   3B     49.774  43.314  15.283  1.00 77.40           C
ATOM     31  C   ALA A   3B     50.195  41.315  16.714  1.00 78.81           C
ATOM     32  O   ALA A   3B     50.258  40.537  15.757  1.00 78.81           O
ATOM     34  N   GLN A   4      50.816  41.073  17.872  1.00 80.55           N
ATOM     35  CA  GLN A   4      51.642  39.880  18.018  1.00 80.55           C
ATOM     37  CB  GLN A   4      52.383  39.879  19.354  1.00 79.84           C
ATOM     40  CG  GLN A   4      53.264  41.072  19.596  1.00 79.84           C
ATOM     43  CD  GLN A   4      52.490  42.211  20.225  1.00 79.84           C
ATOM     44  OE1 GLN A   4      51.290  42.091  20.489  1.00 79.84           O
ATOM     45  NE2 GLN A   4      53.167  43.325  20.468  1.00 79.84           N
ATOM     48  C   GLN A   4      50.788  38.631  17.945  1.00 80.55           C
ATOM     49  O   GLN A   4      51.148  37.659  17.273  1.00 80.55           O
"""

pdb_1yjp = """
CRYST1   21.937    4.866   23.477  90.00 107.08  90.00 P 1 21 1      2
ATOM      1  N   GLY A   1      -9.009   4.612   6.102  1.00 16.77           N
ATOM      2  CA  GLY A   1      -9.052   4.207   4.651  1.00 16.57           C
ATOM      3  C   GLY A   1      -8.015   3.140   4.419  1.00 16.16           C
ATOM      4  O   GLY A   1      -7.523   2.521   5.381  1.00 16.78           O
ATOM      5  N   ASN A   2      -7.656   2.923   3.155  1.00 15.02           N
ATOM      6  CA  ASN A   2      -6.522   2.038   2.831  1.00 14.10           C
ATOM      7  C   ASN A   2      -5.241   2.537   3.427  1.00 13.13           C
ATOM      8  O   ASN A   2      -4.978   3.742   3.426  1.00 11.91           O
ATOM      9  CB  ASN A   2      -6.346   1.881   1.341  1.00 15.38           C
ATOM     10  CG  ASN A   2      -7.584   1.342   0.692  1.00 14.08           C
ATOM     11  OD1 ASN A   2      -8.025   0.227   1.016  1.00 17.46           O
ATOM     12  ND2 ASN A   2      -8.204   2.155  -0.169  1.00 11.72           N
ATOM     13  N   ASN A   3      -4.438   1.590   3.905  1.00 12.26           N
ATOM     14  CA  ASN A   3      -3.193   1.904   4.589  1.00 11.74           C
ATOM     15  C   ASN A   3      -1.955   1.332   3.895  1.00 11.10           C
ATOM     16  O   ASN A   3      -1.872   0.119   3.648  1.00 10.42           O
ATOM     17  CB  ASN A   3      -3.259   1.378   6.042  1.00 12.15           C
ATOM     18  CG  ASN A   3      -2.006   1.739   6.861  1.00 12.82           C
ATOM     19  OD1 ASN A   3      -1.702   2.925   7.072  1.00 15.05           O
ATOM     20  ND2 ASN A   3      -1.271   0.715   7.306  1.00 13.48           N
ATOM     21  N   GLN A   4      -1.005   2.228   3.598  1.00 10.29           N
ATOM     22  CA  GLN A   4       0.384   1.888   3.199  1.00 10.53           C
ATOM     23  C   GLN A   4       1.435   2.606   4.088  1.00 10.24           C
ATOM     24  O   GLN A   4       1.547   3.843   4.115  1.00  8.86           O
ATOM     25  CB  GLN A   4       0.656   2.148   1.711  1.00  9.80           C
ATOM     26  CG  GLN A   4       1.944   1.458   1.213  1.00 10.25           C
ATOM     27  CD  GLN A   4       2.504   2.044  -0.089  1.00 12.43           C
ATOM     28  OE1 GLN A   4       2.744   3.268  -0.190  1.00 14.62           O
ATOM     29  NE2 GLN A   4       2.750   1.161  -1.091  1.00  9.05           N
ATOM     30  N   GLN A   5       2.154   1.821   4.871  1.00 10.38           N
ATOM     31  CA  GLN A   5       3.270   2.361   5.640  1.00 11.39           C
ATOM     32  C   GLN A   5       4.594   1.768   5.172  1.00 11.52           C
ATOM     33  O   GLN A   5       4.768   0.546   5.054  1.00 12.05           O
ATOM     34  CB  GLN A   5       3.056   2.183   7.147  1.00 11.96           C
ATOM     35  CG  GLN A   5       1.829   2.950   7.647  1.00 10.81           C
ATOM     36  CD  GLN A   5       1.344   2.414   8.954  1.00 13.10           C
ATOM     37  OE1 GLN A   5       0.774   1.325   9.002  1.00 10.65           O
ATOM     38  NE2 GLN A   5       1.549   3.187  10.039  1.00 12.30           N
ATOM     39  N   ASN A   6       5.514   2.664   4.856  1.00 11.99           N
ATOM     40  CA  ASN A   6       6.831   2.310   4.318  1.00 12.30           C
ATOM     41  C   ASN A   6       7.854   2.761   5.324  1.00 13.40           C
ATOM     42  O   ASN A   6       8.219   3.943   5.374  1.00 13.92           O
ATOM     43  CB  ASN A   6       7.065   3.016   2.993  1.00 12.13           C
ATOM     44  CG  ASN A   6       5.961   2.735   2.003  1.00 12.77           C
ATOM     45  OD1 ASN A   6       5.798   1.604   1.551  1.00 14.27           O
ATOM     46  ND2 ASN A   6       5.195   3.747   1.679  1.00 10.07           N
ATOM     47  N   TYR A   7       8.292   1.817   6.147  1.00 14.70           N
ATOM     48  CA  TYR A   7       9.159   2.144   7.299  1.00 15.18           C
ATOM     49  C   TYR A   7      10.603   2.331   6.885  1.00 15.91           C
ATOM     50  O   TYR A   7      11.041   1.811   5.855  1.00 15.76           O
ATOM     51  CB  TYR A   7       9.061   1.065   8.369  1.00 15.35           C
ATOM     52  CG  TYR A   7       7.665   0.929   8.902  1.00 14.45           C
ATOM     53  CD1 TYR A   7       6.771   0.021   8.327  1.00 15.68           C
ATOM     54  CD2 TYR A   7       7.210   1.756   9.920  1.00 14.80           C
ATOM     55  CE1 TYR A   7       5.480  -0.094   8.796  1.00 13.46           C
ATOM     56  CE2 TYR A   7       5.904   1.649  10.416  1.00 14.33           C
ATOM     57  CZ  TYR A   7       5.047   0.729   9.831  1.00 15.09           C
ATOM     58  OH  TYR A   7       3.766   0.589  10.291  1.00 14.39           O
ATOM     59  OXT TYR A   7      11.358   2.999   7.612  1.00 17.49           O
"""

pdb_1yjp_minus_4 = """
CRYST1   21.937    4.866   23.477  90.00 107.08  90.00 P 1 21 1      2
ATOM      1  N   GLY A   1      -9.009   4.612   6.102  1.00 16.77           N
ATOM      2  CA  GLY A   1      -9.052   4.207   4.651  1.00 16.57           C
ATOM      3  C   GLY A   1      -8.015   3.140   4.419  1.00 16.16           C
ATOM      4  O   GLY A   1      -7.523   2.521   5.381  1.00 16.78           O
ATOM      5  N   ASN A   2      -7.656   2.923   3.155  1.00 15.02           N
ATOM      6  CA  ASN A   2      -6.522   2.038   2.831  1.00 14.10           C
ATOM      7  C   ASN A   2      -5.241   2.537   3.427  1.00 13.13           C
ATOM      8  O   ASN A   2      -4.978   3.742   3.426  1.00 11.91           O
ATOM      9  CB  ASN A   2      -6.346   1.881   1.341  1.00 15.38           C
ATOM     10  CG  ASN A   2      -7.584   1.342   0.692  1.00 14.08           C
ATOM     11  OD1 ASN A   2      -8.025   0.227   1.016  1.00 17.46           O
ATOM     12  ND2 ASN A   2      -8.204   2.155  -0.169  1.00 11.72           N
ATOM     13  N   ASN A   3      -4.438   1.590   3.905  1.00 12.26           N
ATOM     14  CA  ASN A   3      -3.193   1.904   4.589  1.00 11.74           C
ATOM     15  C   ASN A   3      -1.955   1.332   3.895  1.00 11.10           C
ATOM     16  O   ASN A   3      -1.872   0.119   3.648  1.00 10.42           O
ATOM     17  CB  ASN A   3      -3.259   1.378   6.042  1.00 12.15           C
ATOM     18  CG  ASN A   3      -2.006   1.739   6.861  1.00 12.82           C
ATOM     19  OD1 ASN A   3      -1.702   2.925   7.072  1.00 15.05           O
ATOM     20  ND2 ASN A   3      -1.271   0.715   7.306  1.00 13.48           N
ATOM     30  N   GLN A   5       2.154   1.821   4.871  1.00 10.38           N
ATOM     31  CA  GLN A   5       3.270   2.361   5.640  1.00 11.39           C
ATOM     32  C   GLN A   5       4.594   1.768   5.172  1.00 11.52           C
ATOM     33  O   GLN A   5       4.768   0.546   5.054  1.00 12.05           O
ATOM     34  CB  GLN A   5       3.056   2.183   7.147  1.00 11.96           C
ATOM     35  CG  GLN A   5       1.829   2.950   7.647  1.00 10.81           C
ATOM     36  CD  GLN A   5       1.344   2.414   8.954  1.00 13.10           C
ATOM     37  OE1 GLN A   5       0.774   1.325   9.002  1.00 10.65           O
ATOM     38  NE2 GLN A   5       1.549   3.187  10.039  1.00 12.30           N
ATOM     39  N   ASN A   6       5.514   2.664   4.856  1.00 11.99           N
ATOM     40  CA  ASN A   6       6.831   2.310   4.318  1.00 12.30           C
ATOM     41  C   ASN A   6       7.854   2.761   5.324  1.00 13.40           C
ATOM     42  O   ASN A   6       8.219   3.943   5.374  1.00 13.92           O
ATOM     43  CB  ASN A   6       7.065   3.016   2.993  1.00 12.13           C
ATOM     44  CG  ASN A   6       5.961   2.735   2.003  1.00 12.77           C
ATOM     45  OD1 ASN A   6       5.798   1.604   1.551  1.00 14.27           O
ATOM     46  ND2 ASN A   6       5.195   3.747   1.679  1.00 10.07           N
ATOM     47  N   TYR A   7       8.292   1.817   6.147  1.00 14.70           N
ATOM     48  CA  TYR A   7       9.159   2.144   7.299  1.00 15.18           C
ATOM     49  C   TYR A   7      10.603   2.331   6.885  1.00 15.91           C
ATOM     50  O   TYR A   7      11.041   1.811   5.855  1.00 15.76           O
ATOM     51  CB  TYR A   7       9.061   1.065   8.369  1.00 15.35           C
ATOM     52  CG  TYR A   7       7.665   0.929   8.902  1.00 14.45           C
ATOM     53  CD1 TYR A   7       6.771   0.021   8.327  1.00 15.68           C
ATOM     54  CD2 TYR A   7       7.210   1.756   9.920  1.00 14.80           C
ATOM     55  CE1 TYR A   7       5.480  -0.094   8.796  1.00 13.46           C
ATOM     56  CE2 TYR A   7       5.904   1.649  10.416  1.00 14.33           C
ATOM     57  CZ  TYR A   7       5.047   0.729   9.831  1.00 15.09           C
ATOM     58  OH  TYR A   7       3.766   0.589  10.291  1.00 14.39           O
ATOM     59  OXT TYR A   7      11.358   2.999   7.612  1.00 17.49           O
"""

rec_3_res_ac_h = """\
CRYST1   72.072   33.173   34.033  90.00  90.00  90.00 P 1
ATOM    519  N   HIS B   1       5.000   8.515  18.112  1.00 20.00           N
ATOM    520  CA  HIS B   1       5.999   8.713  17.074  1.00 20.00           C
ATOM    521  C   HIS B   1       7.157   9.627  17.517  1.00 20.00           C
ATOM    522  O   HIS B   1       8.302   9.165  17.614  1.00 20.00           O
ATOM    523  CB  HIS B   1       5.315   9.226  15.797  1.00 20.00           C
ATOM    524  HA  HIS B   1       6.434   7.742  16.835  1.00 20.00           H
ATOM    525  N   TRP B   2       6.845  10.900  17.805  1.00 20.00           N
ATOM    526  CA  TRP B   2       7.853  11.954  18.083  1.00 20.00           C
ATOM    527  C   TRP B   2       8.071  12.262  19.565  1.00 20.00           C
ATOM    528  O   TRP B   2       8.355  13.406  19.941  1.00 20.00           O
ATOM    529  CB  TRP B   2       7.516  13.257  17.336  1.00 20.00           C
ATOM    530  HA  TRP B   2       8.809  11.606  17.692  1.00 20.00           H
ATOM    531  H  ATRP B   2       5.886  11.243  17.855  0.50 20.00           H
ATOM    532  D  BTRP B   2       5.886  11.243  17.855  0.50 20.00           D
ATOM    533  N   GLU B   3       7.910  11.239  20.396  1.00 20.00           N
ATOM    534  CA  GLU B   3       8.310  11.284  21.798  1.00 20.00           C
ATOM    535  C   GLU B   3       9.344  10.190  21.979  1.00 20.00           C
ATOM    536  O   GLU B   3      10.197  10.267  22.867  1.00 20.00           O
ATOM    537  CB  GLU B   3       7.115  11.041  22.731  1.00 20.00           C
ATOM    538  HA  GLU B   3       8.761  12.248  22.034  1.00 20.00           H
ATOM    539  H  AGLU B   3       7.474  10.360  20.122  0.50 20.00           H
ATOM    540  D  BGLU B   3       7.474  10.360  20.122  0.50 20.00           D
"""

def exercise_phi_psi_extraction():
  for n_prox, raw_records in [
      ([0, 0], rec_1_residue),
      ([0, 0], rec_2_residues),
      ([4, 2], rec_3_residues),
      ([6, 4], rec_4_residues),
      ([0, 0], rec_2_chains),
      ([0, 0], rec_2_segids),
      ([8, 4], rec_2_acs_edge),
      ([8, 4], rec_2_acs_middle),
      ([6, 4], rec_4_residues_isertions),
      ([12, 10], pdb_1yjp),
      ([8, 4], pdb_1yjp_minus_4),
      ([4, 2], rec_3_res_ac_h),
      ([8, 4], rec_2_acs_middle_one_atom_1),
      ([8, 4], rec_2_acs_middle_one_atom_2),
      ([8, 4], rec_2_acs_middle_one_atom_3),
      ]:
    tmp_hierarchy = iotbx.pdb.input(
      source_info=None,
      lines=flex.split_lines(raw_records)).construct_hierarchy()
    for opp in range(2):
      proxies = []
      for three in generate_protein_threes(
          hierarchy=tmp_hierarchy,
          geometry=None):
        ppp = three.get_dummy_dihedral_proxies(only_psi_phi_pairs=opp)
        print(three,'ppp',len(ppp))
        proxies.extend(ppp)
      print(len(proxies), n_prox)
      assert len(proxies) == n_prox[opp], \
         "Expected %d, got %d" % (
           n_prox[opp],
           len(proxies),
           )

if (__name__ == "__main__"):
  exercise_phi_psi_extraction()


 *******************************************************************************


 *******************************************************************************
mmtbx/regression/tst_rank_scale_map.py
from __future__ import absolute_import, division, print_function
import iotbx.pdb
import iotbx.mrcfile
from scitbx.array_family import flex
from libtbx import easy_run
from libtbx.test_utils import approx_equal

pdb_str = """
CRYST1   10.240   10.010   10.990  90.00  90.00  90.00 P1
ATOM      1  N   ASP L   1       5.347   5.804   5.380  1.00 34.60           N
"""

def exercise_00(prefix="tst_rank_scale_map"):
  xrs = iotbx.pdb.input(source_info=None, lines=pdb_str).xray_structure_simple()
  fc = xrs.structure_factors(d_min=2).f_calc()
  cs = fc.crystal_symmetry()
  fft_map = fc.fft_map(resolution_factor=0.25)
  m = fft_map.real_map_unpadded()
  iotbx.mrcfile.write_ccp4_map(
    file_name="%s.ccp4"%prefix,
    unit_cell=cs.unit_cell(),
    space_group=cs.space_group(),
    #gridding_first=(0,0,0),# This causes a bug (map gets shifted)
    #gridding_last=n_real,  # This causes a bug (map gets shifted)
    map_data=m,
    labels=flex.std_string([""]))
  assert not easy_run.call("phenix.rank_scale_map %s.ccp4"%prefix)
  #
  ccp4_map = iotbx.mrcfile.map_reader(
    file_name="%s.ccp4_rank_scaled.ccp4"%prefix)
  m = ccp4_map.data.as_double()
  mmm = m.as_1d().min_max_mean().as_tuple()
  assert approx_equal(mmm, [0,1,0.5], 0.01)

if (__name__ == "__main__"):
  exercise_00()
  print("OK")


 *******************************************************************************


 *******************************************************************************
mmtbx/regression/tst_real_space_correlation.py

from __future__ import absolute_import, division, print_function
from mmtbx import real_space_correlation
import mmtbx.utils
from iotbx import file_reader
import iotbx.pdb
from scitbx.array_family import flex
import libtbx.load_env
from libtbx.test_utils import approx_equal
from libtbx.utils import null_out
from libtbx import group_args
import os

def exercise_1():
  pdb_file = libtbx.env.find_in_repositories(
    relative_path="phenix_regression/pdb/1yjp_h.pdb",
    test=os.path.isfile)
  mtz_file = libtbx.env.find_in_repositories(
    relative_path="phenix_regression/reflection_files/1yjp.mtz",
    test=os.path.isfile)
  if (None in [pdb_file, mtz_file]):
    print("phenix_regression not found, skipping test")
    return False
  pdb_in = iotbx.pdb.input(pdb_file)
  hierarchy = pdb_in.construct_hierarchy()
  hierarchy.atoms().reset_i_seq()
  xrs = pdb_in.xray_structure_simple()
  mtz_in = file_reader.any_file(mtz_file)
  f_obs = mtz_in.file_server.miller_arrays[0]
  r_free = mtz_in.file_server.miller_arrays[1]
  r_free = r_free.customized_copy(data=(r_free.data()==1))
  fmodel = mmtbx.utils.fmodel_simple(
    f_obs=f_obs,
    r_free_flags=r_free,
    xray_structures=[xrs],
    scattering_table="n_gaussian")
  map_stats = real_space_correlation.map_statistics_for_fragment(
    fragment=hierarchy,
    fmodel=fmodel)
  assert approx_equal(map_stats.cc, 0.960, eps=0.01)
  edm = fmodel.electron_density_map()
  map1_coeffs = edm.map_coefficients("2mFo-DFc")
  map1 = map1_coeffs.fft_map(
    resolution_factor=0.25).apply_sigma_scaling().real_map()
  map2_coeffs = edm.map_coefficients("Fmodel")
  map2 = map2_coeffs.fft_map(
    resolution_factor=0.25).apply_sigma_scaling().real_map()
  xray_structure = fmodel.xray_structure
  map_stats2 = real_space_correlation.map_statistics_for_atom_selection(
    atom_selection=flex.bool(xrs.sites_cart().size(), True),
    map1=map1,
    map2=map2,
    xray_structure=xrs)
  assert approx_equal(map_stats2.cc, map_stats.cc, 0.01)
  # XXX other code outside cctbx depends on the current API - do not simply
  # change the test if this breaks!
  overall_cc, results = real_space_correlation.simple(
    fmodel=fmodel,
    pdb_hierarchy=hierarchy,
    log=null_out())
  assert isinstance(overall_cc, float)
  assert isinstance(results, list)
  assert isinstance(results[0], group_args)
  assert (results[0].n_atoms == 1)
  assert (results[0].id_str == " A   GLY    1    N  ")
  return True

# test with synthetic twinned data
def exercise_2():
  pdb_str = """\
CRYST1   12.000    8.000   12.000  90.02  89.96  90.05 P 1           1
ATOM     39  N   ASN A   6       5.514   2.664   4.856  1.00 11.99           N
ATOM     40  CA  ASN A   6       6.831   2.310   4.318  1.00 12.30           C
ATOM     41  C   ASN A   6       7.854   2.761   5.324  1.00 13.40           C
ATOM     42  O   ASN A   6       8.219   3.943   5.374  1.00 13.92           O
ATOM     43  CB  ASN A   6       7.065   3.016   2.993  1.00 12.13           C
ATOM     44  CG  ASN A   6       5.961   2.735   2.003  1.00 12.77           C
ATOM     45  OD1 ASN A   6       5.798   1.604   1.551  1.00 14.27           O
ATOM     46  ND2 ASN A   6       5.195   3.747   1.679  1.00 10.07           N
ATOM     47  N   TYR A   7       8.292   1.817   6.147  1.00 14.70           N
ATOM     48  CA  TYR A   7       9.159   2.144   7.299  1.00 15.18           C
ATOM     49  C   TYR A   7      10.603   2.331   6.885  1.00 15.91           C
ATOM     50  O   TYR A   7      11.041   1.811   5.855  1.00 15.76           O
ATOM     51  CB  TYR A   7       9.061   1.065   8.369  1.00 15.35           C
ATOM     52  CG  TYR A   7       7.665   0.929   8.902  1.00 14.45           C
ATOM     53  CD1 TYR A   7       6.771   0.021   8.327  1.00 15.68           C
ATOM     54  CD2 TYR A   7       7.210   1.756   9.920  1.00 14.80           C
ATOM     55  CE1 TYR A   7       5.480  -0.094   8.796  1.00 13.46           C
ATOM     56  CE2 TYR A   7       5.904   1.649  10.416  1.00 14.33           C
ATOM     57  CZ  TYR A   7       5.047   0.729   9.831  1.00 15.09           C
ATOM     58  OH  TYR A   7       3.766   0.589  10.291  1.00 14.39           O
ATOM     59  OXT TYR A   7      11.358   2.999   7.612  1.00 17.49           O
TER
ATOM      1  N   ASN B   6       1.414   5.113   6.019  1.00 12.99           N
ATOM      2  CA  ASN B   6       2.720   4.776   5.445  1.00 13.30           C
ATOM      3  C   ASN B   6       3.763   5.209   6.438  1.00 14.40           C
ATOM      4  O   ASN B   6       4.125   6.391   6.507  1.00 14.92           O
ATOM      5  CB  ASN B   6       2.922   5.513   4.131  1.00 13.13           C
ATOM      6  CG  ASN B   6       1.798   5.250   3.160  1.00 13.77           C
ATOM      7  OD1 ASN B   6       1.629   4.129   2.686  1.00 15.27           O
ATOM      8  ND2 ASN B   6       1.022   6.266   2.875  1.00 11.07           N
ATOM      9  N   TYR B   7       4.222   4.248   7.230  1.00 15.70           N
ATOM     10  CA  TYR B   7       5.113   4.552   8.370  1.00 16.18           C
ATOM     11  C   TYR B   7       6.547   4.754   7.929  1.00 16.91           C
ATOM     12  O   TYR B   7       6.964   4.259   6.878  1.00 16.76           O
ATOM     13  CB  TYR B   7       5.042   3.449   9.417  1.00 16.35           C
ATOM     14  CG  TYR B   7       3.659   3.296   9.977  1.00 15.45           C
ATOM     15  CD1 TYR B   7       2.756   2.398   9.402  1.00 16.68           C
ATOM     16  CD2 TYR B   7       3.224   4.098  11.023  1.00 15.80           C
ATOM     17  CE1 TYR B   7       1.476   2.267   9.896  1.00 14.46           C
ATOM     18  CE2 TYR B   7       1.929   3.975  11.545  1.00 15.33           C
ATOM     19  CZ  TYR B   7       1.063   3.065  10.959  1.00 16.09           C
ATOM     20  OH  TYR B   7      -0.207   2.910  11.443  1.00 15.39           O
ATOM     21  OXT TYR B   7       7.316   5.408   8.654  1.00 18.49           O
END
"""
  pdb_in = iotbx.pdb.input(source_info=None, lines=pdb_str)
  hierarchy = pdb_in.construct_hierarchy()
  xrs = pdb_in.xray_structure_simple()
  fc = abs(xrs.structure_factors(d_min=1.5).f_calc())
  fc = fc.set_observation_type_xray_amplitude()
  sigf = flex.double(fc.size(), 0.1) + (fc.data() * 0.03)
  fc = fc.customized_copy(sigmas=sigf)
  # and now add twinning
  fc_twin = fc.twin_data(twin_law='-l,-k,-h', alpha=0.4)
  flags = fc_twin.generate_r_free_flags(use_lattice_symmetry=True)
  fmodel = mmtbx.utils.fmodel_simple(
    f_obs=fc_twin,
    r_free_flags=flags,
    xray_structures=[xrs],
    scattering_table="n_gaussian")
  assert (fmodel.twin_law is not None)
  map_stats = real_space_correlation.extract_map_stats_for_single_atoms(
    xray_structure=xrs,
    pdb_atoms=hierarchy.atoms(),
    fmodel=fmodel)
  sel_cache = hierarchy.atom_selection_cache()
  sel = sel_cache.selection("chain B")
  map_stats_2 = real_space_correlation.extract_map_stats_for_single_atoms(
    xray_structure=xrs,
    pdb_atoms=hierarchy.atoms(),
    fmodel=fmodel,
    selection=sel)
  map_stats_3 = real_space_correlation.map_statistics_for_atom_selection(
    atom_selection=sel,
    fmodel=fmodel)

if (__name__ == "__main__"):
  exercise_1()
  exercise_2()
  print("OK")


 *******************************************************************************


 *******************************************************************************
mmtbx/regression/tst_reduce.py
##################################################################################
# This is a test program to validate that the Python wrapping of Reduce worked.
#

#                Copyright 2021-2023  Richardson Lab at Duke University
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

from __future__ import print_function, nested_scopes, generators, division
from __future__ import absolute_import
from mmtbx.reduce import Movers
from mmtbx.reduce import InteractionGraph
from mmtbx.reduce import Optimizers
from mmtbx.programs import reduce2
from iotbx.cli_parser import run_program
from six.moves import cStringIO as StringIO
import os.path as op
import os
import math

def RunReduceTests():

  #========================================================================
  # Call the test functions for all of our files.

  print('Testing Movers objects')
  ret = Movers.Test()
  if len(ret) != 0:
    print("Failure:",ret)
  assert (len(ret) == 0)

  print('Testing InteractionGraph objects')
  ret = InteractionGraph.Test()
  if len(ret) != 0:
    print("Failure:",ret)
  assert (len(ret) == 0)

  print('Testing Optimizers')
  ret = Optimizers.Test()
  if len(ret) != 0:
    print("Failure:",ret)
  assert (len(ret) == 0), 'len(ret)=%s' % len(ret)
  return ret

# Each test case has a name, a raw PDB file, a chain ID, a residue ID, an atom name,
# a list of possible locations for the atom (for sets of 3 hydrogens, any 60-degree
# rotation is equivalent in score), a maximum distance threshold, and a list of extra
# arguments to make to Reduce2 for this case.
testCases = [

  ["7c31_single_hydrogen_rotator",
   """\
CRYST1   27.854   27.854   99.605  90.00  90.00  90.00 P 43          8
ORIGX1      1.000000  0.000000  0.000000        0.00000
ORIGX2      0.000000  1.000000  0.000000        0.00000
ORIGX3      0.000000  0.000000  1.000000        0.00000
SCALE1      0.035901  0.000000  0.000000        0.00000
SCALE2      0.000000  0.035901  0.000000        0.00000
SCALE3      0.000000  0.000000  0.010040        0.00000
ATOM     68  N   SER A   5     -31.155  49.742   0.887  1.00 10.02           N
ATOM     69  CA  SER A   5     -32.274  48.937   0.401  1.00  9.76           C
ATOM     70  C   SER A   5     -33.140  49.851  -0.454  1.00  9.47           C
ATOM     71  O   SER A   5     -33.502  50.939  -0.012  1.00 10.76           O
ATOM     72  CB  SER A   5     -33.086  48.441   1.599  1.00 12.34           C
ATOM     73  OG  SER A   5     -34.118  47.569   1.179  1.00 19.50           O
ATOM    758  N   VAL B   2     -34.430  42.959   3.043  1.00 19.95           N
ATOM    759  CA  VAL B   2     -32.994  42.754   2.904  0.50 18.09           C
ATOM    760  C   VAL B   2     -32.311  44.083   2.629  1.00 17.65           C
ATOM    761  O   VAL B   2     -32.869  44.976   1.975  1.00 18.97           O
ATOM    762  CB  VAL B   2     -32.703  41.738   1.778  0.50 19.70           C
ATOM    763  CG1 VAL B   2     -33.098  42.307   0.419  0.50 19.61           C
ATOM    764  CG2 VAL B   2     -31.224  41.334   1.755  0.50 16.49           C
TER    1447      CYS B  47
END
""",
   "A",
   5,
   "HG",
   [ (-33.788, 46.891, 0.809)
   ],
   0.1,
   []
  ],

  ["1xso_amide_unflipped",
   """\
CRYST1   73.450   68.940   58.760  90.00  90.00  90.00 P 21 21 21    8
ORIGX1      1.000000  0.000000  0.000000        0.00000
ORIGX2      0.000000  1.000000  0.000000        0.00000
ORIGX3      0.000000  0.000000  1.000000        0.00000
SCALE1      0.013615  0.000000  0.000000        0.00000
SCALE2      0.000000  0.014505  0.000000        0.00000
SCALE3      0.000000  0.000000  0.017018        0.00000
MTRIX1   1  0.987830 -0.010290 -0.155220        1.43777    1
MTRIX2   1 -0.008360 -0.999880  0.013070       33.15571    1
MTRIX3   1 -0.155330 -0.011610 -0.987790       17.07902    1
ATOM    147  N   GLN A  22      32.268  17.697  -8.014  1.00 15.32           N
ATOM    148  CA  GLN A  22      33.617  18.261  -8.189  1.00 14.46           C
ATOM    149  C   GLN A  22      34.546  17.130  -8.669  1.00 18.34           C
ATOM    150  O   GLN A  22      34.525  16.056  -8.055  1.00 20.98           O
ATOM    151  CB  GLN A  22      34.120  18.672  -6.771  1.00 15.81           C
ATOM    152  CG  GLN A  22      35.452  19.443  -6.847  1.00 17.90           C
ATOM    153  CD  GLN A  22      35.878  19.981  -5.501  1.00 14.30           C
ATOM    154  OE1 GLN A  22      35.529  19.359  -4.472  1.00 18.17           O
ATOM    155  NE2 GLN A  22      36.611  21.049  -5.457  1.00 20.19           N
ATOM    173  N   GLU A  25      40.443  19.021  -7.568  1.00 47.81           N
ATOM    174  CA  GLU A  25      40.160  20.153  -6.631  1.00 42.14           C
ATOM    175  C   GLU A  25      39.675  21.334  -7.469  1.00 36.95           C
ATOM    176  O   GLU A  25      39.955  22.496  -7.223  1.00 45.86           O
ATOM    177  CB  GLU A  25      41.460  20.522  -5.912  0.00 41.53           C
ATOM    178  CG  GLU A  25      42.518  19.432  -5.947  0.00 41.54           C
ATOM    179  CD  GLU A  25      43.919  19.983  -6.125  0.00 41.41           C
ATOM    180  OE1 GLU A  25      44.311  20.257  -7.279  0.00 41.37           O
ATOM    181  OE2 GLU A  25      44.629  20.145  -5.110  0.00 41.34           O
ATOM    182  N   GLY A  25A     38.940  21.006  -8.547  1.00 35.16           N
ATOM    183  CA  GLY A  25A     38.466  22.062  -9.438  1.00 30.84           C
ATOM    184  C   GLY A  25A     37.135  22.649  -9.008  1.00 26.52           C
ATOM    185  O   GLY A  25A     36.678  22.555  -7.874  1.00 24.92           O
ATOM    191  N   VAL A  27      33.241  23.494  -8.492  1.00 13.48           N
ATOM    192  CA  VAL A  27      32.081  22.686  -8.152  1.00 14.56           C
ATOM    193  C   VAL A  27      30.869  23.108  -9.008  1.00 14.24           C
ATOM    194  O   VAL A  27      30.552  24.277  -9.114  1.00 15.24           O
ATOM    195  CB  VAL A  27      31.716  22.923  -6.662  1.00 13.92           C
ATOM    196  CG1 VAL A  27      30.493  22.048  -6.301  1.00 19.33           C
ATOM    197  CG2 VAL A  27      32.934  22.549  -5.797  1.00 15.63           C
ATOM    749  N   SER A 103      34.060  24.070  -2.055  1.00 11.00           N
ATOM    750  CA  SER A 103      34.714  22.821  -2.367  1.00 11.78           C
ATOM    751  C   SER A 103      33.932  21.688  -1.675  1.00 11.18           C
ATOM    752  O   SER A 103      33.182  21.910  -0.755  1.00 10.91           O
ATOM    753  CB  SER A 103      36.150  22.787  -1.786  1.00 14.12           C
ATOM    754  OG  SER A 103      36.858  21.681  -2.392  1.00 15.49           O
ATOM    755  N   LEU A 104      34.225  20.450  -2.085  1.00 12.60           N
ATOM    756  CA  LEU A 104      33.727  19.278  -1.440  1.00 13.49           C
ATOM    757  C   LEU A 104      34.844  18.562  -0.681  1.00 14.51           C
ATOM    758  O   LEU A 104      34.606  17.475  -0.159  1.00 16.82           O
ATOM    759  CB  LEU A 104      33.019  18.367  -2.402  1.00 13.27           C
ATOM    760  CG  LEU A 104      31.817  18.935  -3.135  1.00 13.24           C
ATOM    761  CD1 LEU A 104      31.200  17.904  -4.040  1.00 16.51           C
ATOM    762  CD2 LEU A 104      30.821  19.574  -2.182  1.00 22.63           C
ATOM    763  N   LYS A 105      36.033  19.165  -0.594  1.00 14.92           N
ATOM    764  CA  LYS A 105      37.139  18.617   0.145  1.00 16.30           C
ATOM    765  C   LYS A 105      38.020  19.765   0.678  1.00 17.78           C
ATOM    766  O   LYS A 105      37.916  20.873   0.200  1.00 20.07           O
ATOM    767  CB  LYS A 105      37.943  17.627  -0.649  1.00 26.20           C
ATOM    768  CG  LYS A 105      38.587  18.132  -1.914  1.00 38.16           C
ATOM    769  CD  LYS A 105      38.295  17.264  -3.120  0.00 45.15           C
ATOM    770  CE  LYS A 105      38.612  15.811  -2.887  1.00 51.58           C
ATOM    771  NZ  LYS A 105      39.344  15.183  -4.045  1.00 74.91           N
TER    1093      PRO A 151
END
""",
   "A",
   22,
   "OE1",
   [ (35.529, 19.359, -4.472)
   ],
   0.1,
   []
  ],

  ["1xso_amide_flipped",
   """\
CRYST1   73.450   68.940   58.760  90.00  90.00  90.00 P 21 21 21    8
ORIGX1      1.000000  0.000000  0.000000        0.00000
ORIGX2      0.000000  1.000000  0.000000        0.00000
ORIGX3      0.000000  0.000000  1.000000        0.00000
SCALE1      0.013615  0.000000  0.000000        0.00000
SCALE2      0.000000  0.014505  0.000000        0.00000
SCALE3      0.000000  0.000000  0.017018        0.00000
MTRIX1   1  0.987830 -0.010290 -0.155220        1.43777    1
MTRIX2   1 -0.008360 -0.999880  0.013070       33.15571    1
MTRIX3   1 -0.155330 -0.011610 -0.987790       17.07902    1
ATOM    924  N   GLY A 127      23.876  47.136  -0.439  1.00 18.38           N
ATOM    925  CA  GLY A 127      22.692  47.748   0.105  1.00 17.97           C
ATOM    926  C   GLY A 127      22.873  49.006   0.862  1.00 18.02           C
ATOM    927  O   GLY A 127      21.908  49.714   1.225  1.00 24.20           O
ATOM    932  N   ASN A 129      24.271  49.439   3.964  1.00 14.98           N
ATOM    933  CA  ASN A 129      24.135  49.362   5.428  1.00 15.72           C
ATOM    934  C   ASN A 129      24.971  48.198   5.914  1.00 13.04           C
ATOM    935  O   ASN A 129      25.459  47.398   5.129  1.00 14.62           O
ATOM    936  CB  ASN A 129      22.691  49.260   5.878  1.00 15.14           C
ATOM    937  CG  ASN A 129      21.911  48.176   5.160  1.00 19.11           C
ATOM    938  OD1 ASN A 129      22.371  47.040   5.114  1.00 15.87           O
ATOM    939  ND2 ASN A 129      20.811  48.560   4.517  1.00 30.20           N
ATOM    948  N   GLU A 131      24.275  45.568   7.628  1.00 14.32           N
ATOM    949  CA  GLU A 131      23.665  44.242   7.404  1.00 15.35           C
ATOM    950  C   GLU A 131      23.963  43.701   6.022  1.00 13.39           C
ATOM    951  O   GLU A 131      24.150  42.499   5.830  1.00 13.14           O
ATOM    952  CB  GLU A 131      22.201  44.278   7.753  1.00 18.42           C
ATOM    953  CG  GLU A 131      21.474  42.964   7.698  1.00 23.30           C
ATOM    954  CD  GLU A 131      21.905  42.014   8.811  1.00 27.07           C
ATOM    955  OE1 GLU A 131      22.005  42.457   9.969  1.00 37.65           O
ATOM    956  OE2 GLU A 131      22.106  40.834   8.513  1.00 32.51           O
ATOM    957  N   SER A 132      24.016  44.584   5.024  1.00 13.86           N
ATOM    958  CA  SER A 132      24.353  44.193   3.664  1.00 12.64           C
ATOM    959  C   SER A 132      25.696  43.468   3.641  1.00 12.67           C
ATOM    960  O   SER A 132      25.800  42.483   2.891  1.00 13.76           O
ATOM    961  CB  SER A 132      24.320  45.391   2.737  1.00 14.43           C
ATOM    962  OG  SER A 132      24.685  45.044   1.405  1.00 13.58           O
ATOM    991  N   ASN A 137      20.989  41.281   3.329  1.00 12.56           N
ATOM    992  CA  ASN A 137      19.607  41.651   3.597  1.00 13.15           C
ATOM    993  C   ASN A 137      18.639  40.676   2.991  1.00 10.75           C
ATOM    994  O   ASN A 137      17.511  41.040   2.611  1.00 15.89           O
ATOM    995  CB  ASN A 137      19.280  43.097   3.159  1.00 13.87           C
ATOM    996  CG  ASN A 137      19.949  44.125   4.040  1.00 16.63           C
ATOM    997  OD1 ASN A 137      19.570  44.245   5.254  1.00 19.77           O
ATOM    998  ND2 ASN A 137      20.916  44.887   3.583  1.00 16.13           N
TER    1093      PRO A 151
END
""",
   "A",
   129,
   "OD1",
   [ (22.371, 47.040, 5.114)
   ],
   0.1,
   []
  ],

  ["1xso_histidine_unflipped",
   """\
CRYST1   73.450   68.940   58.760  90.00  90.00  90.00 P 21 21 21    8
ORIGX1      1.000000  0.000000  0.000000        0.00000
ORIGX2      0.000000  1.000000  0.000000        0.00000
ORIGX3      0.000000  0.000000  1.000000        0.00000
SCALE1      0.013615  0.000000  0.000000        0.00000
SCALE2      0.000000  0.014505  0.000000        0.00000
SCALE3      0.000000  0.000000  0.017018        0.00000
MTRIX1   1  0.987830 -0.010290 -0.155220        1.43777    1
MTRIX2   1 -0.008360 -0.999880  0.013070       33.15571    1
MTRIX3   1 -0.155330 -0.011610 -0.987790       17.07902    1
ATOM    103  N   VAL A  17      15.777  20.067  -3.917  1.00 11.00           N
ATOM    104  CA  VAL A  17      16.936  19.211  -3.933  1.00 12.41           C
ATOM    105  C   VAL A  17      18.055  19.934  -4.702  1.00  9.37           C
ATOM    106  O   VAL A  17      17.836  20.513  -5.742  1.00 13.60           O
ATOM    107  CB  VAL A  17      16.635  17.858  -4.617  1.00 16.16           C
ATOM    108  CG1 VAL A  17      17.933  16.983  -4.557  1.00 21.33           C
ATOM    109  CG2 VAL A  17      15.541  17.118  -3.839  1.00 19.65           C
ATOM    117  N   HIS A  19      22.094  19.284  -6.044  1.00 11.05           N
ATOM    118  CA  HIS A  19      23.225  18.356  -6.269  1.00 10.79           C
ATOM    119  C   HIS A  19      24.527  19.153  -6.473  1.00 11.77           C
ATOM    120  O   HIS A  19      24.547  20.205  -7.093  1.00 13.93           O
ATOM    121  CB  HIS A  19      22.906  17.530  -7.527  1.00 18.16           C
ATOM    122  CG  HIS A  19      21.858  16.494  -7.322  1.00 26.17           C
ATOM    123  ND1 HIS A  19      22.149  15.200  -6.888  1.00 28.19           N
ATOM    124  CD2 HIS A  19      20.525  16.560  -7.452  1.00 32.51           C
ATOM    125  CE1 HIS A  19      21.056  14.541  -6.758  1.00 32.39           C
ATOM    126  NE2 HIS A  19      20.028  15.310  -7.102  1.00 34.60           N
HETATM 2433  O   HOH B 215      21.490  11.727  -5.002  1.00 34.66           O
HETATM 2436  O   HOH B 218      16.653  14.508   9.188  1.00 35.04           O
HETATM 2498  O   HOH B 280       8.420  -1.071  13.530  1.00 50.43           O
HETATM 2525  O   HOH B 307      37.167  -8.451   4.794  1.00 59.87           O
HETATM 2538  O   HOH B 320      14.429  18.062  16.293  1.00 67.01           O
TER    1093      PRO A 151
END
""",
   "A",
   19,
   "ND1",
   [ (22.149, 15.200, -6.888)
   ],
   0.1,
   []
  ],

  ["1xso_histidine_flipped",
   """\
CRYST1   73.450   68.940   58.760  90.00  90.00  90.00 P 21 21 21    8
ORIGX1      1.000000  0.000000  0.000000        0.00000
ORIGX2      0.000000  1.000000  0.000000        0.00000
ORIGX3      0.000000  0.000000  1.000000        0.00000
SCALE1      0.013615  0.000000  0.000000        0.00000
SCALE2      0.000000  0.014505  0.000000        0.00000
SCALE3      0.000000  0.000000  0.017018        0.00000
MTRIX1   1  0.987830 -0.010290 -0.155220        1.43777    1
MTRIX2   1 -0.008360 -0.999880  0.013070       33.15571    1
MTRIX3   1 -0.155330 -0.011610 -0.987790       17.07902    1
ATOM   1115  N   VAL B   5      26.079  16.885  14.997  1.00  8.83           N
ATOM   1116  CA  VAL B   5      24.686  16.588  15.374  1.00  8.78           C
ATOM   1117  C   VAL B   5      23.969  16.005  14.172  1.00  9.25           C
ATOM   1118  O   VAL B   5      24.335  16.257  13.044  1.00 10.86           O
ATOM   1119  CB  VAL B   5      23.982  17.879  15.867  1.00 10.17           C
ATOM   1120  CG1 VAL B   5      23.763  18.899  14.740  1.00 14.21           C
ATOM   1121  CG2 VAL B   5      22.685  17.620  16.633  1.00 14.81           C
ATOM   1196  N   VAL B  17      17.298  13.044  18.182  1.00 10.96           N
ATOM   1197  CA  VAL B  17      18.457  13.879  18.007  1.00  9.04           C
ATOM   1198  C   VAL B  17      19.658  13.118  18.600  1.00 11.44           C
ATOM   1199  O   VAL B  17      19.557  12.560  19.692  1.00 14.98           O
ATOM   1200  CB  VAL B  17      18.288  15.251  18.678  1.00 13.50           C
ATOM   1201  CG1 VAL B  17      19.502  16.123  18.558  1.00 17.18           C
ATOM   1202  CG2 VAL B  17      17.090  16.002  18.108  1.00 20.25           C
ATOM   1210  N   HIS B  19      23.916  13.702  19.282  1.00  9.93           N
ATOM   1211  CA  HIS B  19      25.062  14.561  19.425  1.00  9.29           C
ATOM   1212  C   HIS B  19      26.366  13.749  19.441  1.00  8.50           C
ATOM   1213  O   HIS B  19      26.409  12.668  20.031  1.00 12.76           O
ATOM   1214  CB  HIS B  19      24.996  15.427  20.688  1.00 12.81           C
ATOM   1215  CG  HIS B  19      23.810  16.312  20.701  1.00 19.55           C
ATOM   1216  ND1 HIS B  19      23.897  17.622  20.251  1.00 24.11           N
ATOM   1217  CD2 HIS B  19      22.556  16.137  21.208  1.00 25.44           C
ATOM   1218  CE1 HIS B  19      22.723  18.181  20.377  1.00 27.18           C
ATOM   1219  NE2 HIS B  19      21.897  17.308  20.959  1.00 29.89           N
HETATM 2413  O   HOH B 195      10.371  -1.926  15.288  1.00 30.69           O
HETATM 2486  O   HOH B 268      10.982   5.736  29.100  1.00 46.97           O
HETATM 2528  O   HOH B 310      19.641  17.849  22.382  1.00 61.47           O
TER    1093      PRO A 151
END
""",
   "B",
   19,
   "ND1",
   [ (22.666, 16.182, 21.033)
   ],
   0.1,
   []
  ],

  ["1xso_histidine_large_unflip_preference",
   """\
CRYST1   73.450   68.940   58.760  90.00  90.00  90.00 P 21 21 21    8
ORIGX1      1.000000  0.000000  0.000000        0.00000
ORIGX2      0.000000  1.000000  0.000000        0.00000
ORIGX3      0.000000  0.000000  1.000000        0.00000
SCALE1      0.013615  0.000000  0.000000        0.00000
SCALE2      0.000000  0.014505  0.000000        0.00000
SCALE3      0.000000  0.000000  0.017018        0.00000
MTRIX1   1  0.987830 -0.010290 -0.155220        1.43777    1
MTRIX2   1 -0.008360 -0.999880  0.013070       33.15571    1
MTRIX3   1 -0.155330 -0.011610 -0.987790       17.07902    1
ATOM   1115  N   VAL B   5      26.079  16.885  14.997  1.00  8.83           N
ATOM   1116  CA  VAL B   5      24.686  16.588  15.374  1.00  8.78           C
ATOM   1117  C   VAL B   5      23.969  16.005  14.172  1.00  9.25           C
ATOM   1118  O   VAL B   5      24.335  16.257  13.044  1.00 10.86           O
ATOM   1119  CB  VAL B   5      23.982  17.879  15.867  1.00 10.17           C
ATOM   1120  CG1 VAL B   5      23.763  18.899  14.740  1.00 14.21           C
ATOM   1121  CG2 VAL B   5      22.685  17.620  16.633  1.00 14.81           C
ATOM   1196  N   VAL B  17      17.298  13.044  18.182  1.00 10.96           N
ATOM   1197  CA  VAL B  17      18.457  13.879  18.007  1.00  9.04           C
ATOM   1198  C   VAL B  17      19.658  13.118  18.600  1.00 11.44           C
ATOM   1199  O   VAL B  17      19.557  12.560  19.692  1.00 14.98           O
ATOM   1200  CB  VAL B  17      18.288  15.251  18.678  1.00 13.50           C
ATOM   1201  CG1 VAL B  17      19.502  16.123  18.558  1.00 17.18           C
ATOM   1202  CG2 VAL B  17      17.090  16.002  18.108  1.00 20.25           C
ATOM   1210  N   HIS B  19      23.916  13.702  19.282  1.00  9.93           N
ATOM   1211  CA  HIS B  19      25.062  14.561  19.425  1.00  9.29           C
ATOM   1212  C   HIS B  19      26.366  13.749  19.441  1.00  8.50           C
ATOM   1213  O   HIS B  19      26.409  12.668  20.031  1.00 12.76           O
ATOM   1214  CB  HIS B  19      24.996  15.427  20.688  1.00 12.81           C
ATOM   1215  CG  HIS B  19      23.810  16.312  20.701  1.00 19.55           C
ATOM   1216  ND1 HIS B  19      23.897  17.622  20.251  1.00 24.11           N
ATOM   1217  CD2 HIS B  19      22.556  16.137  21.208  1.00 25.44           C
ATOM   1218  CE1 HIS B  19      22.723  18.181  20.377  1.00 27.18           C
ATOM   1219  NE2 HIS B  19      21.897  17.308  20.959  1.00 29.89           N
HETATM 2413  O   HOH B 195      10.371  -1.926  15.288  1.00 30.69           O
HETATM 2486  O   HOH B 268      10.982   5.736  29.100  1.00 46.97           O
HETATM 2528  O   HOH B 310      19.641  17.849  22.382  1.00 61.47           O
TER    1093      PRO A 151
END
""",
   "B",
   19,
   "ND1",
   [ (23.897, 17.622, 20.251)
   ],
   0.1,
   ["non_flip_preference=1000"]
  ],

["1ehz_aromatic_methyl_rotator",
   """\
CRYST1   54.981   33.389   61.921  90.00  90.20  90.00 P 1 21 1      2
ORIGX1      1.000000  0.000000  0.000000        0.00000
ORIGX2      0.000000  1.000000  0.000000        0.00000
ORIGX3      0.000000  0.000000  1.000000        0.00000
SCALE1      0.018188  0.000000  0.000063        0.00000
SCALE2      0.000000  0.029950  0.000000        0.00000
SCALE3      0.000000  0.000000  0.016150        0.00000
ATOM    133  P     U A   7      67.463  47.074  35.969  1.00 44.37           P
ATOM    134  OP1   U A   7      68.318  46.756  34.822  1.00 48.09           O
ATOM    135  OP2   U A   7      67.945  47.948  37.077  1.00 45.68           O
ATOM    136  O5'   U A   7      66.104  47.724  35.455  1.00 40.88           O
ATOM    137  C5'   U A   7      65.285  47.024  34.459  1.00 37.89           C
ATOM    138  C4'   U A   7      64.055  47.852  34.101  1.00 35.74           C
ATOM    139  O4'   U A   7      63.297  48.107  35.326  1.00 38.13           O
ATOM    140  C3'   U A   7      64.317  49.197  33.459  1.00 36.87           C
ATOM    141  O3'   U A   7      63.402  49.394  32.378  1.00 37.45           O
ATOM    142  C2'   U A   7      64.097  50.171  34.624  1.00 36.55           C
ATOM    143  O2'   U A   7      63.595  51.417  34.246  1.00 35.54           O
ATOM    144  C1'   U A   7      63.015  49.475  35.442  1.00 37.23           C
ATOM    145  N1    U A   7      63.056  49.858  36.864  1.00 36.91           N
ATOM    146  C2    U A   7      62.011  50.628  37.343  1.00 34.52           C
ATOM    147  O2    U A   7      61.087  50.966  36.653  1.00 34.65           O
ATOM    148  N3    U A   7      62.112  50.993  38.659  1.00 37.03           N
ATOM    149  C4    U A   7      63.131  50.684  39.541  1.00 40.15           C
ATOM    150  O4    U A   7      63.105  51.143  40.699  1.00 36.62           O
ATOM    151  C5    U A   7      64.179  49.865  38.971  1.00 36.52           C
ATOM    152  C6    U A   7      64.106  49.490  37.691  1.00 36.25           C
HETATM 1061  P   5MC A  49      65.638  54.464  33.461  1.00 31.61           P
HETATM 1062  OP1 5MC A  49      66.252  55.251  34.624  1.00 26.54           O
HETATM 1063  OP2 5MC A  49      65.643  52.989  33.540  1.00 33.43           O
HETATM 1064  O5' 5MC A  49      64.126  54.972  33.441  1.00 31.88           O
HETATM 1065  C5' 5MC A  49      63.204  54.605  32.392  1.00 32.68           C
HETATM 1066  C4' 5MC A  49      61.796  55.006  32.810  1.00 30.80           C
HETATM 1067  O4' 5MC A  49      61.292  54.110  33.848  1.00 32.40           O
HETATM 1068  C3' 5MC A  49      61.745  56.381  33.468  1.00 31.44           C
HETATM 1069  O3' 5MC A  49      61.666  57.398  32.483  1.00 31.25           O
HETATM 1070  C2' 5MC A  49      60.485  56.287  34.312  1.00 34.62           C
HETATM 1071  O2' 5MC A  49      59.414  56.469  33.417  1.00 35.41           O
HETATM 1072  C1' 5MC A  49      60.568  54.849  34.825  1.00 33.10           C
HETATM 1073  N1  5MC A  49      61.331  54.787  36.102  1.00 32.34           N
HETATM 1074  C2  5MC A  49      60.737  55.340  37.271  1.00 32.42           C
HETATM 1075  O2  5MC A  49      59.568  55.832  37.197  1.00 28.24           O
HETATM 1076  N3  5MC A  49      61.420  55.348  38.428  1.00 29.50           N
HETATM 1077  C4  5MC A  49      62.626  54.785  38.503  1.00 32.97           C
HETATM 1078  N4  5MC A  49      63.188  54.744  39.702  1.00 28.75           N
HETATM 1079  C5  5MC A  49      63.270  54.215  37.358  1.00 34.81           C
HETATM 1080  C6  5MC A  49      62.583  54.243  36.161  1.00 33.69           C
HETATM 1081  CM5 5MC A  49      64.655  53.581  37.465  1.00 34.52           C
HETATM 1692  O   HOH A 131      65.908  53.779  40.692  1.00 47.68           O
HETATM 1783  O   HOH A 675      68.361  55.414  38.613  1.00 58.70           O
TER    1653        A A  76
END
""",
   "A",
   49,
   "HM51",
   [ (64.602, 52.635, 37.674), (65.188, 53.997, 38.160), (65.153, 53.663, 36.637)
   ],
   0.1,
   []
  ]

]

def RunRegressionTests():
  for tc in testCases:
    name = tc[0]
    pdb_raw = tc[1]
    chain = tc[2]
    resID = tc[3]
    atomName = tc[4]
    positions = tc[5]
    maxDist = tc[6]
    extraArgs = tc[7]

    print('Testing regression on', name)

    pdb_file = "./deleteme.pdb"
    with open(pdb_file, "w") as f:
      f.write(pdb_raw)
    if (op.exists("./deletemeFH.pdb")):
      os.remove("./deletemeFH.pdb")
    if (op.exists("./deleteme_description.txt")):
      os.remove("./deleteme_description.txt")
    out = StringIO()
    try:
      # Run the program
      args = [pdb_file, "add_flip_movers=True", "output.description_file=./deleteme_description.txt"]
      args.extend(extraArgs)
      results = run_program(program_class=reduce2.Program, logger=out, args=args)
      # Check the position of the atom to see if it is near enough to one of the expected locations.
      found = False
      for c in results.model.chains():
        if c.id == chain:
          for rg in c.residue_groups():
            if rg.resseq_as_int() == resID:
              for atom in rg.atoms():
                if atom.name.strip().upper() == atomName:
                  found = True
                  loc = atom.xyz
                  closeEnough = False
                  for pos in positions:
                    dist = math.sqrt( (loc[0]-pos[0])*(loc[0]-pos[0]) +
                      (loc[1]-pos[1])*(loc[1]-pos[1]) +
                      (loc[2]-pos[2])*(loc[2]-pos[2])
                    )
                    if dist <= maxDist:
                      closeEnough = True
                  if not closeEnough:
                    return "Atom "+chain+" "+str(resID)+" "+atomName+" in "+name+" too far from expected locations"
      if not found:
        return "Did not find atom "+atomName+" in chain "+chain+" residue "+str(resID)+" of "+name
    except Exception as e:
      return "Exception when running reduce2: "+str(e)
    if (op.exists(pdb_file)):
      os.remove(pdb_file)
    if (op.exists("./deletemeFH.pdb")):
      os.remove("./deletemeFH.pdb")
    if (op.exists("./deleteme_description.txt")):
      os.remove("./deleteme_description.txt")

  return ""

if __name__ == '__main__':

  ret = RunReduceTests()
  if len(ret) == 0:
    print('Success!')
  else:
    print(ret)

  assert (len(ret) == 0)

  ret = RunRegressionTests()
  if len(ret) == 0:
    print('Success!')
  else:
    print(ret)

  assert (len(ret) == 0)


 *******************************************************************************


 *******************************************************************************
mmtbx/regression/tst_reduce_timeout.py
from __future__ import absolute_import, division, print_function
from mmtbx.utils import run_reduce_with_timeout
from time import time
from mmtbx.regression import model_1yjp, model_1yjp_cif
import sys
from six.moves import zip

def exercise(prefix="tst_reduce_timeout_1"):
  fn = "%s.pdb" % prefix
  with open(fn, 'w') as f:
    f.write(model_1yjp)
  t0 = time()
  rr = run_reduce_with_timeout(
      stdin_lines=None,
      file_name=fn,
      parameters="-oh -his -flip -keep -allalt -pen9999",
      override_auto_timeout_with=None)
  t1 = time()
  assert rr.return_code == 0
  stdout_lines_1 = rr.stdout_lines
  rr = run_reduce_with_timeout(
      stdin_lines=model_1yjp,
      file_name=None,
      parameters="-oh -his -flip -keep -allalt -pen9999 -",
      override_auto_timeout_with=None)
  t1 = time()
  stdout_lines_2 = rr.stdout_lines
  assert rr.return_code == 0
  assert len(stdout_lines_1) > 0
  assert len(stdout_lines_1) == len(stdout_lines_2)
  for l1, l2 in zip(stdout_lines_1, stdout_lines_2):
    assert l1 == l2
  assert 'ATOM      0  HB3 GLN A   5       3.844   2.489   7.623  1.00 11.96           H   new' in stdout_lines_1
  assert 'ATOM      0  HB3 GLN A   5       3.844   2.489   7.623  1.00 11.96           H   new' in stdout_lines_2

  # Timeout does not work on Windows for such low values.
  if sys.platform != 'win32':
    t0 = time()
    rr = run_reduce_with_timeout(
        stdin_lines=None,
        file_name=fn,
        parameters="-oh -his -flip -keep -allalt -pen9999",
        override_auto_timeout_with=0.01)
    t1 = time()
    assert t1-t0 < 0.1
    assert rr.return_code == -15

    t0 = time()
    rr = run_reduce_with_timeout(
        stdin_lines=model_1yjp,
        file_name=None,
        parameters="-oh -his -flip -keep -allalt -pen9999 -",
        override_auto_timeout_with=0.01)
    t1 = time()
    assert t1-t0 < 0.1
    assert rr.return_code == -15

  # Make sure that we get Sorry() when trying with mMCIF file, both on the
  # command line and via stdin.
  got_Sorry = False
  try:
    fn = "%s.cif" % prefix
    with open(fn, 'w') as f:
      f.write(model_1yjp_cif)
    rr = run_reduce_with_timeout(
        stdin_lines=None,
        file_name=fn,
        parameters="-oh -his -flip -keep -allalt -pen9999",
        override_auto_timeout_with=None)
  except Exception as e:
    got_Sorry = True
  assert got_Sorry==True, "Expected Sorry() exception when opening CIF file, but did not get one."

  got_Sorry = False
  try:
    rr = run_reduce_with_timeout(
        stdin_lines=model_1yjp_cif,
        file_name=None,
        parameters="-oh -his -flip -keep -allalt -pen9999 -",
        override_auto_timeout_with=None)
  except Exception as e:
    got_Sorry = True
  assert got_Sorry==True, "Expected Sorry() exception when opening CIF file, but did not get one."

  print("OK")

if __name__ == "__main__" :
  exercise()


 *******************************************************************************


 *******************************************************************************
mmtbx/regression/tst_refine_anomalous_substructure.py

from __future__ import absolute_import, division, print_function
from libtbx.utils import null_out

def exercise():
  from mmtbx.command_line import refine_anomalous_substructure
  from mmtbx.regression.make_fake_anomalous_data import generate_cd_cl_inputs
  pdb_file, mtz_file = generate_cd_cl_inputs(file_base="tst_anom_ref")
  groups = refine_anomalous_substructure.run(
    args=[pdb_file, mtz_file],
    out=null_out())
  assert len(groups) == 2

if (__name__ == "__main__"):
  exercise()


 *******************************************************************************


 *******************************************************************************
mmtbx/regression/tst_regularize_from_pdb.py
from __future__ import absolute_import, division, print_function

from libtbx.utils import null_out
from six.moves import cStringIO as StringIO
from mmtbx.secondary_structure.regularize_from_pdb import \
   replace_with_segments_from_pdb

def remove_blank(text):
  return text.replace(" ","").replace("\n","")

text="""
ATOM      1  CA  GLY U 111       6.802  13.378  -2.270  1.00 52.86           C
ATOM      2  CA  GLY U 112       4.244  15.964  -0.444  1.00 52.86           C
ATOM      3  CA  GLY U 113       1.213  15.704  -1.022  1.00 52.86           C
ATOM      4  CA  GLY U 114      -0.519  14.243  -3.109  1.00 52.86           C
ATOM      5  CA  GLY U 115      -2.874  13.497  -4.987  1.00 52.86           C
ATOM      6  CA  GLY U 116      -0.713  13.888  -7.199  1.00 52.86           C
ATOM      7  CA  GLY U 117       1.212  11.376  -6.966  1.00 52.86           C
ATOM      8  CA  GLY U 118      -1.819  10.012  -8.645  1.00 52.86           C
ATOM      9  CA  GLY U 119       0.375   9.344 -10.927  1.00 52.86           C
ATOM     10  CA  GLY U 120       2.317   5.692 -10.865  1.00 52.86           C
ATOM     11  CA  GLY U 121       4.732   3.967 -11.502  1.00 52.86           C
ATOM     12  CA  GLY U 122       8.166   5.698 -10.793  1.00 42.55           C
ATOM     13  CA  GLY U 123       6.434   6.101  -6.390  1.00 52.86           C
ATOM     14  CA  GLY U 124       9.700   6.022  -5.333  1.00 52.86           C
ATOM     15  CA  GLY U 125       8.739   8.281  -3.579  1.00 52.86           C
ATOM     16  CA  GLY U 126       6.548   8.326  -1.298  1.00 52.86           C
ATOM     17  CA  GLY U 127       4.110   9.670  -0.100  1.00 52.86           C
ATOM     18  CA  GLY U 128       3.406  11.974   2.546  1.00 52.86           C
ATOM     19  CA  GLY U 129       0.747  12.768   3.800  1.00 52.86           C
ATOM     20  CA  GLY U 130      -1.068  13.851   6.552  1.00 52.86           C
ATOM     21  CA  GLY U 131      -3.058  16.387   5.476  1.00 52.86           C
ATOM     22  CA  GLY U 132      -4.637  14.251   3.493  1.00 52.86           C
ATOM     23  CA  GLY U 133      -4.850  12.995   0.227  1.00 52.86           C
ATOM     24  CA  GLY U 134      -7.881  13.254  -1.451  1.00 52.86           C
ATOM     25  CA  GLY U 135     -10.306  12.656  -3.983  1.00 52.86           C
TER
END
"""
def tst_01():
  print("Regularizing allowing insertions...", end=' ')
  import iotbx.pdb
  from cctbx.array_family import flex
  hierarchy=iotbx.pdb.input(source_info='text',
       lines=flex.split_lines(text)).construct_hierarchy()
  r=replace_with_segments_from_pdb(args=[],pdb_hierarchy=hierarchy,
    out=null_out())

  expected_text="""
ID: 1 ChainID: 'U'  RMSD:  1.31 A  (n=22) Junction RMSD:  0.68 A (n=7)
Complete: True  Insertions/deletions: True
Input model start: 111  end: 135  length: 25
Replacement start: 111  end: 136  length: 26
"""
  f=StringIO()
  for rss in r.model_replacement_segment_summaries:
    rss.show_summary(out=f)

  found_text=f.getvalue()
  if remove_blank(found_text)!=remove_blank(expected_text):
    print("Expected: \n%s \nFound: \n%s" %(expected_text,found_text))
    raise AssertionError("FAILED")
  print("OK")

def tst_02():
  print("Regularizing not allowing insertions...", end=' ')
  import iotbx.pdb
  from cctbx.array_family import flex
  hierarchy=iotbx.pdb.input(source_info='text',
       lines=flex.split_lines(text)).construct_hierarchy()
  r=replace_with_segments_from_pdb(args=['alpha.allow_insertions=false'],
   pdb_hierarchy=hierarchy,
    out=null_out())

  expected_text="""
ID: 1 ChainID: 'U'  RMSD:  1.28 A  (n=25) Junction RMSD:  0.68 A (n=8)
Complete: True  Insertions/deletions: False
Input model start: 111  end: 135  length: 25
Replacement start: 111  end: 135  length: 25
"""
  f=StringIO()
  for rss in r.model_replacement_segment_summaries:
    rss.show_summary(out=f)

  found_text=f.getvalue()
  if remove_blank(found_text)!=remove_blank(expected_text):
    print("Expected: \n%s \nFound: \n%s" %(expected_text,found_text))
    raise AssertionError("FAILED")
  print("OK")


if __name__=="__main__":
  tst_01()
  tst_02()


 *******************************************************************************


 *******************************************************************************
mmtbx/regression/tst_regularize_from_pdb_cif.py
from __future__ import absolute_import, division, print_function

from libtbx.utils import null_out
from six.moves import cStringIO as StringIO
from mmtbx.secondary_structure.regularize_from_pdb import \
   replace_with_segments_from_pdb

def remove_blank(text):
  return text.replace(" ","").replace("\n","")

pdb_str_1="""
ATOM      1  CA  GLY U 111       6.802  13.378  -2.270  1.00 52.86           C
ATOM      2  CA  GLY U 112       4.244  15.964  -0.444  1.00 52.86           C
ATOM      3  CA  GLY U 113       1.213  15.704  -1.022  1.00 52.86           C
ATOM      4  CA  GLY U 114      -0.519  14.243  -3.109  1.00 52.86           C
ATOM      5  CA  GLY U 115      -2.874  13.497  -4.987  1.00 52.86           C
ATOM      6  CA  GLY U 116      -0.713  13.888  -7.199  1.00 52.86           C
ATOM      7  CA  GLY U 117       1.212  11.376  -6.966  1.00 52.86           C
ATOM      8  CA  GLY U 118      -1.819  10.012  -8.645  1.00 52.86           C
ATOM      9  CA  GLY U 119       0.375   9.344 -10.927  1.00 52.86           C
ATOM     10  CA  GLY U 120       2.317   5.692 -10.865  1.00 52.86           C
ATOM     11  CA  GLY U 121       4.732   3.967 -11.502  1.00 52.86           C
ATOM     12  CA  GLY U 122       8.166   5.698 -10.793  1.00 42.55           C
ATOM     13  CA  GLY U 123       6.434   6.101  -6.390  1.00 52.86           C
ATOM     14  CA  GLY U 124       9.700   6.022  -5.333  1.00 52.86           C
ATOM     15  CA  GLY U 125       8.739   8.281  -3.579  1.00 52.86           C
ATOM     16  CA  GLY U 126       6.548   8.326  -1.298  1.00 52.86           C
ATOM     17  CA  GLY U 127       4.110   9.670  -0.100  1.00 52.86           C
ATOM     18  CA  GLY U 128       3.406  11.974   2.546  1.00 52.86           C
ATOM     19  CA  GLY U 129       0.747  12.768   3.800  1.00 52.86           C
ATOM     20  CA  GLY U 130      -1.068  13.851   6.552  1.00 52.86           C
ATOM     21  CA  GLY U 131      -3.058  16.387   5.476  1.00 52.86           C
ATOM     22  CA  GLY U 132      -4.637  14.251   3.493  1.00 52.86           C
ATOM     23  CA  GLY U 133      -4.850  12.995   0.227  1.00 52.86           C
ATOM     24  CA  GLY U 134      -7.881  13.254  -1.451  1.00 52.86           C
ATOM     25  CA  GLY U 135     -10.306  12.656  -3.983  1.00 52.86           C
TER
END
"""

# Convert to mmcif:
chain_addition = "ZXLONG"
from libtbx.test_utils import convert_pdb_to_cif_for_pdb_str
convert_pdb_to_cif_for_pdb_str(locals(),chain_addition=chain_addition)

def tst_01():
  print("Regularizing allowing insertions...", end=' ')
  import iotbx.pdb
  from cctbx.array_family import flex
  hierarchy=iotbx.pdb.input(source_info='text',
       lines=flex.split_lines(pdb_str_1)).construct_hierarchy()
  r=replace_with_segments_from_pdb(args=[],pdb_hierarchy=hierarchy,
    out=null_out())

  expected_text="""
ID: 1 ChainID: 'U%s'  RMSD:  1.31 A  (n=22) Junction RMSD:  0.68 A (n=7)
Complete: True  Insertions/deletions: True
Input model start: 111  end: 135  length: 25
Replacement start: 111  end: 136  length: 26
""" %(chain_addition)
  f=StringIO()
  for rss in r.model_replacement_segment_summaries:
    rss.show_summary(out=f)

  found_text=f.getvalue()
  if remove_blank(found_text)!=remove_blank(expected_text):
    print("Expected: \n%s \nFound: \n%s" %(expected_text,found_text))
    raise AssertionError("FAILED")
  print("OK")

def tst_02():
  print("Regularizing not allowing insertions...", end=' ')
  import iotbx.pdb
  from cctbx.array_family import flex
  hierarchy=iotbx.pdb.input(source_info='text',
       lines=flex.split_lines(pdb_str_1)).construct_hierarchy()
  r=replace_with_segments_from_pdb(args=['alpha.allow_insertions=false'],
   pdb_hierarchy=hierarchy,
    out=null_out())

  expected_text="""
ID: 1 ChainID: 'U%s'  RMSD:  1.28 A  (n=25) Junction RMSD:  0.68 A (n=8)
Complete: True  Insertions/deletions: False
Input model start: 111  end: 135  length: 25
Replacement start: 111  end: 135  length: 25
""" %(chain_addition)
  f=StringIO()
  for rss in r.model_replacement_segment_summaries:
    rss.show_summary(out=f)

  found_text=f.getvalue()
  if remove_blank(found_text)!=remove_blank(expected_text):
    print("Expected: \n%s \nFound: \n%s" %(expected_text,found_text))
    raise AssertionError("FAILED")
  print("OK")


if __name__=="__main__":
  tst_01()
  tst_02()


 *******************************************************************************


 *******************************************************************************
mmtbx/regression/tst_ribbons.py
##################################################################################
# This is a test program to validate that mmtbx.ribbons worked.
#

#                Copyright 2024  Richardson Lab at Duke University
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

from __future__ import absolute_import, division, print_function
from libtbx.utils import format_cpu_times
import os, subprocess, tempfile
import mmtbx
from mmtbx.programs import ribbons
import libtbx.load_env
from iotbx.cli_parser import run_program
from six.moves import cStringIO as StringIO
import re

def RunRibbonTests():

  #========================================================================
  # Regression test a against a snippet of a file, comparing the output
  # to the output generated by a previous version of the program.  If there are
  # differences, report that this is the case and recommend verifying that the
  # differences are intentional and replacing the stored output.
  data_dir = libtbx.env.under_dist(
    module_name = "mmtbx",
    path = os.path.join("regression","pdbs"),
    test = os.path.isdir)
  model_file = os.path.join(data_dir,'Fe_1brf_snip_reduced.pdb')
  temp_file = os.path.join(tempfile._get_default_tempdir(),
    next(tempfile._get_candidate_names())+".kin" )

  out = StringIO()
  try:
    # Run the program
    args = [model_file, "output.overwrite=True", 'output.filename='+temp_file]
    results = run_program(program_class=ribbons.Program, logger=out, args=args)

  except Exception as e:
    raise Exception("Could not call subprocess to do regression test: "+str(e))
  instructions = ("Use KiNG or another program to see what changed and then determine if the "+
      "differences are expected.  If so, modify the expected numbers of sheets and helices tested for.")

  # Count the number of helices and sheets in the output
  pattern = r"(\d+) helices and (\d+) sheets defined"
  match = re.search(pattern, out.getvalue())
  if match:
       N = int(match.group(1))
       S = int(match.group(2))
  else:
       raise Exception("Helix/sheet summary not found (printed by secondary structure manager)")

  if int(N) != 3 or int(S) != 1:
    raise Exception("Different number of helices ("+str(N)+" vs. 3) or sheets ("+str(S)+" vs. 1): "+instructions)

if __name__ == '__main__':

  RunRibbonTests()
  print(format_cpu_times())
  print('OK')


 *******************************************************************************


 *******************************************************************************
mmtbx/regression/tst_rigid_bond_test.py

from __future__ import absolute_import, division, print_function
from libtbx import easy_run

def exercise():
  pdb_in = """\
CRYST1   25.015   29.415   52.761  89.54  86.10  82.39 P 1
ATOM      1  N   LEU A   4      24.685  46.025  13.868  1.00 21.07           N
ANISOU    1  N   LEU A   4     2950   3310   1747    461   -821   -375       N
ATOM      2  CA  LEU A   4      25.638  44.959  13.585  1.00 20.86           C
ANISOU    2  CA  LEU A   4     2943   3305   1678    371   -612   -550       C
ATOM      3  C   LEU A   4      27.062  45.490  13.642  1.00 20.74           C
ANISOU    3  C   LEU A   4     2921   3288   1670    491   -610   -389       C
ATOM      4  O   LEU A   4      27.332  46.631  13.264  1.00 21.80           O
ANISOU    4  O   LEU A   4     2981   3360   1943    466   -648   -371       O
ATOM      5  CB  LEU A   4      25.385  44.352  12.197  1.00 21.20           C
ANISOU    5  CB  LEU A   4     2920   3379   1758    316   -860   -516       C
ATOM      6  CG  LEU A   4      24.065  43.606  11.957  1.00 22.17           C
ANISOU    6  CG  LEU A   4     2955   3451   2017    289   -654   -556       C
ATOM      7  CD1 LEU A   4      23.889  43.288  10.474  1.00 22.59           C
ANISOU    7  CD1 LEU A   4     3049   3450   2083    277   -581   -559       C
ATOM      8  CD2 LEU A   4      23.972  42.321  12.770  1.00 22.51           C
ANISOU    8  CD2 LEU A   4     3022   3432   2100    219   -528   -600       C
"""
  with open("tmp_rigid_bond_test.pdb", "w") as f:
    f.write(pdb_in)
  result = easy_run.fully_buffered(
    "mmtbx.rigid_bond_test tmp_rigid_bond_test.pdb").raise_if_errors()
  assert (result.return_code == 0)
  #print "\n".join(result.stdout_lines)
  assert ("""  pdb=" N   LEU A   4 " pdb=" CA  LEU A   4 "     24.957""" in
          result.stdout_lines)
  assert ("""    mean = 52.797""" in result.stdout_lines)
  print("OK")

if (__name__ == "__main__"):
  exercise()


 *******************************************************************************


 *******************************************************************************
mmtbx/regression/tst_ringer.py

from __future__ import absolute_import, division, print_function
from scitbx.array_family import flex
from libtbx import easy_run
import libtbx.load_env # import dependency
import os
from six.moves import zip

pdb_str = """
CRYST1   34.896   15.928   22.972  90.00  90.00  90.00 P 1
SCALE1      0.028657  0.000000  0.000000        0.00000
SCALE2      0.000000  0.062783  0.000000        0.00000
SCALE3      0.000000  0.000000  0.043531        0.00000
ATOM      1  N   GLY A   1       7.241  10.342  12.931  1.00 16.37           N
ATOM      2  CA  GLY A   1       7.248   9.899  11.542  1.00 16.17           C
ATOM      3  C   GLY A   1       8.297   8.826  11.297  1.00 15.46           C
ATOM      4  O   GLY A   1       8.781   8.201  12.236  1.00 16.71           O
ATOM      5  H1  GLY A   1       6.544  10.879  13.068  1.00 16.37           H
ATOM      6  H2  GLY A   1       7.180   9.635  13.468  1.00 16.37           H
ATOM      7  H3  GLY A   1       7.994  10.783  13.105  1.00 16.37           H
ATOM      8  HA2 GLY A   1       6.377   9.539  11.311  1.00 16.17           H
ATOM      9  HA3 GLY A   1       7.435  10.653  10.961  1.00 16.17           H
ATOM     10  N  AASN A   2       8.625   8.586  10.033  0.60 14.94           N
ATOM     11  CA AASN A   2       9.755   7.720   9.710  0.60 14.28           C
ATOM     12  C  AASN A   2      11.046   8.226  10.317  0.60 12.87           C
ATOM     13  O  AASN A   2      11.288   9.431  10.370  0.60 12.55           O
ATOM     14  CB AASN A   2       9.932   7.588   8.206  0.60 15.48           C
ATOM     15  CG AASN A   2       8.788   6.866   7.558  0.60 13.90           C
ATOM     16  OD1AASN A   2       8.236   7.330   6.561  0.60 17.99           O
ATOM     17  ND2AASN A   2       8.421   5.716   8.117  0.60 11.61           N
ATOM     18  H  AASN A   2       8.215   8.908   9.349  0.60 15.11           H
ATOM     19  HA AASN A   2       9.587   6.837  10.074  0.60 13.97           H
ATOM     20  HB2AASN A   2       9.990   8.474   7.814  0.60 15.07           H
ATOM     21  HB3AASN A   2      10.744   7.090   8.025  0.60 15.07           H
ATOM     22 HD21AASN A   2       7.719   5.306   7.835  0.60 11.52           H
ATOM     23 HD22AASN A   2       8.884   5.382   8.759  0.60 11.52           H
ATOM     24  N  BASN A   2       8.662   8.607  10.040  0.40 15.11           N
ATOM     25  CA BASN A   2       9.841   7.793   9.758  0.40 13.97           C
ATOM     26  C  BASN A   2      11.079   8.439  10.353  0.40 13.04           C
ATOM     27  O  BASN A   2      11.211   9.661  10.344  0.40 11.55           O
ATOM     28  CB BASN A   2      10.038   7.614   8.259  0.40 15.07           C
ATOM     29  CG BASN A   2       8.876   6.915   7.606  0.40 13.81           C
ATOM     30  OD1BASN A   2       8.335   7.391   6.608  0.40 17.17           O
ATOM     31  ND2BASN A   2       8.483   5.775   8.163  0.40 11.52           N
ATOM     32  H  BASN A   2       8.256   8.910   9.345  0.40 15.11           H
ATOM     33  HA BASN A   2       9.732   6.917  10.160  0.40 13.97           H
ATOM     34  HB2BASN A   2      10.135   8.486   7.846  0.40 15.07           H
ATOM     35  HB3BASN A   2      10.834   7.082   8.105  0.40 15.07           H
ATOM     36 HD21BASN A   2       7.804   5.353   7.845  0.40 11.52           H
ATOM     37 HD22BASN A   2       8.907   5.459   8.841  0.40 11.52           H
ATOM     38  N  AASN A   3      11.874   7.290  10.763  0.60 12.35           N
ATOM     39  CA AASN A   3      13.106   7.616  11.464  0.60 11.68           C
ATOM     40  C  AASN A   3      14.355   7.054  10.788  0.60 11.09           C
ATOM     41  O  AASN A   3      14.430   5.850  10.518  0.60 10.18           O
ATOM     42  CB AASN A   3      13.029   7.115  12.915  0.60 11.62           C
ATOM     43  CG AASN A   3      14.277   7.454  13.717  0.60 13.00           C
ATOM     44  OD1AASN A   3      14.584   8.629  13.935  0.60 15.44           O
ATOM     45  ND2AASN A   3      15.001   6.428  14.160  0.60 12.87           N
ATOM     46  H  AASN A   3      11.741   6.445  10.670  0.60 12.00           H
ATOM     47  HA AASN A   3      13.210   8.579  11.499  0.60 11.53           H
ATOM     48  HB2AASN A   3      12.269   7.529  13.353  0.60 12.90           H
ATOM     49  HB3AASN A   3      12.926   6.150  12.912  0.60 12.90           H
ATOM     50 HD21AASN A   3      15.715   6.571  14.618  0.60 12.97           H
ATOM     51 HD22AASN A   3      14.755   5.622  13.988  0.60 12.97           H
ATOM     52  N  BASN A   3      11.978   7.616  10.880  0.40 12.00           N
ATOM     53  CA BASN A   3      13.210   8.114  11.479  0.40 11.53           C
ATOM     54  C  BASN A   3      14.444   7.369  10.976  0.40 11.70           C
ATOM     55  O  BASN A   3      14.478   6.136  10.965  0.40 10.95           O
ATOM     56  CB BASN A   3      13.136   8.043  13.007  0.40 12.90           C
ATOM     57  CG BASN A   3      12.214   9.088  13.597  0.40 13.32           C
ATOM     58  OD1BASN A   3      11.921  10.106  12.964  0.40 15.04           O
ATOM     59  ND2BASN A   3      11.760   8.851  14.823  0.40 12.97           N
ATOM     60  H  BASN A   3      11.898   6.760  10.903  0.40 12.00           H
ATOM     61  HA BASN A   3      13.332   9.044  11.235  0.40 11.53           H
ATOM     62  HB2BASN A   3      12.805   7.169  13.267  0.40 12.90           H
ATOM     63  HB3BASN A   3      14.023   8.184  13.373  0.40 12.90           H
ATOM     64 HD21BASN A   3      11.233   9.414  15.203  0.40 12.97           H
ATOM     65 HD22BASN A   3      11.993   8.134  15.237  0.40 12.97           H
ATOM     66  N  AGLN A   4      15.318   7.938  10.514  0.60 10.54           N
ATOM     67  CA AGLN A   4      16.673   7.540  10.113  0.60 10.42           C
ATOM     68  C  AGLN A   4      17.726   8.190  11.019  0.60 11.71           C
ATOM     69  O  AGLN A   4      17.880   9.450  10.993  0.60  8.92           O
ATOM     70  CB AGLN A   4      16.959   7.869   8.636  0.60  9.88           C
ATOM     71  CG AGLN A   4      18.209   7.154   8.093  0.60 10.02           C
ATOM     72  CD AGLN A   4      18.769   7.756   6.808  0.60 12.86           C
ATOM     73  OE1AGLN A   4      19.004   8.968   6.722  0.60 14.16           O
ATOM     74  NE2AGLN A   4      19.007   6.903   5.806  0.60  9.04           N
ATOM     75  H  AGLN A   4      15.210   8.790  10.554  0.60 10.83           H
ATOM     76  HA AGLN A   4      16.760   6.580  10.217  0.60 10.25           H
ATOM     77  HB2AGLN A   4      16.200   7.593   8.099  0.60  9.74           H
ATOM     78  HB3AGLN A   4      17.098   8.825   8.547  0.60  9.74           H
ATOM     79  HG2AGLN A   4      18.908   7.193   8.764  0.60 10.05           H
ATOM     80  HG3AGLN A   4      17.982   6.229   7.910  0.60 10.05           H
ATOM     81 HE21AGLN A   4      18.845   6.065   5.907  0.60  8.91           H
ATOM     82 HE22AGLN A   4      19.322   7.193   5.060  0.60  8.91           H
ATOM     83  N  BGLN A   4      15.453   8.133  10.564  0.40 10.83           N
ATOM     84  CA BGLN A   4      16.716   7.571  10.098  0.40 10.25           C
ATOM     85  C  BGLN A   4      17.888   8.129  10.902  0.40 10.29           C
ATOM     86  O  BGLN A   4      18.321   9.259  10.691  0.40 10.50           O
ATOM     87  CB BGLN A   4      16.921   7.845   8.603  0.40  9.74           C
ATOM     88  CG BGLN A   4      18.096   7.084   7.994  0.40 10.05           C
ATOM     89  CD BGLN A   4      18.647   7.745   6.745  0.40 12.79           C
ATOM     90  OE1BGLN A   4      18.791   8.970   6.690  0.40 15.08           O
ATOM     91  NE2BGLN A   4      18.962   6.936   5.730  0.40  8.91           N
ATOM     92  H  BGLN A   4      15.429   8.992  10.545  0.40 10.83           H
ATOM     93  HA BGLN A   4      16.710   6.610  10.222  0.40 10.25           H
ATOM     94  HB2BGLN A   4      16.119   7.581   8.125  0.40  9.74           H
ATOM     95  HB3BGLN A   4      17.079   8.794   8.480  0.40  9.74           H
ATOM     96  HG2BGLN A   4      18.814   7.031   8.643  0.40 10.05           H
ATOM     97  HG3BGLN A   4      17.801   6.192   7.754  0.40 10.05           H
ATOM     98 HE21BGLN A   4      18.849   6.087   5.806  0.40  8.91           H
ATOM     99 HE22BGLN A   4      19.278   7.264   5.000  0.40  8.91           H
ATOM    100  N  AGLN A   5      18.413   7.359  11.856  0.60 10.59           N
ATOM    101  CA AGLN A   5      19.562   7.932  12.524  0.60 11.43           C
ATOM    102  C  AGLN A   5      20.870   7.440  11.938  0.60 11.24           C
ATOM    103  O  AGLN A   5      21.037   6.253  11.692  0.60 11.99           O
ATOM    104  CB AGLN A   5      19.517   7.784  14.035  0.60 12.07           C
ATOM    105  CG AGLN A   5      18.523   8.708  14.724  0.60 10.78           C
ATOM    106  CD AGLN A   5      17.850   8.030  15.899  0.60 12.94           C
ATOM    107  OE1AGLN A   5      17.293   6.941  15.764  0.60 10.72           O
ATOM    108  NE2AGLN A   5      17.909   8.667  17.062  0.60 12.32           N
ATOM    109  H  AGLN A   5      18.236   6.535  12.028  0.60 10.59           H
ATOM    110  HA AGLN A   5      19.567   8.887  12.374  0.60 11.43           H
ATOM    111  HB2AGLN A   5      19.275   6.870  14.249  0.60 12.07           H
ATOM    112  HB3AGLN A   5      20.397   7.981  14.392  0.60 12.07           H
ATOM    113  HG2AGLN A   5      18.990   9.492  15.053  0.60 10.78           H
ATOM    114  HG3AGLN A   5      17.836   8.968  14.090  0.60 10.78           H
ATOM    115 HE21AGLN A   5      18.313   9.424  17.118  0.60 12.32           H
ATOM    116 HE22AGLN A   5      17.543   8.323  17.760  0.60 12.32           H
ATOM    117  N  BGLN A   5      18.413   7.359  11.856  0.40 10.59           N
ATOM    118  CA BGLN A   5      19.562   7.932  12.524  0.40 11.43           C
ATOM    119  C  BGLN A   5      20.870   7.440  11.938  0.40 11.24           C
ATOM    120  O  BGLN A   5      21.037   6.253  11.692  0.40 11.99           O
ATOM    121  CB BGLN A   5      19.517   7.784  14.035  0.40 12.07           C
ATOM    122  CG BGLN A   5      18.523   8.708  14.724  0.40 10.78           C
ATOM    123  CD BGLN A   5      17.850   8.030  15.899  0.40 12.94           C
ATOM    124  OE1BGLN A   5      17.293   6.941  15.764  0.40 10.72           O
ATOM    125  NE2BGLN A   5      17.909   8.667  17.062  0.40 12.32           N
ATOM    126  H  BGLN A   5      18.151   6.581  12.111  0.40 10.59           H
ATOM    127  HA BGLN A   5      19.576   8.890  12.403  0.40 11.43           H
ATOM    128  HB2BGLN A   5      19.275   6.870  14.249  0.40 12.07           H
ATOM    129  HB3BGLN A   5      20.397   7.981  14.392  0.40 12.07           H
ATOM    130  HG2BGLN A   5      18.990   9.492  15.053  0.40 10.78           H
ATOM    131  HG3BGLN A   5      17.836   8.968  14.090  0.40 10.78           H
ATOM    132 HE21BGLN A   5      18.313   9.424  17.118  0.40 12.32           H
ATOM    133 HE22BGLN A   5      17.543   8.323  17.760  0.40 12.32           H
ATOM    134  N   ASN A   6      21.796   8.371  11.716  1.00 11.72           N
ATOM    135  CA  ASN A   6      23.113   8.030  11.190  1.00 12.12           C
ATOM    136  C   ASN A   6      24.142   8.471  12.195  1.00 13.15           C
ATOM    137  O   ASN A   6      24.509   9.645  12.245  1.00 13.93           O
ATOM    138  CB  ASN A   6      23.349   8.721   9.859  1.00 11.96           C
ATOM    139  CG  ASN A   6      22.251   8.440   8.870  1.00 12.58           C
ATOM    140  OD1 ASN A   6      22.087   7.312   8.414  1.00 14.01           O
ATOM    141  ND2 ASN A   6      21.480   9.459   8.544  1.00  9.96           N
ATOM    142  HA  ASN A   6      23.207   7.075  11.058  1.00 12.12           H
ATOM    143  HB2 ASN A   6      23.387   9.680   9.998  1.00 11.96           H
ATOM    144  HB3 ASN A   6      24.184   8.405   9.480  1.00 11.96           H
ATOM    145 HD21 ASN A   6      20.839   9.350   7.981  1.00  9.96           H
ATOM    146 HD22 ASN A   6      21.618  10.232   8.894  1.00  9.96           H
ATOM    147  H  AASN A   6      21.684   9.211  11.863  0.60 11.72           H
ATOM    148  H  BASN A   6      21.684   9.211  11.863  0.40 11.72           H
ATOM    149  N   TYR A   7      24.585   7.530  13.020  1.00 14.62           N
ATOM    150  CA  TYR A   7      25.450   7.854  14.156  1.00 15.04           C
ATOM    151  C   TYR A   7      26.899   8.037  13.753  1.00 15.56           C
ATOM    152  O   TYR A   7      27.334   7.518  12.719  1.00 15.52           O
ATOM    153  CB  TYR A   7      25.344   6.780  15.235  1.00 14.86           C
ATOM    154  CG  TYR A   7      23.945   6.649  15.763  1.00 14.38           C
ATOM    155  CD1 TYR A   7      23.055   5.738  15.199  1.00 15.46           C
ATOM    156  CD2 TYR A   7      23.494   7.461  16.795  1.00 14.37           C
ATOM    157  CE1 TYR A   7      21.764   5.619  15.667  1.00 13.24           C
ATOM    158  CE2 TYR A   7      22.193   7.352  17.274  1.00 13.84           C
ATOM    159  CZ  TYR A   7      21.337   6.430  16.701  1.00 14.98           C
ATOM    160  OH  TYR A   7      20.055   6.301  17.164  1.00 14.28           O
ATOM    161  OXT TYR A   7      27.649   8.711  14.468  1.00 17.34           O
ATOM    162  H   TYR A   7      24.401   6.693  12.946  1.00 14.62           H
ATOM    163  HA  TYR A   7      25.148   8.689  14.546  1.00 15.04           H
ATOM    164  HB2 TYR A   7      25.607   5.925  14.860  1.00 14.86           H
ATOM    165  HB3 TYR A   7      25.926   7.014  15.975  1.00 14.86           H
ATOM    166  HD1 TYR A   7      23.341   5.191  14.503  1.00 15.46           H
ATOM    167  HD2 TYR A   7      24.073   8.080  17.178  1.00 14.37           H
ATOM    168  HE1 TYR A   7      21.183   5.000  15.287  1.00 13.24           H
ATOM    169  HE2 TYR A   7      21.902   7.893  17.972  1.00 13.84           H
ATOM    170  HH  TYR A   7      19.851   6.969  17.629  1.00 14.28           H
TER
HETATM  171  O   HOH S   8       9.815  10.928  13.987  1.00 22.61           O
HETATM  172  O   HOH S   9      26.715   7.572  10.077  1.00 19.32           O
HETATM  173  O   HOH S  10       5.000   7.470   5.401  1.00 16.97           O
HETATM  174  O   HOH S  11      28.091   9.896  16.830  1.00 23.89           O
HETATM  175  O   HOH S  12      29.896   7.023  16.061  1.00 26.08           O
HETATM  176  O   HOH S  13      13.552   9.160  16.880  1.00 38.68           O
HETATM  177  O   HOH S  14      14.793   6.375  17.843  1.00 44.24           O
TER
END
"""

def exercise():
  pdb_file = "tmp_ringer.pdb"
  f = open(pdb_file, "w")
  f.write(pdb_str)
  f.close()
  mtz_file = "tmp_ringer.mtz"
  cmd = " ".join([
    "phenix.fmodel",
    pdb_file,
    "high_resolution=2.0",
    "type=real",
    "r_free_flags_fraction=0.1",
    "random_seed=12345",
    "label=F",
    "output.file_name=%s" % mtz_file,
  ])
  print(cmd)
  assert not easy_run.call(cmd)
  result = easy_run.fully_buffered(
    "phenix.maps \"%s\" \"%s\" output.prefix=tmp_ringer" %
    (pdb_file, mtz_file)).raise_if_errors()
  assert (result.return_code == 0)
  result = easy_run.fully_buffered(
    "mmtbx.ringer \"%s\" tmp_ringer_map_coeffs.mtz" % pdb_file).raise_if_errors()
  with open("tmp_ringer_ringer.csv") as f:
    _lines1 = f.read().splitlines()
  lines1 = []
  for line in _lines1 :
    if ("2mFo-DFc" in line):
      lines1.append(line)
  os.remove("tmp_ringer_ringer.csv")
  assert (result.return_code == 0)
  # Now with ccp4 map as input
  result2 = easy_run.fully_buffered(
    "phenix.mtz2map tmp_ringer_map_coeffs.mtz")
  assert (result2.return_code == 0)
  result3 = easy_run.fully_buffered(
    "mmtbx.ringer \"%s\" tmp_ringer_map_coeffs_2mFo-DFc.ccp4" % pdb_file)
  assert (result3.return_code == 0) , "DL: crash is expected due to new sanity check. Will replace input map."
  with open("tmp_ringer_ringer.csv") as f:
    lines2 = f.read().splitlines()
  assert len(lines1) == len(lines2)
  for line1, line2 in zip(lines1, lines2):
    fields1 = line1.split(",")
    fields2 = line2.split(",")
    rho1 = flex.double([ float(x) for x in fields1[4:] ])
    rho2 = flex.double([ float(x) for x in fields2[4:] ])
    cc = flex.linear_correlation(x=rho1, y=rho2).coefficient()
    assert (cc >= 0.99), cc

if (__name__ == "__main__"):
  exercise()
  print("OK")


 *******************************************************************************
